This directory contains 
FdlibmTranslitN.java   automatically generated transliteration of Fdlibm 5.3 C files
Makefile               makefile to prepare FdlibmTranslitN.diff to view transliteration details
8/                     classfiles of FdlibmTranslitN.java compiled by OpenJDK 8
9/                     classfiles of FdlibmTranslitN.java compiled by OpenJDK 9

FdlibmTranslitN.java is generated by a program
../../translit-fdlibm/src/main/java/mytest/Main.java .
It takes a few Fdlibm 5.3 C files from
../netlib, calls libclang-3.7 to build Abstract Syntax Tree (AST) and
traverses AST to make patches. Also it prepends header and trailer from
../../translit-fdlibm/src/main/resources/mytest directory .

Here is a list of patches
1) Preprocessor patches:
 - Remove #include "fdlibm.h" ;
 - Handle #ifdef assuming that __STDC__ is defined and lint is undefines ;
 - Remove #progma ident ;
 - Handle a limited set of #define ... xxx directives in k_tan.c .
2) Replace
 i = d;
 by 
 i = (int) d;
 when i-integer and d-double.
3) Replace unsigned comparisons
  i REL j
  by
  Integer.compareUnsigned(i,j) REL 0
  where i or j is unsigned and REL is one of <,>,<=,>= .
4) Replace
   i == (unsigned int) j
   by
   i == j
   where i is unsigned int and j is int.
5) Replace in variable declarations
   *x
   by
   x[] .
6) Replace in variable declarations
   double x[N];
   by
   x[] = new double[N];
6) Replace in global constant declaration
   double x[] = {...};
   by
   x[] = new double[] {...};
7) Replace
   (*(unsigned*)&d)
   by
   __AMP(d)[0]
   where d is double.
8) Replace
   *(i + (unsigned*)&d)
   by
   __AMP(d)[i]
   where d is double and i is integer.
9) Replace unsigned shift
   (unsigned int) i >> j
   by
   i >>> j.
10) Remove keyword
    const.
11) Replace type
    unsigned
    by
    int .
12) Replace
    __LO(d) = i;
    __HI(d) = i;
    __HI(d) ^= i;
    by
    d=__LO(d,i);
    d=__HI(d,i);
    d=__HI(d,__HI(d)^i);
13) Replace uninitialized variables.
    int i;
    double d;
    by
    int i=U_INT;
    double d=U_DOUBLE;
14) Replace declaration of functions
    sqrt(double x)
    by
    statc strictfp compute(double x).
15) Replace calls of functions
    sqrt(d)
    by
    Sqrt.compute(d).
16) Replace guard expression
    if (m&1)
    by
    if ((m&1)!=0)
17) Replaces label and goto statement in k_rem_pio2.c by
    label recompute:
    ...
    goto recompute;
    ...
    by
    label recompute:for(;;) {
      ...
      continue recompute;
      ...
      break recompute;
    }

