(in-package "ACL2")
(include-book "../llvm")
(include-book "w_sqrt")

(defconst *__ieee754_hypot-globals* '())

(defund @__ieee754_hypot-%200 (mem)
  (b* (
    (%201 (load-double '(ret . 0) mem)))
  %201))

(defund @__ieee754_hypot-%198 (mem)
  (b* (
    (%199 (load-double '(w . 0) mem))
    (mem (store-double %199 '(ret . 0) mem)))
  (@__ieee754_hypot-%200 mem)))

(defund @__ieee754_hypot-%188 (mem)
  (b* (
    (mem (store-double #x3ff0000000000000 '(t1 . 0) mem))
    (%189 (load-i32 '(k . 0) mem))
    (%190 (shl-i32 %189 20))
    (%191 (bitcast-double*-to-i32* '(t1 . 0)))
    (%192 (getelementptr-i32 %191 1))
    (%193 (load-i32 %192 mem))
    (%194 (add-i32 %193 %190))
    (mem (store-i32 %194 %192 mem))
    (%195 (load-double '(t1 . 0) mem))
    (%196 (load-double '(w . 0) mem))
    (%197 (fmul-double %195 %196))
    (mem (store-double %197 '(ret . 0) mem)))
  (@__ieee754_hypot-%200 mem)))

(defund @__ieee754_hypot-%185 (mem)
  (b* (
    (%186 (load-i32 '(k . 0) mem))
    (%187 (icmp-ne-i32 %186 0)))
  (case %187
    (-1 (@__ieee754_hypot-%188 mem))
    (0 (@__ieee754_hypot-%198 mem)))))

(defund @__ieee754_hypot-%151 (mem)
  (b* (
    (%152 (load-double '(a . 0) mem))
    (%153 (load-double '(a . 0) mem))
    (%154 (fadd-double %152 %153))
    (mem (store-double %154 '(a . 0) mem))
    (mem (store-double #x0000000000000000 '(y1 . 0) mem))
    (%155 (load-i32 '(hb . 0) mem))
    (%156 (bitcast-double*-to-i32* '(y1 . 0)))
    (%157 (getelementptr-i32 %156 1))
    (mem (store-i32 %155 %157 mem))
    (%158 (load-double '(b . 0) mem))
    (%159 (load-double '(y1 . 0) mem))
    (%160 (fsub-double %158 %159))
    (mem (store-double %160 '(y2 . 0) mem))
    (mem (store-double #x0000000000000000 '(t1 . 0) mem))
    (%161 (load-i32 '(ha . 0) mem))
    (%162 (add-i32 %161 1048576))
    (%163 (bitcast-double*-to-i32* '(t1 . 0)))
    (%164 (getelementptr-i32 %163 1))
    (mem (store-i32 %162 %164 mem))
    (%165 (load-double '(a . 0) mem))
    (%166 (load-double '(t1 . 0) mem))
    (%167 (fsub-double %165 %166))
    (mem (store-double %167 '(t2 . 0) mem))
    (%168 (load-double '(t1 . 0) mem))
    (%169 (load-double '(y1 . 0) mem))
    (%170 (fmul-double %168 %169))
    (%171 (load-double '(w . 0) mem))
    (%172 (load-double '(w . 0) mem))
    (%173 (fsub-double #x8000000000000000 %172))
    (%174 (fmul-double %171 %173))
    (%175 (load-double '(t1 . 0) mem))
    (%176 (load-double '(y2 . 0) mem))
    (%177 (fmul-double %175 %176))
    (%178 (load-double '(t2 . 0) mem))
    (%179 (load-double '(b . 0) mem))
    (%180 (fmul-double %178 %179))
    (%181 (fadd-double %177 %180))
    (%182 (fsub-double %174 %181))
    (%183 (fsub-double %170 %182))
    (%184 (@sqrt %183))
    (mem (store-double %184 '(w . 0) mem)))
  (@__ieee754_hypot-%185 mem)))

(defund @__ieee754_hypot-%129 (mem)
  (b* (
    (mem (store-double #x0000000000000000 '(t1 . 0) mem))
    (%130 (load-i32 '(ha . 0) mem))
    (%131 (bitcast-double*-to-i32* '(t1 . 0)))
    (%132 (getelementptr-i32 %131 1))
    (mem (store-i32 %130 %132 mem))
    (%133 (load-double '(a . 0) mem))
    (%134 (load-double '(t1 . 0) mem))
    (%135 (fsub-double %133 %134))
    (mem (store-double %135 '(t2 . 0) mem))
    (%136 (load-double '(t1 . 0) mem))
    (%137 (load-double '(t1 . 0) mem))
    (%138 (fmul-double %136 %137))
    (%139 (load-double '(b . 0) mem))
    (%140 (load-double '(b . 0) mem))
    (%141 (fsub-double #x8000000000000000 %140))
    (%142 (fmul-double %139 %141))
    (%143 (load-double '(t2 . 0) mem))
    (%144 (load-double '(a . 0) mem))
    (%145 (load-double '(t1 . 0) mem))
    (%146 (fadd-double %144 %145))
    (%147 (fmul-double %143 %146))
    (%148 (fsub-double %142 %147))
    (%149 (fsub-double %138 %148))
    (%150 (@sqrt %149))
    (mem (store-double %150 '(w . 0) mem)))
  (@__ieee754_hypot-%185 mem)))

(defund @__ieee754_hypot-%122 (mem)
  (b* (
    (%123 (load-double '(a . 0) mem))
    (%124 (load-double '(b . 0) mem))
    (%125 (fsub-double %123 %124))
    (mem (store-double %125 '(w . 0) mem))
    (%126 (load-double '(w . 0) mem))
    (%127 (load-double '(b . 0) mem))
    (%128 (fcmp-ogt-double %126 %127)))
  (case %128
    (-1 (@__ieee754_hypot-%129 mem))
    (0 (@__ieee754_hypot-%151 mem)))))

(defund @__ieee754_hypot-%121 (mem)
  (b* ()
  (@__ieee754_hypot-%122 mem)))

(defund @__ieee754_hypot-%108 (mem)
  (b* (
    (%109 (load-i32 '(ha . 0) mem))
    (%110 (add-i32 %109 629145600))
    (mem (store-i32 %110 '(ha . 0) mem))
    (%111 (load-i32 '(hb . 0) mem))
    (%112 (add-i32 %111 629145600))
    (mem (store-i32 %112 '(hb . 0) mem))
    (%113 (load-i32 '(k . 0) mem))
    (%114 (sub-i32 %113 600))
    (mem (store-i32 %114 '(k . 0) mem))
    (%115 (load-i32 '(ha . 0) mem))
    (%116 (bitcast-double*-to-i32* '(a . 0)))
    (%117 (getelementptr-i32 %116 1))
    (mem (store-i32 %115 %117 mem))
    (%118 (load-i32 '(hb . 0) mem))
    (%119 (bitcast-double*-to-i32* '(b . 0)))
    (%120 (getelementptr-i32 %119 1))
    (mem (store-i32 %118 %120 mem)))
  (@__ieee754_hypot-%121 mem)))

(defund @__ieee754_hypot-%97 (mem)
  (b* (
    (mem (store-double #x0000000000000000 '(t1 . 0) mem))
    (%98 (bitcast-double*-to-i32* '(t1 . 0)))
    (%99 (getelementptr-i32 %98 1))
    (mem (store-i32 2144337920 %99 mem))
    (%100 (load-double '(t1 . 0) mem))
    (%101 (load-double '(b . 0) mem))
    (%102 (fmul-double %101 %100))
    (mem (store-double %102 '(b . 0) mem))
    (%103 (load-double '(t1 . 0) mem))
    (%104 (load-double '(a . 0) mem))
    (%105 (fmul-double %104 %103))
    (mem (store-double %105 '(a . 0) mem))
    (%106 (load-i32 '(k . 0) mem))
    (%107 (sub-i32 %106 1022))
    (mem (store-i32 %107 '(k . 0) mem)))
  (@__ieee754_hypot-%121 mem)))

(defund @__ieee754_hypot-%95 (mem)
  (b* (
    (%96 (load-double '(a . 0) mem))
    (mem (store-double %96 '(ret . 0) mem)))
  (@__ieee754_hypot-%200 mem)))

(defund @__ieee754_hypot-%89 (mem)
  (b* (
    (%90 (load-i32 '(hb . 0) mem))
    (%91 (bitcast-double*-to-i32* '(b . 0)))
    (%92 (load-i32 %91 mem))
    (%93 (or-i32 %90 %92))
    (%94 (icmp-eq-i32 %93 0)))
  (case %94
    (-1 (@__ieee754_hypot-%95 mem))
    (0 (@__ieee754_hypot-%97 mem)))))

(defund @__ieee754_hypot-%86 (mem)
  (b* (
    (%87 (load-i32 '(hb . 0) mem))
    (%88 (icmp-sle-i32 %87 1048575)))
  (case %88
    (-1 (@__ieee754_hypot-%89 mem))
    (0 (@__ieee754_hypot-%108 mem)))))

(defund @__ieee754_hypot-%83 (mem)
  (b* (
    (%84 (load-i32 '(hb . 0) mem))
    (%85 (icmp-slt-i32 %84 548405248)))
  (case %85
    (-1 (@__ieee754_hypot-%86 mem))
    (0 (@__ieee754_hypot-%122 mem)))))

(defund @__ieee754_hypot-%70 (mem)
  (b* (
    (%71 (load-i32 '(ha . 0) mem))
    (%72 (sub-i32 %71 629145600))
    (mem (store-i32 %72 '(ha . 0) mem))
    (%73 (load-i32 '(hb . 0) mem))
    (%74 (sub-i32 %73 629145600))
    (mem (store-i32 %74 '(hb . 0) mem))
    (%75 (load-i32 '(k . 0) mem))
    (%76 (add-i32 %75 600))
    (mem (store-i32 %76 '(k . 0) mem))
    (%77 (load-i32 '(ha . 0) mem))
    (%78 (bitcast-double*-to-i32* '(a . 0)))
    (%79 (getelementptr-i32 %78 1))
    (mem (store-i32 %77 %79 mem))
    (%80 (load-i32 '(hb . 0) mem))
    (%81 (bitcast-double*-to-i32* '(b . 0)))
    (%82 (getelementptr-i32 %81 1))
    (mem (store-i32 %80 %82 mem)))
  (@__ieee754_hypot-%83 mem)))

(defund @__ieee754_hypot-%68 (mem)
  (b* (
    (%69 (load-double '(w . 0) mem))
    (mem (store-double %69 '(ret . 0) mem)))
  (@__ieee754_hypot-%200 mem)))

(defund @__ieee754_hypot-%66 (mem)
  (b* (
    (%67 (load-double '(b . 0) mem))
    (mem (store-double %67 '(w . 0) mem)))
  (@__ieee754_hypot-%68 mem)))

(defund @__ieee754_hypot-%59 (mem)
  (b* (
    (%60 (load-i32 '(hb . 0) mem))
    (%61 (xor-i32 %60 2146435072))
    (%62 (bitcast-double*-to-i32* '(b . 0)))
    (%63 (load-i32 %62 mem))
    (%64 (or-i32 %61 %63))
    (%65 (icmp-eq-i32 %64 0)))
  (case %65
    (-1 (@__ieee754_hypot-%66 mem))
    (0 (@__ieee754_hypot-%68 mem)))))

(defund @__ieee754_hypot-%57 (mem)
  (b* (
    (%58 (load-double '(a . 0) mem))
    (mem (store-double %58 '(w . 0) mem)))
  (@__ieee754_hypot-%59 mem)))

(defund @__ieee754_hypot-%47 (mem)
  (b* (
    (%48 (load-double '(a . 0) mem))
    (%49 (load-double '(b . 0) mem))
    (%50 (fadd-double %48 %49))
    (mem (store-double %50 '(w . 0) mem))
    (%51 (load-i32 '(ha . 0) mem))
    (%52 (and-i32 %51 1048575))
    (%53 (bitcast-double*-to-i32* '(a . 0)))
    (%54 (load-i32 %53 mem))
    (%55 (or-i32 %52 %54))
    (%56 (icmp-eq-i32 %55 0)))
  (case %56
    (-1 (@__ieee754_hypot-%57 mem))
    (0 (@__ieee754_hypot-%59 mem)))))

(defund @__ieee754_hypot-%44 (mem)
  (b* (
    (%45 (load-i32 '(ha . 0) mem))
    (%46 (icmp-sge-i32 %45 2146435072)))
  (case %46
    (-1 (@__ieee754_hypot-%47 mem))
    (0 (@__ieee754_hypot-%70 mem)))))

(defund @__ieee754_hypot-%41 (mem)
  (b* (
    (mem (store-i32 0 '(k . 0) mem))
    (%42 (load-i32 '(ha . 0) mem))
    (%43 (icmp-sgt-i32 %42 1596981248)))
  (case %43
    (-1 (@__ieee754_hypot-%44 mem))
    (0 (@__ieee754_hypot-%83 mem)))))

(defund @__ieee754_hypot-%37 (mem)
  (b* (
    (%38 (load-double '(a . 0) mem))
    (%39 (load-double '(b . 0) mem))
    (%40 (fadd-double %38 %39))
    (mem (store-double %40 '(ret . 0) mem)))
  (@__ieee754_hypot-%200 mem)))

(defund @__ieee754_hypot-%26 (mem)
  (b* (
    (%27 (load-i32 '(ha . 0) mem))
    (%28 (bitcast-double*-to-i32* '(a . 0)))
    (%29 (getelementptr-i32 %28 1))
    (mem (store-i32 %27 %29 mem))
    (%30 (load-i32 '(hb . 0) mem))
    (%31 (bitcast-double*-to-i32* '(b . 0)))
    (%32 (getelementptr-i32 %31 1))
    (mem (store-i32 %30 %32 mem))
    (%33 (load-i32 '(ha . 0) mem))
    (%34 (load-i32 '(hb . 0) mem))
    (%35 (sub-i32 %33 %34))
    (%36 (icmp-sgt-i32 %35 62914560)))
  (case %36
    (-1 (@__ieee754_hypot-%37 mem))
    (0 (@__ieee754_hypot-%41 mem)))))

(defund @__ieee754_hypot-%23 (mem)
  (b* (
    (%24 (load-double '(x . 0) mem))
    (mem (store-double %24 '(a . 0) mem))
    (%25 (load-double '(y . 0) mem))
    (mem (store-double %25 '(b . 0) mem)))
  (@__ieee754_hypot-%26 mem)))

(defund @__ieee754_hypot-%17 (mem)
  (b* (
    (%18 (load-double '(y . 0) mem))
    (mem (store-double %18 '(a . 0) mem))
    (%19 (load-double '(x . 0) mem))
    (mem (store-double %19 '(b . 0) mem))
    (%20 (load-i32 '(ha . 0) mem))
    (mem (store-i32 %20 '(j . 0) mem))
    (%21 (load-i32 '(hb . 0) mem))
    (mem (store-i32 %21 '(ha . 0) mem))
    (%22 (load-i32 '(j . 0) mem))
    (mem (store-i32 %22 '(hb . 0) mem)))
  (@__ieee754_hypot-%26 mem)))

(defund @__ieee754_hypot-%0 (mem %x %y)
  (b* (
    (mem (alloca-double 'ret 1 mem))
    (mem (alloca-double 'x 1 mem))
    (mem (alloca-double 'y 1 mem))
    (mem (alloca-double 'a 1 mem))
    (mem (alloca-double 'b 1 mem))
    (mem (alloca-double 't1 1 mem))
    (mem (alloca-double 't2 1 mem))
    (mem (alloca-double 'y1 1 mem))
    (mem (alloca-double 'y2 1 mem))
    (mem (alloca-double 'w 1 mem))
    (mem (alloca-i32 'j 1 mem))
    (mem (alloca-i32 'k 1 mem))
    (mem (alloca-i32 'ha 1 mem))
    (mem (alloca-i32 'hb 1 mem))
    (mem (store-double %x '(x . 0) mem))
    (mem (store-double %y '(y . 0) mem))
    (%4 (load-double '(x . 0) mem))
    (mem (store-double %4 '(a . 0) mem))
    (%5 (load-double '(y . 0) mem))
    (mem (store-double %5 '(b . 0) mem))
    (%6 (bitcast-double*-to-i32* '(x . 0)))
    (%7 (getelementptr-i32 %6 1))
    (%8 (load-i32 %7 mem))
    (%9 (and-i32 %8 2147483647))
    (mem (store-i32 %9 '(ha . 0) mem))
    (%10 (bitcast-double*-to-i32* '(y . 0)))
    (%11 (getelementptr-i32 %10 1))
    (%12 (load-i32 %11 mem))
    (%13 (and-i32 %12 2147483647))
    (mem (store-i32 %13 '(hb . 0) mem))
    (%14 (load-i32 '(hb . 0) mem))
    (%15 (load-i32 '(ha . 0) mem))
    (%16 (icmp-sgt-i32 %14 %15)))
  (case %16
    (-1 (@__ieee754_hypot-%17 mem))
    (0 (@__ieee754_hypot-%23 mem)))))

(defund @__ieee754_hypot (%x %y)
  (@__ieee754_hypot-%0 *__ieee754_hypot-globals*  %x %y))
