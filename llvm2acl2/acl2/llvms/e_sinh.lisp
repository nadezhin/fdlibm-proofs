(in-package "ACL2")
(include-book "../llvm")
(include-book "s_fabs")
(include-book "s_expm1")
(include-book "e_exp")

(defconst *__ieee754_sinh-globals* '(
  (one #x00000000 #x3ff00000)))

(defund @__ieee754_sinh-%0-bb (mem loc)
  (b* (
    (mem (alloca-double 'ret 1 mem))
    (mem (alloca-double 'x 1 mem))
    (mem (alloca-double 't 1 mem))
    (mem (alloca-double 'w 1 mem))
    (mem (alloca-double 'h 1 mem))
    (mem (alloca-i32 'ix 1 mem))
    (mem (alloca-i32 'jx 1 mem))
    (mem (alloca-i32 'lx 1 mem))
    (mem (store-double (g '%x loc) '(x . 0) mem))
    (loc (s '%3 (bitcast-double*-to-i32* '(x . 0)) loc))
    (loc (s '%4 (getelementptr-i32 (g '%3 loc) 1) loc))
    (loc (s '%5 (load-i32 (g '%4 loc) mem) loc))
    (mem (store-i32 (g '%5 loc) '(jx . 0) mem))
    (loc (s '%6 (load-i32 '(jx . 0) mem) loc))
    (loc (s '%7 (and-i32 (g '%6 loc) 2147483647) loc))
    (mem (store-i32 (g '%7 loc) '(ix . 0) mem))
    (loc (s '%8 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%9 (icmp-sge-i32 (g '%8 loc) 2146435072) loc)))
  (case (g '%9 loc)
    (-1 (mv '@__ieee754_sinh-%10-bb mem loc))
    ( 0 (mv '@__ieee754_sinh-%14-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_sinh-%10-bb (mem loc)
  (b* (
    (loc (s '%11 (load-double '(x . 0) mem) loc))
    (loc (s '%12 (load-double '(x . 0) mem) loc))
    (loc (s '%13 (fadd-double (g '%11 loc) (g '%12 loc)) loc))
    (mem (store-double (g '%13 loc) '(ret . 0) mem)))
  (mv '@__ieee754_sinh-%98-bb mem loc)))

(defund @__ieee754_sinh-%14-bb (mem loc)
  (b* (
    (mem (store-double #x3fe0000000000000 '(h . 0) mem))
    (loc (s '%15 (load-i32 '(jx . 0) mem) loc))
    (loc (s '%16 (icmp-slt-i32 (g '%15 loc) 0) loc)))
  (case (g '%16 loc)
    (-1 (mv '@__ieee754_sinh-%17-bb mem loc))
    ( 0 (mv '@__ieee754_sinh-%20-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_sinh-%17-bb (mem loc)
  (b* (
    (loc (s '%18 (load-double '(h . 0) mem) loc))
    (loc (s '%19 (fsub-double #x8000000000000000 (g '%18 loc)) loc))
    (mem (store-double (g '%19 loc) '(h . 0) mem)))
  (mv '@__ieee754_sinh-%20-bb mem loc)))

(defund @__ieee754_sinh-%20-bb (mem loc)
  (b* (
    (loc (s '%21 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%22 (icmp-slt-i32 (g '%21 loc) 1077280768) loc)))
  (case (g '%22 loc)
    (-1 (mv '@__ieee754_sinh-%23-bb mem loc))
    ( 0 (mv '@__ieee754_sinh-%60-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_sinh-%23-bb (mem loc)
  (b* (
    (loc (s '%24 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%25 (icmp-slt-i32 (g '%24 loc) 1043333120) loc)))
  (case (g '%25 loc)
    (-1 (mv '@__ieee754_sinh-%26-bb mem loc))
    ( 0 (mv '@__ieee754_sinh-%33-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_sinh-%26-bb (mem loc)
  (b* (
    (loc (s '%27 (load-double '(x . 0) mem) loc))
    (loc (s '%28 (fadd-double #x7fac7b1f3cac7433 (g '%27 loc)) loc))
    (loc (s '%29 (fcmp-ogt-double (g '%28 loc) #x3ff0000000000000) loc)))
  (case (g '%29 loc)
    (-1 (mv '@__ieee754_sinh-%30-bb mem loc))
    ( 0 (mv '@__ieee754_sinh-%32-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_sinh-%30-bb (mem loc)
  (b* (
    (loc (s '%31 (load-double '(x . 0) mem) loc))
    (mem (store-double (g '%31 loc) '(ret . 0) mem)))
  (mv '@__ieee754_sinh-%98-bb mem loc)))

(defund @__ieee754_sinh-%32-bb (mem loc)
  (b* ()
  (mv '@__ieee754_sinh-%33-bb mem loc)))

(defund @__ieee754_sinh-%33-bb (mem loc)
  (b* (
    (loc (s '%34 (load-double '(x . 0) mem) loc))
    (loc (s '%35 (@fabs (g '%34 loc)) loc))
    (loc (s '%36 (@expm1 (g '%35 loc)) loc))
    (mem (store-double (g '%36 loc) '(t . 0) mem))
    (loc (s '%37 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%38 (icmp-slt-i32 (g '%37 loc) 1072693248) loc)))
  (case (g '%38 loc)
    (-1 (mv '@__ieee754_sinh-%39-bb mem loc))
    ( 0 (mv '@__ieee754_sinh-%51-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_sinh-%39-bb (mem loc)
  (b* (
    (loc (s '%40 (load-double '(h . 0) mem) loc))
    (loc (s '%41 (load-double '(t . 0) mem) loc))
    (loc (s '%42 (fmul-double #x4000000000000000 (g '%41 loc)) loc))
    (loc (s '%43 (load-double '(t . 0) mem) loc))
    (loc (s '%44 (load-double '(t . 0) mem) loc))
    (loc (s '%45 (fmul-double (g '%43 loc) (g '%44 loc)) loc))
    (loc (s '%46 (load-double '(t . 0) mem) loc))
    (loc (s '%47 (fadd-double (g '%46 loc) #x3ff0000000000000) loc))
    (loc (s '%48 (fdiv-double (g '%45 loc) (g '%47 loc)) loc))
    (loc (s '%49 (fsub-double (g '%42 loc) (g '%48 loc)) loc))
    (loc (s '%50 (fmul-double (g '%40 loc) (g '%49 loc)) loc))
    (mem (store-double (g '%50 loc) '(ret . 0) mem)))
  (mv '@__ieee754_sinh-%98-bb mem loc)))

(defund @__ieee754_sinh-%51-bb (mem loc)
  (b* (
    (loc (s '%52 (load-double '(h . 0) mem) loc))
    (loc (s '%53 (load-double '(t . 0) mem) loc))
    (loc (s '%54 (load-double '(t . 0) mem) loc))
    (loc (s '%55 (load-double '(t . 0) mem) loc))
    (loc (s '%56 (fadd-double (g '%55 loc) #x3ff0000000000000) loc))
    (loc (s '%57 (fdiv-double (g '%54 loc) (g '%56 loc)) loc))
    (loc (s '%58 (fadd-double (g '%53 loc) (g '%57 loc)) loc))
    (loc (s '%59 (fmul-double (g '%52 loc) (g '%58 loc)) loc))
    (mem (store-double (g '%59 loc) '(ret . 0) mem)))
  (mv '@__ieee754_sinh-%98-bb mem loc)))

(defund @__ieee754_sinh-%60-bb (mem loc)
  (b* (
    (loc (s '%61 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%62 (icmp-slt-i32 (g '%61 loc) 1082535490) loc)))
  (case (g '%62 loc)
    (-1 (mv '@__ieee754_sinh-%63-bb mem loc))
    ( 0 (mv '@__ieee754_sinh-%69-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_sinh-%63-bb (mem loc)
  (b* (
    (loc (s '%64 (load-double '(h . 0) mem) loc))
    (loc (s '%65 (load-double '(x . 0) mem) loc))
    (loc (s '%66 (@fabs (g '%65 loc)) loc))
    (loc (s '%67 (@__ieee754_exp (g '%66 loc)) loc))
    (loc (s '%68 (fmul-double (g '%64 loc) (g '%67 loc)) loc))
    (mem (store-double (g '%68 loc) '(ret . 0) mem)))
  (mv '@__ieee754_sinh-%98-bb mem loc)))

(defund @__ieee754_sinh-%69-bb (mem loc)
  (b* (
    (loc (s '%70 (load-i32 '(one . 0) mem) loc))
    (loc (s '%71 (lshr-i32 (g '%70 loc) 29) loc))
    (loc (s '%72 (bitcast-double*-to-i32* '(x . 0)) loc))
    (loc (s '%73 (zext-i32-to-i64 (g '%71 loc)) loc))
    (loc (s '%74 (getelementptr-i32 (g '%72 loc) (g '%73 loc)) loc))
    (loc (s '%75 (load-i32 (g '%74 loc) mem) loc))
    (mem (store-i32 (g '%75 loc) '(lx . 0) mem))
    (loc (s '%76 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%77 (icmp-slt-i32 (g '%76 loc) 1082536910) loc)))
  (case (g '%77 loc)
    (-1 (mv '@__ieee754_sinh-%84-bb mem loc))
    ( 0 (mv '@__ieee754_sinh-%78-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_sinh-%78-bb (mem loc)
  (b* (
    (loc (s '%79 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%80 (icmp-eq-i32 (g '%79 loc) 1082536910) loc)))
  (case (g '%80 loc)
    (-1 (mv '@__ieee754_sinh-%81-bb mem loc))
    ( 0 (mv '@__ieee754_sinh-%95-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_sinh-%81-bb (mem loc)
  (b* (
    (loc (s '%82 (load-i32 '(lx . 0) mem) loc))
    (loc (s '%83 (icmp-ule-i32 (g '%82 loc) -1883637635) loc)))
  (case (g '%83 loc)
    (-1 (mv '@__ieee754_sinh-%84-bb mem loc))
    ( 0 (mv '@__ieee754_sinh-%95-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_sinh-%84-bb (mem loc)
  (b* (
    (loc (s '%85 (load-double '(x . 0) mem) loc))
    (loc (s '%86 (@fabs (g '%85 loc)) loc))
    (loc (s '%87 (fmul-double #x3fe0000000000000 (g '%86 loc)) loc))
    (loc (s '%88 (@__ieee754_exp (g '%87 loc)) loc))
    (mem (store-double (g '%88 loc) '(w . 0) mem))
    (loc (s '%89 (load-double '(h . 0) mem) loc))
    (loc (s '%90 (load-double '(w . 0) mem) loc))
    (loc (s '%91 (fmul-double (g '%89 loc) (g '%90 loc)) loc))
    (mem (store-double (g '%91 loc) '(t . 0) mem))
    (loc (s '%92 (load-double '(t . 0) mem) loc))
    (loc (s '%93 (load-double '(w . 0) mem) loc))
    (loc (s '%94 (fmul-double (g '%92 loc) (g '%93 loc)) loc))
    (mem (store-double (g '%94 loc) '(ret . 0) mem)))
  (mv '@__ieee754_sinh-%98-bb mem loc)))

(defund @__ieee754_sinh-%95-bb (mem loc)
  (b* (
    (loc (s '%96 (load-double '(x . 0) mem) loc))
    (loc (s '%97 (fmul-double (g '%96 loc) #x7fac7b1f3cac7433) loc))
    (mem (store-double (g '%97 loc) '(ret . 0) mem)))
  (mv '@__ieee754_sinh-%98-bb mem loc)))

(defund @__ieee754_sinh-%98-bb (mem loc)
  (b* (
    (loc (s '%99 (load-double '(ret . 0) mem) loc)))
  (mv 'ret mem loc)))

(defund @__ieee754_sinh-step (label mem loc)
  (case label
    (%-0 (@__ieee754_sinh-%0-bb mem loc))
    (%-10 (@__ieee754_sinh-%10-bb mem loc))
    (%-14 (@__ieee754_sinh-%14-bb mem loc))
    (%-17 (@__ieee754_sinh-%17-bb mem loc))
    (%-20 (@__ieee754_sinh-%20-bb mem loc))
    (%-23 (@__ieee754_sinh-%23-bb mem loc))
    (%-26 (@__ieee754_sinh-%26-bb mem loc))
    (%-30 (@__ieee754_sinh-%30-bb mem loc))
    (%-32 (@__ieee754_sinh-%32-bb mem loc))
    (%-33 (@__ieee754_sinh-%33-bb mem loc))
    (%-39 (@__ieee754_sinh-%39-bb mem loc))
    (%-51 (@__ieee754_sinh-%51-bb mem loc))
    (%-60 (@__ieee754_sinh-%60-bb mem loc))
    (%-63 (@__ieee754_sinh-%63-bb mem loc))
    (%-69 (@__ieee754_sinh-%69-bb mem loc))
    (%-78 (@__ieee754_sinh-%78-bb mem loc))
    (%-81 (@__ieee754_sinh-%81-bb mem loc))
    (%-84 (@__ieee754_sinh-%84-bb mem loc))
    (%-95 (@__ieee754_sinh-%95-bb mem loc))
    (%-98 (@__ieee754_sinh-%98-bb mem loc))
    (otherwise (mv nil mem loc))))

(defund @__ieee754_sinh-steps (label mem loc n)
  (declare (xargs :measure (nfix n)))
  (if (equal label 'ret)
      (g '%99 loc)
    (if (zp n) nil
      (mv-let
        (label mem loc)
        (@__ieee754_sinh-step label mem loc)
        (@__ieee754_sinh-steps label mem loc (1- n))))))

(defund @__ieee754_sinh (%x)
  (declare (ignore %x))
   nil)
