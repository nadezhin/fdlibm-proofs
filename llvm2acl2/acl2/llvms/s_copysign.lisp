(in-package "ACL2")
(include-book "std/util/defrule" :dir :system)
(include-book "../llvm")

(defconst *copysign-globals* '())

(defconst *copysign-labels* '(%0))

(defund @copysign-%0-mem (s0)
  (car s0))
(defund @copysign-%0-loc (s0)
  (cadr s0))
(defund @copysign-%0-pred (s0)
  (caddr s0))
(defund @copysign-%1-mem (s0)
  (alloca-double 'ret 1 (@copysign-%0-mem s0)))
(defund @copysign-%1-loc (s0)
  (s '%1 '(ret . 0) (@copysign-%0-loc s0)))
(defund @copysign-%2-mem (s0)
  (alloca-double 'x 1 (@copysign-%1-mem s0)))
(defund @copysign-%2-loc (s0)
  (s '%2 '(x . 0) (@copysign-%1-loc s0)))
(defund @copysign-m0.1-mem (s0)
  (store-double (g '%x (@copysign-%2-loc s0)) (g '%1 (@copysign-%2-loc s0)) (@copysign-%2-mem s0)))
(defund @copysign-m0.2-mem (s0)
  (store-double (g '%y (@copysign-%2-loc s0)) (g '%2 (@copysign-%2-loc s0)) (@copysign-m0.1-mem s0)))
(defund @copysign-%3-val (s0)
  (bitcast-double*-to-i32* (g '%1 (@copysign-%2-loc s0))))
(defund @copysign-%3-loc (s0)
  (s '%3 (@copysign-%3-val s0) (@copysign-%2-loc s0)))
(defund @copysign-%4-val (s0)
  (getelementptr-i32 (g '%3 (@copysign-%3-loc s0)) 1))
(defund @copysign-%4-loc (s0)
  (s '%4 (@copysign-%4-val s0) (@copysign-%3-loc s0)))
(defund @copysign-%5-val (s0)
  (load-i32 (g '%4 (@copysign-%4-loc s0)) (@copysign-m0.2-mem s0)))
(defund @copysign-%5-loc (s0)
  (s '%5 (@copysign-%5-val s0) (@copysign-%4-loc s0)))
(defund @copysign-%6-val (s0)
  (and-i32 (g '%5 (@copysign-%5-loc s0)) 2147483647))
(defund @copysign-%6-loc (s0)
  (s '%6 (@copysign-%6-val s0) (@copysign-%5-loc s0)))
(defund @copysign-%7-val (s0)
  (bitcast-double*-to-i32* (g '%2 (@copysign-%6-loc s0))))
(defund @copysign-%7-loc (s0)
  (s '%7 (@copysign-%7-val s0) (@copysign-%6-loc s0)))
(defund @copysign-%8-val (s0)
  (getelementptr-i32 (g '%7 (@copysign-%7-loc s0)) 1))
(defund @copysign-%8-loc (s0)
  (s '%8 (@copysign-%8-val s0) (@copysign-%7-loc s0)))
(defund @copysign-%9-val (s0)
  (load-i32 (g '%8 (@copysign-%8-loc s0)) (@copysign-m0.2-mem s0)))
(defund @copysign-%9-loc (s0)
  (s '%9 (@copysign-%9-val s0) (@copysign-%8-loc s0)))
(defund @copysign-%10-val (s0)
  (and-i32 (g '%9 (@copysign-%9-loc s0)) -2147483648))
(defund @copysign-%10-loc (s0)
  (s '%10 (@copysign-%10-val s0) (@copysign-%9-loc s0)))
(defund @copysign-%11-val (s0)
  (or-i32 (g '%6 (@copysign-%10-loc s0)) (g '%10 (@copysign-%10-loc s0))))
(defund @copysign-%11-loc (s0)
  (s '%11 (@copysign-%11-val s0) (@copysign-%10-loc s0)))
(defund @copysign-%12-val (s0)
  (bitcast-double*-to-i32* (g '%1 (@copysign-%11-loc s0))))
(defund @copysign-%12-loc (s0)
  (s '%12 (@copysign-%12-val s0) (@copysign-%11-loc s0)))
(defund @copysign-%13-val (s0)
  (getelementptr-i32 (g '%12 (@copysign-%12-loc s0)) 1))
(defund @copysign-%13-loc (s0)
  (s '%13 (@copysign-%13-val s0) (@copysign-%12-loc s0)))
(defund @copysign-m0.3-mem (s0)
  (store-i32 (g '%11 (@copysign-%13-loc s0)) (g '%13 (@copysign-%13-loc s0)) (@copysign-m0.2-mem s0)))
(defund @copysign-%14-val (s0)
  (load-double (g '%1 (@copysign-%13-loc s0)) (@copysign-m0.3-mem s0)))
(defund @copysign-%14-loc (s0)
  (s '%14 (@copysign-%14-val s0) (@copysign-%13-loc s0)))
(defund @copysign-succ0-lab (s0)
  (declare (ignore s0))
  'ret)

(defund @copysign-succ0-rev (mem loc pred)
  (declare (ignore pred))
  (mv 'ret mem loc))
(defund @copysign-%14-rev (mem loc pred)
  (@copysign-succ0-rev mem (s '%14 (load-double (g '%1 loc) mem) loc) pred))
(defund @copysign-m0.3-rev (mem loc pred)
  (@copysign-%14-rev (store-i32 (g '%11 loc) (g '%13 loc) mem) loc pred))
(defund @copysign-%13-rev (mem loc pred)
  (@copysign-m0.3-rev mem (s '%13 (getelementptr-i32 (g '%12 loc) 1) loc) pred))
(defund @copysign-%12-rev (mem loc pred)
  (@copysign-%13-rev mem (s '%12 (bitcast-double*-to-i32* (g '%1 loc)) loc) pred))
(defund @copysign-%11-rev (mem loc pred)
  (@copysign-%12-rev mem (s '%11 (or-i32 (g '%6 loc) (g '%10 loc)) loc) pred))
(defund @copysign-%10-rev (mem loc pred)
  (@copysign-%11-rev mem (s '%10 (and-i32 (g '%9 loc) -2147483648) loc) pred))
(defund @copysign-%9-rev (mem loc pred)
  (@copysign-%10-rev mem (s '%9 (load-i32 (g '%8 loc) mem) loc) pred))
(defund @copysign-%8-rev (mem loc pred)
  (@copysign-%9-rev mem (s '%8 (getelementptr-i32 (g '%7 loc) 1) loc) pred))
(defund @copysign-%7-rev (mem loc pred)
  (@copysign-%8-rev mem (s '%7 (bitcast-double*-to-i32* (g '%2 loc)) loc) pred))
(defund @copysign-%6-rev (mem loc pred)
  (@copysign-%7-rev mem (s '%6 (and-i32 (g '%5 loc) 2147483647) loc) pred))
(defund @copysign-%5-rev (mem loc pred)
  (@copysign-%6-rev mem (s '%5 (load-i32 (g '%4 loc) mem) loc) pred))
(defund @copysign-%4-rev (mem loc pred)
  (@copysign-%5-rev mem (s '%4 (getelementptr-i32 (g '%3 loc) 1) loc) pred))
(defund @copysign-%3-rev (mem loc pred)
  (@copysign-%4-rev mem (s '%3 (bitcast-double*-to-i32* (g '%1 loc)) loc) pred))
(defund @copysign-m0.2-rev (mem loc pred)
  (@copysign-%3-rev (store-double (g '%y loc) (g '%2 loc) mem) loc pred))
(defund @copysign-m0.1-rev (mem loc pred)
  (@copysign-m0.2-rev (store-double (g '%x loc) (g '%1 loc) mem) loc pred))
(defund @copysign-%2-rev (mem loc pred)
  (@copysign-m0.1-rev (alloca-double 'x 1 mem) (s '%2 '(x . 0) loc) pred))
(defund @copysign-%1-rev (mem loc pred)
  (@copysign-%2-rev (alloca-double 'ret 1 mem) (s '%1 '(ret . 0) loc) pred))

(defund @copysign-%0-rev (mem loc pred)
  (@copysign-%1-rev mem loc pred))

(defund @copysign-%0-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (mem (alloca-double 'ret 1 mem))
    (loc (s '%1 '(ret . 0) loc))
    (mem (alloca-double 'x 1 mem))
    (loc (s '%2 '(x . 0) loc))
    (mem (store-double (g '%x loc) (g '%1 loc) mem))
    (mem (store-double (g '%y loc) (g '%2 loc) mem))
    (loc (s '%3 (bitcast-double*-to-i32* (g '%1 loc)) loc))
    (loc (s '%4 (getelementptr-i32 (g '%3 loc) 1) loc))
    (loc (s '%5 (load-i32 (g '%4 loc) mem) loc))
    (loc (s '%6 (and-i32 (g '%5 loc) 2147483647) loc))
    (loc (s '%7 (bitcast-double*-to-i32* (g '%2 loc)) loc))
    (loc (s '%8 (getelementptr-i32 (g '%7 loc) 1) loc))
    (loc (s '%9 (load-i32 (g '%8 loc) mem) loc))
    (loc (s '%10 (and-i32 (g '%9 loc) -2147483648) loc))
    (loc (s '%11 (or-i32 (g '%6 loc) (g '%10 loc)) loc))
    (loc (s '%12 (bitcast-double*-to-i32* (g '%1 loc)) loc))
    (loc (s '%13 (getelementptr-i32 (g '%12 loc) 1) loc))
    (mem (store-i32 (g '%11 loc) (g '%13 loc) mem))
    (loc (s '%14 (load-double (g '%1 loc) mem) loc))
    (succ 'ret))
  (mv succ mem loc)))

(defruled @copysign-%0-expand-bb
  (equal (@copysign-%0-bb mem loc pred)
         (@copysign-%0-rev mem loc pred))
  :enable (@copysign-%0-bb @copysign-%0-rev
    @copysign-%1-rev
    @copysign-%2-rev
    @copysign-m0.1-rev
    @copysign-m0.2-rev
    @copysign-%3-rev
    @copysign-%4-rev
    @copysign-%5-rev
    @copysign-%6-rev
    @copysign-%7-rev
    @copysign-%8-rev
    @copysign-%9-rev
    @copysign-%10-rev
    @copysign-%11-rev
    @copysign-%12-rev
    @copysign-%13-rev
    @copysign-m0.3-rev
    @copysign-%14-rev
    @copysign-succ0-rev)
  :disable s-diff-s)

(defund @copysign-step (label mem loc pred)
  (case label
    (%0 (@copysign-%0-bb mem loc pred))
    (otherwise (mv nil mem loc))))

(defund @copysign-steps (label mem loc pred n)
  (declare (xargs :measure (nfix n)))
  (if (equal label 'ret)
      (g '%14 loc)
    (if (zp n) nil
      (mv-let
        (new-label new-mem new-loc)
        (@copysign-step label mem loc pred)
        (@copysign-steps new-label new-mem new-loc label (1- n))))))

(defund @copysign (%x %y)
  (declare (ignore %x %y))
   nil)
