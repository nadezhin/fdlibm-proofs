(in-package "ACL2")
(include-book "../llvm")
(include-book "w_sqrt")

(defconst *__ieee754_hypot-globals* '())

(defund @__ieee754_hypot-%0-bb (mem loc)
  (b* (
    (mem (alloca-double 'ret 1 mem))
    (mem (alloca-double 'x 1 mem))
    (mem (alloca-double 'y 1 mem))
    (mem (alloca-double 'a 1 mem))
    (mem (alloca-double 'b 1 mem))
    (mem (alloca-double 't1 1 mem))
    (mem (alloca-double 't2 1 mem))
    (mem (alloca-double 'y1 1 mem))
    (mem (alloca-double 'y2 1 mem))
    (mem (alloca-double 'w 1 mem))
    (mem (alloca-i32 'j 1 mem))
    (mem (alloca-i32 'k 1 mem))
    (mem (alloca-i32 'ha 1 mem))
    (mem (alloca-i32 'hb 1 mem))
    (mem (store-double (g '%x loc) '(x . 0) mem))
    (mem (store-double (g '%y loc) '(y . 0) mem))
    (loc (s '%4 (load-double '(x . 0) mem) loc))
    (mem (store-double (g '%4 loc) '(a . 0) mem))
    (loc (s '%5 (load-double '(y . 0) mem) loc))
    (mem (store-double (g '%5 loc) '(b . 0) mem))
    (loc (s '%6 (bitcast-double*-to-i32* '(x . 0)) loc))
    (loc (s '%7 (getelementptr-i32 (g '%6 loc) 1) loc))
    (loc (s '%8 (load-i32 (g '%7 loc) mem) loc))
    (loc (s '%9 (and-i32 (g '%8 loc) 2147483647) loc))
    (mem (store-i32 (g '%9 loc) '(ha . 0) mem))
    (loc (s '%10 (bitcast-double*-to-i32* '(y . 0)) loc))
    (loc (s '%11 (getelementptr-i32 (g '%10 loc) 1) loc))
    (loc (s '%12 (load-i32 (g '%11 loc) mem) loc))
    (loc (s '%13 (and-i32 (g '%12 loc) 2147483647) loc))
    (mem (store-i32 (g '%13 loc) '(hb . 0) mem))
    (loc (s '%14 (load-i32 '(hb . 0) mem) loc))
    (loc (s '%15 (load-i32 '(ha . 0) mem) loc))
    (loc (s '%16 (icmp-sgt-i32 (g '%14 loc) (g '%15 loc)) loc)))
  (case (g '%16 loc)
    (-1 (mv '@__ieee754_hypot-%17-bb mem loc))
    ( 0 (mv '@__ieee754_hypot-%23-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_hypot-%17-bb (mem loc)
  (b* (
    (loc (s '%18 (load-double '(y . 0) mem) loc))
    (mem (store-double (g '%18 loc) '(a . 0) mem))
    (loc (s '%19 (load-double '(x . 0) mem) loc))
    (mem (store-double (g '%19 loc) '(b . 0) mem))
    (loc (s '%20 (load-i32 '(ha . 0) mem) loc))
    (mem (store-i32 (g '%20 loc) '(j . 0) mem))
    (loc (s '%21 (load-i32 '(hb . 0) mem) loc))
    (mem (store-i32 (g '%21 loc) '(ha . 0) mem))
    (loc (s '%22 (load-i32 '(j . 0) mem) loc))
    (mem (store-i32 (g '%22 loc) '(hb . 0) mem)))
  (mv '@__ieee754_hypot-%26-bb mem loc)))

(defund @__ieee754_hypot-%23-bb (mem loc)
  (b* (
    (loc (s '%24 (load-double '(x . 0) mem) loc))
    (mem (store-double (g '%24 loc) '(a . 0) mem))
    (loc (s '%25 (load-double '(y . 0) mem) loc))
    (mem (store-double (g '%25 loc) '(b . 0) mem)))
  (mv '@__ieee754_hypot-%26-bb mem loc)))

(defund @__ieee754_hypot-%26-bb (mem loc)
  (b* (
    (loc (s '%27 (load-i32 '(ha . 0) mem) loc))
    (loc (s '%28 (bitcast-double*-to-i32* '(a . 0)) loc))
    (loc (s '%29 (getelementptr-i32 (g '%28 loc) 1) loc))
    (mem (store-i32 (g '%27 loc) (g '%29 loc) mem))
    (loc (s '%30 (load-i32 '(hb . 0) mem) loc))
    (loc (s '%31 (bitcast-double*-to-i32* '(b . 0)) loc))
    (loc (s '%32 (getelementptr-i32 (g '%31 loc) 1) loc))
    (mem (store-i32 (g '%30 loc) (g '%32 loc) mem))
    (loc (s '%33 (load-i32 '(ha . 0) mem) loc))
    (loc (s '%34 (load-i32 '(hb . 0) mem) loc))
    (loc (s '%35 (sub-i32 (g '%33 loc) (g '%34 loc)) loc))
    (loc (s '%36 (icmp-sgt-i32 (g '%35 loc) 62914560) loc)))
  (case (g '%36 loc)
    (-1 (mv '@__ieee754_hypot-%37-bb mem loc))
    ( 0 (mv '@__ieee754_hypot-%41-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_hypot-%37-bb (mem loc)
  (b* (
    (loc (s '%38 (load-double '(a . 0) mem) loc))
    (loc (s '%39 (load-double '(b . 0) mem) loc))
    (loc (s '%40 (fadd-double (g '%38 loc) (g '%39 loc)) loc))
    (mem (store-double (g '%40 loc) '(ret . 0) mem)))
  (mv '@__ieee754_hypot-%200-bb mem loc)))

(defund @__ieee754_hypot-%41-bb (mem loc)
  (b* (
    (mem (store-i32 0 '(k . 0) mem))
    (loc (s '%42 (load-i32 '(ha . 0) mem) loc))
    (loc (s '%43 (icmp-sgt-i32 (g '%42 loc) 1596981248) loc)))
  (case (g '%43 loc)
    (-1 (mv '@__ieee754_hypot-%44-bb mem loc))
    ( 0 (mv '@__ieee754_hypot-%83-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_hypot-%44-bb (mem loc)
  (b* (
    (loc (s '%45 (load-i32 '(ha . 0) mem) loc))
    (loc (s '%46 (icmp-sge-i32 (g '%45 loc) 2146435072) loc)))
  (case (g '%46 loc)
    (-1 (mv '@__ieee754_hypot-%47-bb mem loc))
    ( 0 (mv '@__ieee754_hypot-%70-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_hypot-%47-bb (mem loc)
  (b* (
    (loc (s '%48 (load-double '(a . 0) mem) loc))
    (loc (s '%49 (load-double '(b . 0) mem) loc))
    (loc (s '%50 (fadd-double (g '%48 loc) (g '%49 loc)) loc))
    (mem (store-double (g '%50 loc) '(w . 0) mem))
    (loc (s '%51 (load-i32 '(ha . 0) mem) loc))
    (loc (s '%52 (and-i32 (g '%51 loc) 1048575) loc))
    (loc (s '%53 (bitcast-double*-to-i32* '(a . 0)) loc))
    (loc (s '%54 (load-i32 (g '%53 loc) mem) loc))
    (loc (s '%55 (or-i32 (g '%52 loc) (g '%54 loc)) loc))
    (loc (s '%56 (icmp-eq-i32 (g '%55 loc) 0) loc)))
  (case (g '%56 loc)
    (-1 (mv '@__ieee754_hypot-%57-bb mem loc))
    ( 0 (mv '@__ieee754_hypot-%59-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_hypot-%57-bb (mem loc)
  (b* (
    (loc (s '%58 (load-double '(a . 0) mem) loc))
    (mem (store-double (g '%58 loc) '(w . 0) mem)))
  (mv '@__ieee754_hypot-%59-bb mem loc)))

(defund @__ieee754_hypot-%59-bb (mem loc)
  (b* (
    (loc (s '%60 (load-i32 '(hb . 0) mem) loc))
    (loc (s '%61 (xor-i32 (g '%60 loc) 2146435072) loc))
    (loc (s '%62 (bitcast-double*-to-i32* '(b . 0)) loc))
    (loc (s '%63 (load-i32 (g '%62 loc) mem) loc))
    (loc (s '%64 (or-i32 (g '%61 loc) (g '%63 loc)) loc))
    (loc (s '%65 (icmp-eq-i32 (g '%64 loc) 0) loc)))
  (case (g '%65 loc)
    (-1 (mv '@__ieee754_hypot-%66-bb mem loc))
    ( 0 (mv '@__ieee754_hypot-%68-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_hypot-%66-bb (mem loc)
  (b* (
    (loc (s '%67 (load-double '(b . 0) mem) loc))
    (mem (store-double (g '%67 loc) '(w . 0) mem)))
  (mv '@__ieee754_hypot-%68-bb mem loc)))

(defund @__ieee754_hypot-%68-bb (mem loc)
  (b* (
    (loc (s '%69 (load-double '(w . 0) mem) loc))
    (mem (store-double (g '%69 loc) '(ret . 0) mem)))
  (mv '@__ieee754_hypot-%200-bb mem loc)))

(defund @__ieee754_hypot-%70-bb (mem loc)
  (b* (
    (loc (s '%71 (load-i32 '(ha . 0) mem) loc))
    (loc (s '%72 (sub-i32 (g '%71 loc) 629145600) loc))
    (mem (store-i32 (g '%72 loc) '(ha . 0) mem))
    (loc (s '%73 (load-i32 '(hb . 0) mem) loc))
    (loc (s '%74 (sub-i32 (g '%73 loc) 629145600) loc))
    (mem (store-i32 (g '%74 loc) '(hb . 0) mem))
    (loc (s '%75 (load-i32 '(k . 0) mem) loc))
    (loc (s '%76 (add-i32 (g '%75 loc) 600) loc))
    (mem (store-i32 (g '%76 loc) '(k . 0) mem))
    (loc (s '%77 (load-i32 '(ha . 0) mem) loc))
    (loc (s '%78 (bitcast-double*-to-i32* '(a . 0)) loc))
    (loc (s '%79 (getelementptr-i32 (g '%78 loc) 1) loc))
    (mem (store-i32 (g '%77 loc) (g '%79 loc) mem))
    (loc (s '%80 (load-i32 '(hb . 0) mem) loc))
    (loc (s '%81 (bitcast-double*-to-i32* '(b . 0)) loc))
    (loc (s '%82 (getelementptr-i32 (g '%81 loc) 1) loc))
    (mem (store-i32 (g '%80 loc) (g '%82 loc) mem)))
  (mv '@__ieee754_hypot-%83-bb mem loc)))

(defund @__ieee754_hypot-%83-bb (mem loc)
  (b* (
    (loc (s '%84 (load-i32 '(hb . 0) mem) loc))
    (loc (s '%85 (icmp-slt-i32 (g '%84 loc) 548405248) loc)))
  (case (g '%85 loc)
    (-1 (mv '@__ieee754_hypot-%86-bb mem loc))
    ( 0 (mv '@__ieee754_hypot-%122-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_hypot-%86-bb (mem loc)
  (b* (
    (loc (s '%87 (load-i32 '(hb . 0) mem) loc))
    (loc (s '%88 (icmp-sle-i32 (g '%87 loc) 1048575) loc)))
  (case (g '%88 loc)
    (-1 (mv '@__ieee754_hypot-%89-bb mem loc))
    ( 0 (mv '@__ieee754_hypot-%108-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_hypot-%89-bb (mem loc)
  (b* (
    (loc (s '%90 (load-i32 '(hb . 0) mem) loc))
    (loc (s '%91 (bitcast-double*-to-i32* '(b . 0)) loc))
    (loc (s '%92 (load-i32 (g '%91 loc) mem) loc))
    (loc (s '%93 (or-i32 (g '%90 loc) (g '%92 loc)) loc))
    (loc (s '%94 (icmp-eq-i32 (g '%93 loc) 0) loc)))
  (case (g '%94 loc)
    (-1 (mv '@__ieee754_hypot-%95-bb mem loc))
    ( 0 (mv '@__ieee754_hypot-%97-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_hypot-%95-bb (mem loc)
  (b* (
    (loc (s '%96 (load-double '(a . 0) mem) loc))
    (mem (store-double (g '%96 loc) '(ret . 0) mem)))
  (mv '@__ieee754_hypot-%200-bb mem loc)))

(defund @__ieee754_hypot-%97-bb (mem loc)
  (b* (
    (mem (store-double #x0000000000000000 '(t1 . 0) mem))
    (loc (s '%98 (bitcast-double*-to-i32* '(t1 . 0)) loc))
    (loc (s '%99 (getelementptr-i32 (g '%98 loc) 1) loc))
    (mem (store-i32 2144337920 (g '%99 loc) mem))
    (loc (s '%100 (load-double '(t1 . 0) mem) loc))
    (loc (s '%101 (load-double '(b . 0) mem) loc))
    (loc (s '%102 (fmul-double (g '%101 loc) (g '%100 loc)) loc))
    (mem (store-double (g '%102 loc) '(b . 0) mem))
    (loc (s '%103 (load-double '(t1 . 0) mem) loc))
    (loc (s '%104 (load-double '(a . 0) mem) loc))
    (loc (s '%105 (fmul-double (g '%104 loc) (g '%103 loc)) loc))
    (mem (store-double (g '%105 loc) '(a . 0) mem))
    (loc (s '%106 (load-i32 '(k . 0) mem) loc))
    (loc (s '%107 (sub-i32 (g '%106 loc) 1022) loc))
    (mem (store-i32 (g '%107 loc) '(k . 0) mem)))
  (mv '@__ieee754_hypot-%121-bb mem loc)))

(defund @__ieee754_hypot-%108-bb (mem loc)
  (b* (
    (loc (s '%109 (load-i32 '(ha . 0) mem) loc))
    (loc (s '%110 (add-i32 (g '%109 loc) 629145600) loc))
    (mem (store-i32 (g '%110 loc) '(ha . 0) mem))
    (loc (s '%111 (load-i32 '(hb . 0) mem) loc))
    (loc (s '%112 (add-i32 (g '%111 loc) 629145600) loc))
    (mem (store-i32 (g '%112 loc) '(hb . 0) mem))
    (loc (s '%113 (load-i32 '(k . 0) mem) loc))
    (loc (s '%114 (sub-i32 (g '%113 loc) 600) loc))
    (mem (store-i32 (g '%114 loc) '(k . 0) mem))
    (loc (s '%115 (load-i32 '(ha . 0) mem) loc))
    (loc (s '%116 (bitcast-double*-to-i32* '(a . 0)) loc))
    (loc (s '%117 (getelementptr-i32 (g '%116 loc) 1) loc))
    (mem (store-i32 (g '%115 loc) (g '%117 loc) mem))
    (loc (s '%118 (load-i32 '(hb . 0) mem) loc))
    (loc (s '%119 (bitcast-double*-to-i32* '(b . 0)) loc))
    (loc (s '%120 (getelementptr-i32 (g '%119 loc) 1) loc))
    (mem (store-i32 (g '%118 loc) (g '%120 loc) mem)))
  (mv '@__ieee754_hypot-%121-bb mem loc)))

(defund @__ieee754_hypot-%121-bb (mem loc)
  (b* ()
  (mv '@__ieee754_hypot-%122-bb mem loc)))

(defund @__ieee754_hypot-%122-bb (mem loc)
  (b* (
    (loc (s '%123 (load-double '(a . 0) mem) loc))
    (loc (s '%124 (load-double '(b . 0) mem) loc))
    (loc (s '%125 (fsub-double (g '%123 loc) (g '%124 loc)) loc))
    (mem (store-double (g '%125 loc) '(w . 0) mem))
    (loc (s '%126 (load-double '(w . 0) mem) loc))
    (loc (s '%127 (load-double '(b . 0) mem) loc))
    (loc (s '%128 (fcmp-ogt-double (g '%126 loc) (g '%127 loc)) loc)))
  (case (g '%128 loc)
    (-1 (mv '@__ieee754_hypot-%129-bb mem loc))
    ( 0 (mv '@__ieee754_hypot-%151-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_hypot-%129-bb (mem loc)
  (b* (
    (mem (store-double #x0000000000000000 '(t1 . 0) mem))
    (loc (s '%130 (load-i32 '(ha . 0) mem) loc))
    (loc (s '%131 (bitcast-double*-to-i32* '(t1 . 0)) loc))
    (loc (s '%132 (getelementptr-i32 (g '%131 loc) 1) loc))
    (mem (store-i32 (g '%130 loc) (g '%132 loc) mem))
    (loc (s '%133 (load-double '(a . 0) mem) loc))
    (loc (s '%134 (load-double '(t1 . 0) mem) loc))
    (loc (s '%135 (fsub-double (g '%133 loc) (g '%134 loc)) loc))
    (mem (store-double (g '%135 loc) '(t2 . 0) mem))
    (loc (s '%136 (load-double '(t1 . 0) mem) loc))
    (loc (s '%137 (load-double '(t1 . 0) mem) loc))
    (loc (s '%138 (fmul-double (g '%136 loc) (g '%137 loc)) loc))
    (loc (s '%139 (load-double '(b . 0) mem) loc))
    (loc (s '%140 (load-double '(b . 0) mem) loc))
    (loc (s '%141 (fsub-double #x8000000000000000 (g '%140 loc)) loc))
    (loc (s '%142 (fmul-double (g '%139 loc) (g '%141 loc)) loc))
    (loc (s '%143 (load-double '(t2 . 0) mem) loc))
    (loc (s '%144 (load-double '(a . 0) mem) loc))
    (loc (s '%145 (load-double '(t1 . 0) mem) loc))
    (loc (s '%146 (fadd-double (g '%144 loc) (g '%145 loc)) loc))
    (loc (s '%147 (fmul-double (g '%143 loc) (g '%146 loc)) loc))
    (loc (s '%148 (fsub-double (g '%142 loc) (g '%147 loc)) loc))
    (loc (s '%149 (fsub-double (g '%138 loc) (g '%148 loc)) loc))
    (loc (s '%150 (@sqrt (g '%149 loc)) loc))
    (mem (store-double (g '%150 loc) '(w . 0) mem)))
  (mv '@__ieee754_hypot-%185-bb mem loc)))

(defund @__ieee754_hypot-%151-bb (mem loc)
  (b* (
    (loc (s '%152 (load-double '(a . 0) mem) loc))
    (loc (s '%153 (load-double '(a . 0) mem) loc))
    (loc (s '%154 (fadd-double (g '%152 loc) (g '%153 loc)) loc))
    (mem (store-double (g '%154 loc) '(a . 0) mem))
    (mem (store-double #x0000000000000000 '(y1 . 0) mem))
    (loc (s '%155 (load-i32 '(hb . 0) mem) loc))
    (loc (s '%156 (bitcast-double*-to-i32* '(y1 . 0)) loc))
    (loc (s '%157 (getelementptr-i32 (g '%156 loc) 1) loc))
    (mem (store-i32 (g '%155 loc) (g '%157 loc) mem))
    (loc (s '%158 (load-double '(b . 0) mem) loc))
    (loc (s '%159 (load-double '(y1 . 0) mem) loc))
    (loc (s '%160 (fsub-double (g '%158 loc) (g '%159 loc)) loc))
    (mem (store-double (g '%160 loc) '(y2 . 0) mem))
    (mem (store-double #x0000000000000000 '(t1 . 0) mem))
    (loc (s '%161 (load-i32 '(ha . 0) mem) loc))
    (loc (s '%162 (add-i32 (g '%161 loc) 1048576) loc))
    (loc (s '%163 (bitcast-double*-to-i32* '(t1 . 0)) loc))
    (loc (s '%164 (getelementptr-i32 (g '%163 loc) 1) loc))
    (mem (store-i32 (g '%162 loc) (g '%164 loc) mem))
    (loc (s '%165 (load-double '(a . 0) mem) loc))
    (loc (s '%166 (load-double '(t1 . 0) mem) loc))
    (loc (s '%167 (fsub-double (g '%165 loc) (g '%166 loc)) loc))
    (mem (store-double (g '%167 loc) '(t2 . 0) mem))
    (loc (s '%168 (load-double '(t1 . 0) mem) loc))
    (loc (s '%169 (load-double '(y1 . 0) mem) loc))
    (loc (s '%170 (fmul-double (g '%168 loc) (g '%169 loc)) loc))
    (loc (s '%171 (load-double '(w . 0) mem) loc))
    (loc (s '%172 (load-double '(w . 0) mem) loc))
    (loc (s '%173 (fsub-double #x8000000000000000 (g '%172 loc)) loc))
    (loc (s '%174 (fmul-double (g '%171 loc) (g '%173 loc)) loc))
    (loc (s '%175 (load-double '(t1 . 0) mem) loc))
    (loc (s '%176 (load-double '(y2 . 0) mem) loc))
    (loc (s '%177 (fmul-double (g '%175 loc) (g '%176 loc)) loc))
    (loc (s '%178 (load-double '(t2 . 0) mem) loc))
    (loc (s '%179 (load-double '(b . 0) mem) loc))
    (loc (s '%180 (fmul-double (g '%178 loc) (g '%179 loc)) loc))
    (loc (s '%181 (fadd-double (g '%177 loc) (g '%180 loc)) loc))
    (loc (s '%182 (fsub-double (g '%174 loc) (g '%181 loc)) loc))
    (loc (s '%183 (fsub-double (g '%170 loc) (g '%182 loc)) loc))
    (loc (s '%184 (@sqrt (g '%183 loc)) loc))
    (mem (store-double (g '%184 loc) '(w . 0) mem)))
  (mv '@__ieee754_hypot-%185-bb mem loc)))

(defund @__ieee754_hypot-%185-bb (mem loc)
  (b* (
    (loc (s '%186 (load-i32 '(k . 0) mem) loc))
    (loc (s '%187 (icmp-ne-i32 (g '%186 loc) 0) loc)))
  (case (g '%187 loc)
    (-1 (mv '@__ieee754_hypot-%188-bb mem loc))
    ( 0 (mv '@__ieee754_hypot-%198-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_hypot-%188-bb (mem loc)
  (b* (
    (mem (store-double #x3ff0000000000000 '(t1 . 0) mem))
    (loc (s '%189 (load-i32 '(k . 0) mem) loc))
    (loc (s '%190 (shl-i32 (g '%189 loc) 20) loc))
    (loc (s '%191 (bitcast-double*-to-i32* '(t1 . 0)) loc))
    (loc (s '%192 (getelementptr-i32 (g '%191 loc) 1) loc))
    (loc (s '%193 (load-i32 (g '%192 loc) mem) loc))
    (loc (s '%194 (add-i32 (g '%193 loc) (g '%190 loc)) loc))
    (mem (store-i32 (g '%194 loc) (g '%192 loc) mem))
    (loc (s '%195 (load-double '(t1 . 0) mem) loc))
    (loc (s '%196 (load-double '(w . 0) mem) loc))
    (loc (s '%197 (fmul-double (g '%195 loc) (g '%196 loc)) loc))
    (mem (store-double (g '%197 loc) '(ret . 0) mem)))
  (mv '@__ieee754_hypot-%200-bb mem loc)))

(defund @__ieee754_hypot-%198-bb (mem loc)
  (b* (
    (loc (s '%199 (load-double '(w . 0) mem) loc))
    (mem (store-double (g '%199 loc) '(ret . 0) mem)))
  (mv '@__ieee754_hypot-%200-bb mem loc)))

(defund @__ieee754_hypot-%200-bb (mem loc)
  (b* (
    (loc (s '%201 (load-double '(ret . 0) mem) loc)))
  (mv 'ret mem loc)))

(defund @__ieee754_hypot-step (label mem loc)
  (case label
    (%-0 (@__ieee754_hypot-%0-bb mem loc))
    (%-17 (@__ieee754_hypot-%17-bb mem loc))
    (%-23 (@__ieee754_hypot-%23-bb mem loc))
    (%-26 (@__ieee754_hypot-%26-bb mem loc))
    (%-37 (@__ieee754_hypot-%37-bb mem loc))
    (%-41 (@__ieee754_hypot-%41-bb mem loc))
    (%-44 (@__ieee754_hypot-%44-bb mem loc))
    (%-47 (@__ieee754_hypot-%47-bb mem loc))
    (%-57 (@__ieee754_hypot-%57-bb mem loc))
    (%-59 (@__ieee754_hypot-%59-bb mem loc))
    (%-66 (@__ieee754_hypot-%66-bb mem loc))
    (%-68 (@__ieee754_hypot-%68-bb mem loc))
    (%-70 (@__ieee754_hypot-%70-bb mem loc))
    (%-83 (@__ieee754_hypot-%83-bb mem loc))
    (%-86 (@__ieee754_hypot-%86-bb mem loc))
    (%-89 (@__ieee754_hypot-%89-bb mem loc))
    (%-95 (@__ieee754_hypot-%95-bb mem loc))
    (%-97 (@__ieee754_hypot-%97-bb mem loc))
    (%-108 (@__ieee754_hypot-%108-bb mem loc))
    (%-121 (@__ieee754_hypot-%121-bb mem loc))
    (%-122 (@__ieee754_hypot-%122-bb mem loc))
    (%-129 (@__ieee754_hypot-%129-bb mem loc))
    (%-151 (@__ieee754_hypot-%151-bb mem loc))
    (%-185 (@__ieee754_hypot-%185-bb mem loc))
    (%-188 (@__ieee754_hypot-%188-bb mem loc))
    (%-198 (@__ieee754_hypot-%198-bb mem loc))
    (%-200 (@__ieee754_hypot-%200-bb mem loc))
    (otherwise (mv nil mem loc))))

(defund @__ieee754_hypot-steps (label mem loc n)
  (declare (xargs :measure (nfix n)))
  (if (equal label 'ret)
      (g '%201 loc)
    (if (zp n) nil
      (mv-let
        (label mem loc)
        (@__ieee754_hypot-step label mem loc)
        (@__ieee754_hypot-steps label mem loc (1- n))))))

(defund @__ieee754_hypot (%x %y)
  (declare (ignore %x %y))
   nil)
