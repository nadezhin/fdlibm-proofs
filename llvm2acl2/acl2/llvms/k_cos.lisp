(in-package "ACL2")
(include-book "std/util/defrule" :dir :system)
(include-book "../llvm")

(defconst *__kernel_cos-globals* '())

(defconst *__kernel_cos-labels* '(%0 %10 %14 %15 %16 %39 %51 %54 %55 %61 %79))

(defund @__kernel_cos-%0-mem (s0)
  (car s0))
(defund @__kernel_cos-%0-loc (s0)
  (cadr s0))
(defund @__kernel_cos-%0-pred (s0)
  (caddr s0))
(defund @__kernel_cos-%1-mem (s0)
  (alloca-double 'ret 1 (@__kernel_cos-%0-mem s0)))
(defund @__kernel_cos-%1-loc (s0)
  (s '%1 '(ret . 0) (@__kernel_cos-%0-loc s0)))
(defund @__kernel_cos-%2-mem (s0)
  (alloca-double 'x 1 (@__kernel_cos-%1-mem s0)))
(defund @__kernel_cos-%2-loc (s0)
  (s '%2 '(x . 0) (@__kernel_cos-%1-loc s0)))
(defund @__kernel_cos-%3-mem (s0)
  (alloca-double 'y 1 (@__kernel_cos-%2-mem s0)))
(defund @__kernel_cos-%3-loc (s0)
  (s '%3 '(y . 0) (@__kernel_cos-%2-loc s0)))
(defund @__kernel_cos-%a-mem (s0)
  (alloca-double 'a 1 (@__kernel_cos-%3-mem s0)))
(defund @__kernel_cos-%a-loc (s0)
  (s '%a '(a . 0) (@__kernel_cos-%3-loc s0)))
(defund @__kernel_cos-%hz-mem (s0)
  (alloca-double 'hz 1 (@__kernel_cos-%a-mem s0)))
(defund @__kernel_cos-%hz-loc (s0)
  (s '%hz '(hz . 0) (@__kernel_cos-%a-loc s0)))
(defund @__kernel_cos-%z-mem (s0)
  (alloca-double 'z 1 (@__kernel_cos-%hz-mem s0)))
(defund @__kernel_cos-%z-loc (s0)
  (s '%z '(z . 0) (@__kernel_cos-%hz-loc s0)))
(defund @__kernel_cos-%r-mem (s0)
  (alloca-double 'r 1 (@__kernel_cos-%z-mem s0)))
(defund @__kernel_cos-%r-loc (s0)
  (s '%r '(r . 0) (@__kernel_cos-%z-loc s0)))
(defund @__kernel_cos-%qx-mem (s0)
  (alloca-double 'qx 1 (@__kernel_cos-%r-mem s0)))
(defund @__kernel_cos-%qx-loc (s0)
  (s '%qx '(qx . 0) (@__kernel_cos-%r-loc s0)))
(defund @__kernel_cos-%ix-mem (s0)
  (alloca-i32 'ix 1 (@__kernel_cos-%qx-mem s0)))
(defund @__kernel_cos-%ix-loc (s0)
  (s '%ix '(ix . 0) (@__kernel_cos-%qx-loc s0)))
(defund @__kernel_cos-m0.1-mem (s0)
  (store-double (g '%x (@__kernel_cos-%ix-loc s0)) (g '%2 (@__kernel_cos-%ix-loc s0)) (@__kernel_cos-%ix-mem s0)))
(defund @__kernel_cos-m0.2-mem (s0)
  (store-double (g '%y (@__kernel_cos-%ix-loc s0)) (g '%3 (@__kernel_cos-%ix-loc s0)) (@__kernel_cos-m0.1-mem s0)))
(defund @__kernel_cos-%4-val (s0)
  (bitcast-double*-to-i32* (g '%2 (@__kernel_cos-%ix-loc s0))))
(defund @__kernel_cos-%4-loc (s0)
  (s '%4 (@__kernel_cos-%4-val s0) (@__kernel_cos-%ix-loc s0)))
(defund @__kernel_cos-%5-val (s0)
  (getelementptr-i32 (g '%4 (@__kernel_cos-%4-loc s0)) 1))
(defund @__kernel_cos-%5-loc (s0)
  (s '%5 (@__kernel_cos-%5-val s0) (@__kernel_cos-%4-loc s0)))
(defund @__kernel_cos-%6-val (s0)
  (load-i32 (g '%5 (@__kernel_cos-%5-loc s0)) (@__kernel_cos-m0.2-mem s0)))
(defund @__kernel_cos-%6-loc (s0)
  (s '%6 (@__kernel_cos-%6-val s0) (@__kernel_cos-%5-loc s0)))
(defund @__kernel_cos-%7-val (s0)
  (and-i32 (g '%6 (@__kernel_cos-%6-loc s0)) 2147483647))
(defund @__kernel_cos-%7-loc (s0)
  (s '%7 (@__kernel_cos-%7-val s0) (@__kernel_cos-%6-loc s0)))
(defund @__kernel_cos-m0.3-mem (s0)
  (store-i32 (g '%7 (@__kernel_cos-%7-loc s0)) (g '%ix (@__kernel_cos-%7-loc s0)) (@__kernel_cos-m0.2-mem s0)))
(defund @__kernel_cos-%8-val (s0)
  (load-i32 (g '%ix (@__kernel_cos-%7-loc s0)) (@__kernel_cos-m0.3-mem s0)))
(defund @__kernel_cos-%8-loc (s0)
  (s '%8 (@__kernel_cos-%8-val s0) (@__kernel_cos-%7-loc s0)))
(defund @__kernel_cos-%9-val (s0)
  (icmp-slt-i32 (g '%8 (@__kernel_cos-%8-loc s0)) 1044381696))
(defund @__kernel_cos-%9-loc (s0)
  (s '%9 (@__kernel_cos-%9-val s0) (@__kernel_cos-%8-loc s0)))
(defund @__kernel_cos-succ0-lab (s0)
  (case (g '%9 (@__kernel_cos-%9-loc s0)) (-1 '%10) (0 '%16)))

(defund @__kernel_cos-succ0-rev (mem loc pred)
  (declare (ignore pred))
  (mv (case (g '%9 loc) (-1 '%10) (0 '%16)) mem loc))
(defund @__kernel_cos-%9-rev (mem loc pred)
  (@__kernel_cos-succ0-rev mem (s '%9 (icmp-slt-i32 (g '%8 loc) 1044381696) loc) pred))
(defund @__kernel_cos-%8-rev (mem loc pred)
  (@__kernel_cos-%9-rev mem (s '%8 (load-i32 (g '%ix loc) mem) loc) pred))
(defund @__kernel_cos-m0.3-rev (mem loc pred)
  (@__kernel_cos-%8-rev (store-i32 (g '%7 loc) (g '%ix loc) mem) loc pred))
(defund @__kernel_cos-%7-rev (mem loc pred)
  (@__kernel_cos-m0.3-rev mem (s '%7 (and-i32 (g '%6 loc) 2147483647) loc) pred))
(defund @__kernel_cos-%6-rev (mem loc pred)
  (@__kernel_cos-%7-rev mem (s '%6 (load-i32 (g '%5 loc) mem) loc) pred))
(defund @__kernel_cos-%5-rev (mem loc pred)
  (@__kernel_cos-%6-rev mem (s '%5 (getelementptr-i32 (g '%4 loc) 1) loc) pred))
(defund @__kernel_cos-%4-rev (mem loc pred)
  (@__kernel_cos-%5-rev mem (s '%4 (bitcast-double*-to-i32* (g '%2 loc)) loc) pred))
(defund @__kernel_cos-m0.2-rev (mem loc pred)
  (@__kernel_cos-%4-rev (store-double (g '%y loc) (g '%3 loc) mem) loc pred))
(defund @__kernel_cos-m0.1-rev (mem loc pred)
  (@__kernel_cos-m0.2-rev (store-double (g '%x loc) (g '%2 loc) mem) loc pred))
(defund @__kernel_cos-%ix-rev (mem loc pred)
  (@__kernel_cos-m0.1-rev (alloca-i32 'ix 1 mem) (s '%ix '(ix . 0) loc) pred))
(defund @__kernel_cos-%qx-rev (mem loc pred)
  (@__kernel_cos-%ix-rev (alloca-double 'qx 1 mem) (s '%qx '(qx . 0) loc) pred))
(defund @__kernel_cos-%r-rev (mem loc pred)
  (@__kernel_cos-%qx-rev (alloca-double 'r 1 mem) (s '%r '(r . 0) loc) pred))
(defund @__kernel_cos-%z-rev (mem loc pred)
  (@__kernel_cos-%r-rev (alloca-double 'z 1 mem) (s '%z '(z . 0) loc) pred))
(defund @__kernel_cos-%hz-rev (mem loc pred)
  (@__kernel_cos-%z-rev (alloca-double 'hz 1 mem) (s '%hz '(hz . 0) loc) pred))
(defund @__kernel_cos-%a-rev (mem loc pred)
  (@__kernel_cos-%hz-rev (alloca-double 'a 1 mem) (s '%a '(a . 0) loc) pred))
(defund @__kernel_cos-%3-rev (mem loc pred)
  (@__kernel_cos-%a-rev (alloca-double 'y 1 mem) (s '%3 '(y . 0) loc) pred))
(defund @__kernel_cos-%2-rev (mem loc pred)
  (@__kernel_cos-%3-rev (alloca-double 'x 1 mem) (s '%2 '(x . 0) loc) pred))
(defund @__kernel_cos-%1-rev (mem loc pred)
  (@__kernel_cos-%2-rev (alloca-double 'ret 1 mem) (s '%1 '(ret . 0) loc) pred))

(defund @__kernel_cos-%0-rev (mem loc pred)
  (@__kernel_cos-%1-rev mem loc pred))

(defund @__kernel_cos-%0-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (mem (alloca-double 'ret 1 mem))
    (loc (s '%1 '(ret . 0) loc))
    (mem (alloca-double 'x 1 mem))
    (loc (s '%2 '(x . 0) loc))
    (mem (alloca-double 'y 1 mem))
    (loc (s '%3 '(y . 0) loc))
    (mem (alloca-double 'a 1 mem))
    (loc (s '%a '(a . 0) loc))
    (mem (alloca-double 'hz 1 mem))
    (loc (s '%hz '(hz . 0) loc))
    (mem (alloca-double 'z 1 mem))
    (loc (s '%z '(z . 0) loc))
    (mem (alloca-double 'r 1 mem))
    (loc (s '%r '(r . 0) loc))
    (mem (alloca-double 'qx 1 mem))
    (loc (s '%qx '(qx . 0) loc))
    (mem (alloca-i32 'ix 1 mem))
    (loc (s '%ix '(ix . 0) loc))
    (mem (store-double (g '%x loc) (g '%2 loc) mem))
    (mem (store-double (g '%y loc) (g '%3 loc) mem))
    (loc (s '%4 (bitcast-double*-to-i32* (g '%2 loc)) loc))
    (loc (s '%5 (getelementptr-i32 (g '%4 loc) 1) loc))
    (loc (s '%6 (load-i32 (g '%5 loc) mem) loc))
    (loc (s '%7 (and-i32 (g '%6 loc) 2147483647) loc))
    (mem (store-i32 (g '%7 loc) (g '%ix loc) mem))
    (loc (s '%8 (load-i32 (g '%ix loc) mem) loc))
    (loc (s '%9 (icmp-slt-i32 (g '%8 loc) 1044381696) loc))
    (succ (case (g '%9 loc) (-1 '%10) (0 '%16))))
  (mv succ mem loc)))

(defruled @__kernel_cos-%0-expand-bb
  (equal (@__kernel_cos-%0-bb mem loc pred)
         (@__kernel_cos-%0-rev mem loc pred))
  :enable (@__kernel_cos-%0-bb @__kernel_cos-%0-rev
    @__kernel_cos-%1-rev
    @__kernel_cos-%2-rev
    @__kernel_cos-%3-rev
    @__kernel_cos-%a-rev
    @__kernel_cos-%hz-rev
    @__kernel_cos-%z-rev
    @__kernel_cos-%r-rev
    @__kernel_cos-%qx-rev
    @__kernel_cos-%ix-rev
    @__kernel_cos-m0.1-rev
    @__kernel_cos-m0.2-rev
    @__kernel_cos-%4-rev
    @__kernel_cos-%5-rev
    @__kernel_cos-%6-rev
    @__kernel_cos-%7-rev
    @__kernel_cos-m0.3-rev
    @__kernel_cos-%8-rev
    @__kernel_cos-%9-rev
    @__kernel_cos-succ0-rev)
  :disable s-diff-s)

(defund @__kernel_cos-%10-mem (s10)
  (car s10))
(defund @__kernel_cos-%10-loc (s10)
  (cadr s10))
(defund @__kernel_cos-%10-pred (s10)
  (caddr s10))
(defund @__kernel_cos-%11-val (s10)
  (load-double (g '%2 (@__kernel_cos-%10-loc s10)) (@__kernel_cos-%10-mem s10)))
(defund @__kernel_cos-%11-loc (s10)
  (s '%11 (@__kernel_cos-%11-val s10) (@__kernel_cos-%10-loc s10)))
(defund @__kernel_cos-%12-val (s10)
  (fptosi-double-to-i32 (g '%11 (@__kernel_cos-%11-loc s10))))
(defund @__kernel_cos-%12-loc (s10)
  (s '%12 (@__kernel_cos-%12-val s10) (@__kernel_cos-%11-loc s10)))
(defund @__kernel_cos-%13-val (s10)
  (icmp-eq-i32 (g '%12 (@__kernel_cos-%12-loc s10)) 0))
(defund @__kernel_cos-%13-loc (s10)
  (s '%13 (@__kernel_cos-%13-val s10) (@__kernel_cos-%12-loc s10)))
(defund @__kernel_cos-succ10-lab (s10)
  (case (g '%13 (@__kernel_cos-%13-loc s10)) (-1 '%14) (0 '%15)))

(defund @__kernel_cos-succ10-rev (mem loc pred)
  (declare (ignore pred))
  (mv (case (g '%13 loc) (-1 '%14) (0 '%15)) mem loc))
(defund @__kernel_cos-%13-rev (mem loc pred)
  (@__kernel_cos-succ10-rev mem (s '%13 (icmp-eq-i32 (g '%12 loc) 0) loc) pred))
(defund @__kernel_cos-%12-rev (mem loc pred)
  (@__kernel_cos-%13-rev mem (s '%12 (fptosi-double-to-i32 (g '%11 loc)) loc) pred))
(defund @__kernel_cos-%11-rev (mem loc pred)
  (@__kernel_cos-%12-rev mem (s '%11 (load-double (g '%2 loc) mem) loc) pred))

(defund @__kernel_cos-%10-rev (mem loc pred)
  (@__kernel_cos-%11-rev mem loc pred))

(defund @__kernel_cos-%10-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%11 (load-double (g '%2 loc) mem) loc))
    (loc (s '%12 (fptosi-double-to-i32 (g '%11 loc)) loc))
    (loc (s '%13 (icmp-eq-i32 (g '%12 loc) 0) loc))
    (succ (case (g '%13 loc) (-1 '%14) (0 '%15))))
  (mv succ mem loc)))

(defruled @__kernel_cos-%10-expand-bb
  (equal (@__kernel_cos-%10-bb mem loc pred)
         (@__kernel_cos-%10-rev mem loc pred))
  :enable (@__kernel_cos-%10-bb @__kernel_cos-%10-rev
    @__kernel_cos-%11-rev
    @__kernel_cos-%12-rev
    @__kernel_cos-%13-rev
    @__kernel_cos-succ10-rev)
  :disable s-diff-s)

(defund @__kernel_cos-%14-mem (s14)
  (car s14))
(defund @__kernel_cos-%14-loc (s14)
  (cadr s14))
(defund @__kernel_cos-%14-pred (s14)
  (caddr s14))
(defund @__kernel_cos-m14.1-mem (s14)
  (store-double #x3ff0000000000000 (g '%1 (@__kernel_cos-%14-loc s14)) (@__kernel_cos-%14-mem s14)))
(defund @__kernel_cos-succ14-lab (s14)
  (declare (ignore s14))
  '%79)

(defund @__kernel_cos-succ14-rev (mem loc pred)
  (declare (ignore pred))
  (mv '%79 mem loc))
(defund @__kernel_cos-m14.1-rev (mem loc pred)
  (@__kernel_cos-succ14-rev (store-double #x3ff0000000000000 (g '%1 loc) mem) loc pred))

(defund @__kernel_cos-%14-rev (mem loc pred)
  (@__kernel_cos-m14.1-rev mem loc pred))

(defund @__kernel_cos-%14-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (mem (store-double #x3ff0000000000000 (g '%1 loc) mem))
    (succ '%79))
  (mv succ mem loc)))

(defruled @__kernel_cos-%14-expand-bb
  (equal (@__kernel_cos-%14-bb mem loc pred)
         (@__kernel_cos-%14-rev mem loc pred))
  :enable (@__kernel_cos-%14-bb @__kernel_cos-%14-rev
    @__kernel_cos-m14.1-rev
    @__kernel_cos-succ14-rev)
  :disable s-diff-s)

(defund @__kernel_cos-%15-mem (s15)
  (car s15))
(defund @__kernel_cos-%15-loc (s15)
  (cadr s15))
(defund @__kernel_cos-%15-pred (s15)
  (caddr s15))
(defund @__kernel_cos-succ15-lab (s15)
  (declare (ignore s15))
  '%16)

(defund @__kernel_cos-succ15-rev (mem loc pred)
  (declare (ignore pred))
  (mv '%16 mem loc))

(defund @__kernel_cos-%15-rev (mem loc pred)
  (@__kernel_cos-succ15-rev mem loc pred))

(defund @__kernel_cos-%15-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (succ '%16))
  (mv succ mem loc)))

(defruled @__kernel_cos-%15-expand-bb
  (equal (@__kernel_cos-%15-bb mem loc pred)
         (@__kernel_cos-%15-rev mem loc pred))
  :enable (@__kernel_cos-%15-bb @__kernel_cos-%15-rev
    @__kernel_cos-succ15-rev)
  :disable s-diff-s)

(defund @__kernel_cos-%16-mem (s16)
  (car s16))
(defund @__kernel_cos-%16-loc (s16)
  (cadr s16))
(defund @__kernel_cos-%16-pred (s16)
  (caddr s16))
(defund @__kernel_cos-%17-val (s16)
  (load-double (g '%2 (@__kernel_cos-%16-loc s16)) (@__kernel_cos-%16-mem s16)))
(defund @__kernel_cos-%17-loc (s16)
  (s '%17 (@__kernel_cos-%17-val s16) (@__kernel_cos-%16-loc s16)))
(defund @__kernel_cos-%18-val (s16)
  (load-double (g '%2 (@__kernel_cos-%17-loc s16)) (@__kernel_cos-%16-mem s16)))
(defund @__kernel_cos-%18-loc (s16)
  (s '%18 (@__kernel_cos-%18-val s16) (@__kernel_cos-%17-loc s16)))
(defund @__kernel_cos-%19-val (s16)
  (fmul-double (g '%17 (@__kernel_cos-%18-loc s16)) (g '%18 (@__kernel_cos-%18-loc s16))))
(defund @__kernel_cos-%19-loc (s16)
  (s '%19 (@__kernel_cos-%19-val s16) (@__kernel_cos-%18-loc s16)))
(defund @__kernel_cos-m16.1-mem (s16)
  (store-double (g '%19 (@__kernel_cos-%19-loc s16)) (g '%z (@__kernel_cos-%19-loc s16)) (@__kernel_cos-%16-mem s16)))
(defund @__kernel_cos-%20-val (s16)
  (load-double (g '%z (@__kernel_cos-%19-loc s16)) (@__kernel_cos-m16.1-mem s16)))
(defund @__kernel_cos-%20-loc (s16)
  (s '%20 (@__kernel_cos-%20-val s16) (@__kernel_cos-%19-loc s16)))
(defund @__kernel_cos-%21-val (s16)
  (load-double (g '%z (@__kernel_cos-%20-loc s16)) (@__kernel_cos-m16.1-mem s16)))
(defund @__kernel_cos-%21-loc (s16)
  (s '%21 (@__kernel_cos-%21-val s16) (@__kernel_cos-%20-loc s16)))
(defund @__kernel_cos-%22-val (s16)
  (load-double (g '%z (@__kernel_cos-%21-loc s16)) (@__kernel_cos-m16.1-mem s16)))
(defund @__kernel_cos-%22-loc (s16)
  (s '%22 (@__kernel_cos-%22-val s16) (@__kernel_cos-%21-loc s16)))
(defund @__kernel_cos-%23-val (s16)
  (load-double (g '%z (@__kernel_cos-%22-loc s16)) (@__kernel_cos-m16.1-mem s16)))
(defund @__kernel_cos-%23-loc (s16)
  (s '%23 (@__kernel_cos-%23-val s16) (@__kernel_cos-%22-loc s16)))
(defund @__kernel_cos-%24-val (s16)
  (load-double (g '%z (@__kernel_cos-%23-loc s16)) (@__kernel_cos-m16.1-mem s16)))
(defund @__kernel_cos-%24-loc (s16)
  (s '%24 (@__kernel_cos-%24-val s16) (@__kernel_cos-%23-loc s16)))
(defund @__kernel_cos-%25-val (s16)
  (load-double (g '%z (@__kernel_cos-%24-loc s16)) (@__kernel_cos-m16.1-mem s16)))
(defund @__kernel_cos-%25-loc (s16)
  (s '%25 (@__kernel_cos-%25-val s16) (@__kernel_cos-%24-loc s16)))
(defund @__kernel_cos-%26-val (s16)
  (fmul-double (g '%25 (@__kernel_cos-%25-loc s16)) #xBDA8FAE9BE8838D4))
(defund @__kernel_cos-%26-loc (s16)
  (s '%26 (@__kernel_cos-%26-val s16) (@__kernel_cos-%25-loc s16)))
(defund @__kernel_cos-%27-val (s16)
  (fadd-double #x3E21EE9EBDB4B1C4 (g '%26 (@__kernel_cos-%26-loc s16))))
(defund @__kernel_cos-%27-loc (s16)
  (s '%27 (@__kernel_cos-%27-val s16) (@__kernel_cos-%26-loc s16)))
(defund @__kernel_cos-%28-val (s16)
  (fmul-double (g '%24 (@__kernel_cos-%27-loc s16)) (g '%27 (@__kernel_cos-%27-loc s16))))
(defund @__kernel_cos-%28-loc (s16)
  (s '%28 (@__kernel_cos-%28-val s16) (@__kernel_cos-%27-loc s16)))
(defund @__kernel_cos-%29-val (s16)
  (fadd-double #xBE927E4F809C52AD (g '%28 (@__kernel_cos-%28-loc s16))))
(defund @__kernel_cos-%29-loc (s16)
  (s '%29 (@__kernel_cos-%29-val s16) (@__kernel_cos-%28-loc s16)))
(defund @__kernel_cos-%30-val (s16)
  (fmul-double (g '%23 (@__kernel_cos-%29-loc s16)) (g '%29 (@__kernel_cos-%29-loc s16))))
(defund @__kernel_cos-%30-loc (s16)
  (s '%30 (@__kernel_cos-%30-val s16) (@__kernel_cos-%29-loc s16)))
(defund @__kernel_cos-%31-val (s16)
  (fadd-double #x3EFA01A019CB1590 (g '%30 (@__kernel_cos-%30-loc s16))))
(defund @__kernel_cos-%31-loc (s16)
  (s '%31 (@__kernel_cos-%31-val s16) (@__kernel_cos-%30-loc s16)))
(defund @__kernel_cos-%32-val (s16)
  (fmul-double (g '%22 (@__kernel_cos-%31-loc s16)) (g '%31 (@__kernel_cos-%31-loc s16))))
(defund @__kernel_cos-%32-loc (s16)
  (s '%32 (@__kernel_cos-%32-val s16) (@__kernel_cos-%31-loc s16)))
(defund @__kernel_cos-%33-val (s16)
  (fadd-double #xBF56C16C16C15177 (g '%32 (@__kernel_cos-%32-loc s16))))
(defund @__kernel_cos-%33-loc (s16)
  (s '%33 (@__kernel_cos-%33-val s16) (@__kernel_cos-%32-loc s16)))
(defund @__kernel_cos-%34-val (s16)
  (fmul-double (g '%21 (@__kernel_cos-%33-loc s16)) (g '%33 (@__kernel_cos-%33-loc s16))))
(defund @__kernel_cos-%34-loc (s16)
  (s '%34 (@__kernel_cos-%34-val s16) (@__kernel_cos-%33-loc s16)))
(defund @__kernel_cos-%35-val (s16)
  (fadd-double #x3FA555555555554C (g '%34 (@__kernel_cos-%34-loc s16))))
(defund @__kernel_cos-%35-loc (s16)
  (s '%35 (@__kernel_cos-%35-val s16) (@__kernel_cos-%34-loc s16)))
(defund @__kernel_cos-%36-val (s16)
  (fmul-double (g '%20 (@__kernel_cos-%35-loc s16)) (g '%35 (@__kernel_cos-%35-loc s16))))
(defund @__kernel_cos-%36-loc (s16)
  (s '%36 (@__kernel_cos-%36-val s16) (@__kernel_cos-%35-loc s16)))
(defund @__kernel_cos-m16.2-mem (s16)
  (store-double (g '%36 (@__kernel_cos-%36-loc s16)) (g '%r (@__kernel_cos-%36-loc s16)) (@__kernel_cos-m16.1-mem s16)))
(defund @__kernel_cos-%37-val (s16)
  (load-i32 (g '%ix (@__kernel_cos-%36-loc s16)) (@__kernel_cos-m16.2-mem s16)))
(defund @__kernel_cos-%37-loc (s16)
  (s '%37 (@__kernel_cos-%37-val s16) (@__kernel_cos-%36-loc s16)))
(defund @__kernel_cos-%38-val (s16)
  (icmp-slt-i32 (g '%37 (@__kernel_cos-%37-loc s16)) 1070805811))
(defund @__kernel_cos-%38-loc (s16)
  (s '%38 (@__kernel_cos-%38-val s16) (@__kernel_cos-%37-loc s16)))
(defund @__kernel_cos-succ16-lab (s16)
  (case (g '%38 (@__kernel_cos-%38-loc s16)) (-1 '%39) (0 '%51)))

(defund @__kernel_cos-succ16-rev (mem loc pred)
  (declare (ignore pred))
  (mv (case (g '%38 loc) (-1 '%39) (0 '%51)) mem loc))
(defund @__kernel_cos-%38-rev (mem loc pred)
  (@__kernel_cos-succ16-rev mem (s '%38 (icmp-slt-i32 (g '%37 loc) 1070805811) loc) pred))
(defund @__kernel_cos-%37-rev (mem loc pred)
  (@__kernel_cos-%38-rev mem (s '%37 (load-i32 (g '%ix loc) mem) loc) pred))
(defund @__kernel_cos-m16.2-rev (mem loc pred)
  (@__kernel_cos-%37-rev (store-double (g '%36 loc) (g '%r loc) mem) loc pred))
(defund @__kernel_cos-%36-rev (mem loc pred)
  (@__kernel_cos-m16.2-rev mem (s '%36 (fmul-double (g '%20 loc) (g '%35 loc)) loc) pred))
(defund @__kernel_cos-%35-rev (mem loc pred)
  (@__kernel_cos-%36-rev mem (s '%35 (fadd-double #x3FA555555555554C (g '%34 loc)) loc) pred))
(defund @__kernel_cos-%34-rev (mem loc pred)
  (@__kernel_cos-%35-rev mem (s '%34 (fmul-double (g '%21 loc) (g '%33 loc)) loc) pred))
(defund @__kernel_cos-%33-rev (mem loc pred)
  (@__kernel_cos-%34-rev mem (s '%33 (fadd-double #xBF56C16C16C15177 (g '%32 loc)) loc) pred))
(defund @__kernel_cos-%32-rev (mem loc pred)
  (@__kernel_cos-%33-rev mem (s '%32 (fmul-double (g '%22 loc) (g '%31 loc)) loc) pred))
(defund @__kernel_cos-%31-rev (mem loc pred)
  (@__kernel_cos-%32-rev mem (s '%31 (fadd-double #x3EFA01A019CB1590 (g '%30 loc)) loc) pred))
(defund @__kernel_cos-%30-rev (mem loc pred)
  (@__kernel_cos-%31-rev mem (s '%30 (fmul-double (g '%23 loc) (g '%29 loc)) loc) pred))
(defund @__kernel_cos-%29-rev (mem loc pred)
  (@__kernel_cos-%30-rev mem (s '%29 (fadd-double #xBE927E4F809C52AD (g '%28 loc)) loc) pred))
(defund @__kernel_cos-%28-rev (mem loc pred)
  (@__kernel_cos-%29-rev mem (s '%28 (fmul-double (g '%24 loc) (g '%27 loc)) loc) pred))
(defund @__kernel_cos-%27-rev (mem loc pred)
  (@__kernel_cos-%28-rev mem (s '%27 (fadd-double #x3E21EE9EBDB4B1C4 (g '%26 loc)) loc) pred))
(defund @__kernel_cos-%26-rev (mem loc pred)
  (@__kernel_cos-%27-rev mem (s '%26 (fmul-double (g '%25 loc) #xBDA8FAE9BE8838D4) loc) pred))
(defund @__kernel_cos-%25-rev (mem loc pred)
  (@__kernel_cos-%26-rev mem (s '%25 (load-double (g '%z loc) mem) loc) pred))
(defund @__kernel_cos-%24-rev (mem loc pred)
  (@__kernel_cos-%25-rev mem (s '%24 (load-double (g '%z loc) mem) loc) pred))
(defund @__kernel_cos-%23-rev (mem loc pred)
  (@__kernel_cos-%24-rev mem (s '%23 (load-double (g '%z loc) mem) loc) pred))
(defund @__kernel_cos-%22-rev (mem loc pred)
  (@__kernel_cos-%23-rev mem (s '%22 (load-double (g '%z loc) mem) loc) pred))
(defund @__kernel_cos-%21-rev (mem loc pred)
  (@__kernel_cos-%22-rev mem (s '%21 (load-double (g '%z loc) mem) loc) pred))
(defund @__kernel_cos-%20-rev (mem loc pred)
  (@__kernel_cos-%21-rev mem (s '%20 (load-double (g '%z loc) mem) loc) pred))
(defund @__kernel_cos-m16.1-rev (mem loc pred)
  (@__kernel_cos-%20-rev (store-double (g '%19 loc) (g '%z loc) mem) loc pred))
(defund @__kernel_cos-%19-rev (mem loc pred)
  (@__kernel_cos-m16.1-rev mem (s '%19 (fmul-double (g '%17 loc) (g '%18 loc)) loc) pred))
(defund @__kernel_cos-%18-rev (mem loc pred)
  (@__kernel_cos-%19-rev mem (s '%18 (load-double (g '%2 loc) mem) loc) pred))
(defund @__kernel_cos-%17-rev (mem loc pred)
  (@__kernel_cos-%18-rev mem (s '%17 (load-double (g '%2 loc) mem) loc) pred))

(defund @__kernel_cos-%16-rev (mem loc pred)
  (@__kernel_cos-%17-rev mem loc pred))

(defund @__kernel_cos-%16-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%17 (load-double (g '%2 loc) mem) loc))
    (loc (s '%18 (load-double (g '%2 loc) mem) loc))
    (loc (s '%19 (fmul-double (g '%17 loc) (g '%18 loc)) loc))
    (mem (store-double (g '%19 loc) (g '%z loc) mem))
    (loc (s '%20 (load-double (g '%z loc) mem) loc))
    (loc (s '%21 (load-double (g '%z loc) mem) loc))
    (loc (s '%22 (load-double (g '%z loc) mem) loc))
    (loc (s '%23 (load-double (g '%z loc) mem) loc))
    (loc (s '%24 (load-double (g '%z loc) mem) loc))
    (loc (s '%25 (load-double (g '%z loc) mem) loc))
    (loc (s '%26 (fmul-double (g '%25 loc) #xBDA8FAE9BE8838D4) loc))
    (loc (s '%27 (fadd-double #x3E21EE9EBDB4B1C4 (g '%26 loc)) loc))
    (loc (s '%28 (fmul-double (g '%24 loc) (g '%27 loc)) loc))
    (loc (s '%29 (fadd-double #xBE927E4F809C52AD (g '%28 loc)) loc))
    (loc (s '%30 (fmul-double (g '%23 loc) (g '%29 loc)) loc))
    (loc (s '%31 (fadd-double #x3EFA01A019CB1590 (g '%30 loc)) loc))
    (loc (s '%32 (fmul-double (g '%22 loc) (g '%31 loc)) loc))
    (loc (s '%33 (fadd-double #xBF56C16C16C15177 (g '%32 loc)) loc))
    (loc (s '%34 (fmul-double (g '%21 loc) (g '%33 loc)) loc))
    (loc (s '%35 (fadd-double #x3FA555555555554C (g '%34 loc)) loc))
    (loc (s '%36 (fmul-double (g '%20 loc) (g '%35 loc)) loc))
    (mem (store-double (g '%36 loc) (g '%r loc) mem))
    (loc (s '%37 (load-i32 (g '%ix loc) mem) loc))
    (loc (s '%38 (icmp-slt-i32 (g '%37 loc) 1070805811) loc))
    (succ (case (g '%38 loc) (-1 '%39) (0 '%51))))
  (mv succ mem loc)))

(defruled @__kernel_cos-%16-expand-bb
  (equal (@__kernel_cos-%16-bb mem loc pred)
         (@__kernel_cos-%16-rev mem loc pred))
  :enable (@__kernel_cos-%16-bb @__kernel_cos-%16-rev
    @__kernel_cos-%17-rev
    @__kernel_cos-%18-rev
    @__kernel_cos-%19-rev
    @__kernel_cos-m16.1-rev
    @__kernel_cos-%20-rev
    @__kernel_cos-%21-rev
    @__kernel_cos-%22-rev
    @__kernel_cos-%23-rev
    @__kernel_cos-%24-rev
    @__kernel_cos-%25-rev
    @__kernel_cos-%26-rev
    @__kernel_cos-%27-rev
    @__kernel_cos-%28-rev
    @__kernel_cos-%29-rev
    @__kernel_cos-%30-rev
    @__kernel_cos-%31-rev
    @__kernel_cos-%32-rev
    @__kernel_cos-%33-rev
    @__kernel_cos-%34-rev
    @__kernel_cos-%35-rev
    @__kernel_cos-%36-rev
    @__kernel_cos-m16.2-rev
    @__kernel_cos-%37-rev
    @__kernel_cos-%38-rev
    @__kernel_cos-succ16-rev)
  :disable s-diff-s)

(defund @__kernel_cos-%39-mem (s39)
  (car s39))
(defund @__kernel_cos-%39-loc (s39)
  (cadr s39))
(defund @__kernel_cos-%39-pred (s39)
  (caddr s39))
(defund @__kernel_cos-%40-val (s39)
  (load-double (g '%z (@__kernel_cos-%39-loc s39)) (@__kernel_cos-%39-mem s39)))
(defund @__kernel_cos-%40-loc (s39)
  (s '%40 (@__kernel_cos-%40-val s39) (@__kernel_cos-%39-loc s39)))
(defund @__kernel_cos-%41-val (s39)
  (fmul-double #x3fe0000000000000 (g '%40 (@__kernel_cos-%40-loc s39))))
(defund @__kernel_cos-%41-loc (s39)
  (s '%41 (@__kernel_cos-%41-val s39) (@__kernel_cos-%40-loc s39)))
(defund @__kernel_cos-%42-val (s39)
  (load-double (g '%z (@__kernel_cos-%41-loc s39)) (@__kernel_cos-%39-mem s39)))
(defund @__kernel_cos-%42-loc (s39)
  (s '%42 (@__kernel_cos-%42-val s39) (@__kernel_cos-%41-loc s39)))
(defund @__kernel_cos-%43-val (s39)
  (load-double (g '%r (@__kernel_cos-%42-loc s39)) (@__kernel_cos-%39-mem s39)))
(defund @__kernel_cos-%43-loc (s39)
  (s '%43 (@__kernel_cos-%43-val s39) (@__kernel_cos-%42-loc s39)))
(defund @__kernel_cos-%44-val (s39)
  (fmul-double (g '%42 (@__kernel_cos-%43-loc s39)) (g '%43 (@__kernel_cos-%43-loc s39))))
(defund @__kernel_cos-%44-loc (s39)
  (s '%44 (@__kernel_cos-%44-val s39) (@__kernel_cos-%43-loc s39)))
(defund @__kernel_cos-%45-val (s39)
  (load-double (g '%2 (@__kernel_cos-%44-loc s39)) (@__kernel_cos-%39-mem s39)))
(defund @__kernel_cos-%45-loc (s39)
  (s '%45 (@__kernel_cos-%45-val s39) (@__kernel_cos-%44-loc s39)))
(defund @__kernel_cos-%46-val (s39)
  (load-double (g '%3 (@__kernel_cos-%45-loc s39)) (@__kernel_cos-%39-mem s39)))
(defund @__kernel_cos-%46-loc (s39)
  (s '%46 (@__kernel_cos-%46-val s39) (@__kernel_cos-%45-loc s39)))
(defund @__kernel_cos-%47-val (s39)
  (fmul-double (g '%45 (@__kernel_cos-%46-loc s39)) (g '%46 (@__kernel_cos-%46-loc s39))))
(defund @__kernel_cos-%47-loc (s39)
  (s '%47 (@__kernel_cos-%47-val s39) (@__kernel_cos-%46-loc s39)))
(defund @__kernel_cos-%48-val (s39)
  (fsub-double (g '%44 (@__kernel_cos-%47-loc s39)) (g '%47 (@__kernel_cos-%47-loc s39))))
(defund @__kernel_cos-%48-loc (s39)
  (s '%48 (@__kernel_cos-%48-val s39) (@__kernel_cos-%47-loc s39)))
(defund @__kernel_cos-%49-val (s39)
  (fsub-double (g '%41 (@__kernel_cos-%48-loc s39)) (g '%48 (@__kernel_cos-%48-loc s39))))
(defund @__kernel_cos-%49-loc (s39)
  (s '%49 (@__kernel_cos-%49-val s39) (@__kernel_cos-%48-loc s39)))
(defund @__kernel_cos-%50-val (s39)
  (fsub-double #x3ff0000000000000 (g '%49 (@__kernel_cos-%49-loc s39))))
(defund @__kernel_cos-%50-loc (s39)
  (s '%50 (@__kernel_cos-%50-val s39) (@__kernel_cos-%49-loc s39)))
(defund @__kernel_cos-m39.1-mem (s39)
  (store-double (g '%50 (@__kernel_cos-%50-loc s39)) (g '%1 (@__kernel_cos-%50-loc s39)) (@__kernel_cos-%39-mem s39)))
(defund @__kernel_cos-succ39-lab (s39)
  (declare (ignore s39))
  '%79)

(defund @__kernel_cos-succ39-rev (mem loc pred)
  (declare (ignore pred))
  (mv '%79 mem loc))
(defund @__kernel_cos-m39.1-rev (mem loc pred)
  (@__kernel_cos-succ39-rev (store-double (g '%50 loc) (g '%1 loc) mem) loc pred))
(defund @__kernel_cos-%50-rev (mem loc pred)
  (@__kernel_cos-m39.1-rev mem (s '%50 (fsub-double #x3ff0000000000000 (g '%49 loc)) loc) pred))
(defund @__kernel_cos-%49-rev (mem loc pred)
  (@__kernel_cos-%50-rev mem (s '%49 (fsub-double (g '%41 loc) (g '%48 loc)) loc) pred))
(defund @__kernel_cos-%48-rev (mem loc pred)
  (@__kernel_cos-%49-rev mem (s '%48 (fsub-double (g '%44 loc) (g '%47 loc)) loc) pred))
(defund @__kernel_cos-%47-rev (mem loc pred)
  (@__kernel_cos-%48-rev mem (s '%47 (fmul-double (g '%45 loc) (g '%46 loc)) loc) pred))
(defund @__kernel_cos-%46-rev (mem loc pred)
  (@__kernel_cos-%47-rev mem (s '%46 (load-double (g '%3 loc) mem) loc) pred))
(defund @__kernel_cos-%45-rev (mem loc pred)
  (@__kernel_cos-%46-rev mem (s '%45 (load-double (g '%2 loc) mem) loc) pred))
(defund @__kernel_cos-%44-rev (mem loc pred)
  (@__kernel_cos-%45-rev mem (s '%44 (fmul-double (g '%42 loc) (g '%43 loc)) loc) pred))
(defund @__kernel_cos-%43-rev (mem loc pred)
  (@__kernel_cos-%44-rev mem (s '%43 (load-double (g '%r loc) mem) loc) pred))
(defund @__kernel_cos-%42-rev (mem loc pred)
  (@__kernel_cos-%43-rev mem (s '%42 (load-double (g '%z loc) mem) loc) pred))
(defund @__kernel_cos-%41-rev (mem loc pred)
  (@__kernel_cos-%42-rev mem (s '%41 (fmul-double #x3fe0000000000000 (g '%40 loc)) loc) pred))
(defund @__kernel_cos-%40-rev (mem loc pred)
  (@__kernel_cos-%41-rev mem (s '%40 (load-double (g '%z loc) mem) loc) pred))

(defund @__kernel_cos-%39-rev (mem loc pred)
  (@__kernel_cos-%40-rev mem loc pred))

(defund @__kernel_cos-%39-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%40 (load-double (g '%z loc) mem) loc))
    (loc (s '%41 (fmul-double #x3fe0000000000000 (g '%40 loc)) loc))
    (loc (s '%42 (load-double (g '%z loc) mem) loc))
    (loc (s '%43 (load-double (g '%r loc) mem) loc))
    (loc (s '%44 (fmul-double (g '%42 loc) (g '%43 loc)) loc))
    (loc (s '%45 (load-double (g '%2 loc) mem) loc))
    (loc (s '%46 (load-double (g '%3 loc) mem) loc))
    (loc (s '%47 (fmul-double (g '%45 loc) (g '%46 loc)) loc))
    (loc (s '%48 (fsub-double (g '%44 loc) (g '%47 loc)) loc))
    (loc (s '%49 (fsub-double (g '%41 loc) (g '%48 loc)) loc))
    (loc (s '%50 (fsub-double #x3ff0000000000000 (g '%49 loc)) loc))
    (mem (store-double (g '%50 loc) (g '%1 loc) mem))
    (succ '%79))
  (mv succ mem loc)))

(defruled @__kernel_cos-%39-expand-bb
  (equal (@__kernel_cos-%39-bb mem loc pred)
         (@__kernel_cos-%39-rev mem loc pred))
  :enable (@__kernel_cos-%39-bb @__kernel_cos-%39-rev
    @__kernel_cos-%40-rev
    @__kernel_cos-%41-rev
    @__kernel_cos-%42-rev
    @__kernel_cos-%43-rev
    @__kernel_cos-%44-rev
    @__kernel_cos-%45-rev
    @__kernel_cos-%46-rev
    @__kernel_cos-%47-rev
    @__kernel_cos-%48-rev
    @__kernel_cos-%49-rev
    @__kernel_cos-%50-rev
    @__kernel_cos-m39.1-rev
    @__kernel_cos-succ39-rev)
  :disable s-diff-s)

(defund @__kernel_cos-%51-mem (s51)
  (car s51))
(defund @__kernel_cos-%51-loc (s51)
  (cadr s51))
(defund @__kernel_cos-%51-pred (s51)
  (caddr s51))
(defund @__kernel_cos-%52-val (s51)
  (load-i32 (g '%ix (@__kernel_cos-%51-loc s51)) (@__kernel_cos-%51-mem s51)))
(defund @__kernel_cos-%52-loc (s51)
  (s '%52 (@__kernel_cos-%52-val s51) (@__kernel_cos-%51-loc s51)))
(defund @__kernel_cos-%53-val (s51)
  (icmp-sgt-i32 (g '%52 (@__kernel_cos-%52-loc s51)) 1072234496))
(defund @__kernel_cos-%53-loc (s51)
  (s '%53 (@__kernel_cos-%53-val s51) (@__kernel_cos-%52-loc s51)))
(defund @__kernel_cos-succ51-lab (s51)
  (case (g '%53 (@__kernel_cos-%53-loc s51)) (-1 '%54) (0 '%55)))

(defund @__kernel_cos-succ51-rev (mem loc pred)
  (declare (ignore pred))
  (mv (case (g '%53 loc) (-1 '%54) (0 '%55)) mem loc))
(defund @__kernel_cos-%53-rev (mem loc pred)
  (@__kernel_cos-succ51-rev mem (s '%53 (icmp-sgt-i32 (g '%52 loc) 1072234496) loc) pred))
(defund @__kernel_cos-%52-rev (mem loc pred)
  (@__kernel_cos-%53-rev mem (s '%52 (load-i32 (g '%ix loc) mem) loc) pred))

(defund @__kernel_cos-%51-rev (mem loc pred)
  (@__kernel_cos-%52-rev mem loc pred))

(defund @__kernel_cos-%51-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%52 (load-i32 (g '%ix loc) mem) loc))
    (loc (s '%53 (icmp-sgt-i32 (g '%52 loc) 1072234496) loc))
    (succ (case (g '%53 loc) (-1 '%54) (0 '%55))))
  (mv succ mem loc)))

(defruled @__kernel_cos-%51-expand-bb
  (equal (@__kernel_cos-%51-bb mem loc pred)
         (@__kernel_cos-%51-rev mem loc pred))
  :enable (@__kernel_cos-%51-bb @__kernel_cos-%51-rev
    @__kernel_cos-%52-rev
    @__kernel_cos-%53-rev
    @__kernel_cos-succ51-rev)
  :disable s-diff-s)

(defund @__kernel_cos-%54-mem (s54)
  (car s54))
(defund @__kernel_cos-%54-loc (s54)
  (cadr s54))
(defund @__kernel_cos-%54-pred (s54)
  (caddr s54))
(defund @__kernel_cos-m54.1-mem (s54)
  (store-double #x3fd2000000000000 (g '%qx (@__kernel_cos-%54-loc s54)) (@__kernel_cos-%54-mem s54)))
(defund @__kernel_cos-succ54-lab (s54)
  (declare (ignore s54))
  '%61)

(defund @__kernel_cos-succ54-rev (mem loc pred)
  (declare (ignore pred))
  (mv '%61 mem loc))
(defund @__kernel_cos-m54.1-rev (mem loc pred)
  (@__kernel_cos-succ54-rev (store-double #x3fd2000000000000 (g '%qx loc) mem) loc pred))

(defund @__kernel_cos-%54-rev (mem loc pred)
  (@__kernel_cos-m54.1-rev mem loc pred))

(defund @__kernel_cos-%54-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (mem (store-double #x3fd2000000000000 (g '%qx loc) mem))
    (succ '%61))
  (mv succ mem loc)))

(defruled @__kernel_cos-%54-expand-bb
  (equal (@__kernel_cos-%54-bb mem loc pred)
         (@__kernel_cos-%54-rev mem loc pred))
  :enable (@__kernel_cos-%54-bb @__kernel_cos-%54-rev
    @__kernel_cos-m54.1-rev
    @__kernel_cos-succ54-rev)
  :disable s-diff-s)

(defund @__kernel_cos-%55-mem (s55)
  (car s55))
(defund @__kernel_cos-%55-loc (s55)
  (cadr s55))
(defund @__kernel_cos-%55-pred (s55)
  (caddr s55))
(defund @__kernel_cos-%56-val (s55)
  (load-i32 (g '%ix (@__kernel_cos-%55-loc s55)) (@__kernel_cos-%55-mem s55)))
(defund @__kernel_cos-%56-loc (s55)
  (s '%56 (@__kernel_cos-%56-val s55) (@__kernel_cos-%55-loc s55)))
(defund @__kernel_cos-%57-val (s55)
  (sub-i32 (g '%56 (@__kernel_cos-%56-loc s55)) 2097152))
(defund @__kernel_cos-%57-loc (s55)
  (s '%57 (@__kernel_cos-%57-val s55) (@__kernel_cos-%56-loc s55)))
(defund @__kernel_cos-%58-val (s55)
  (bitcast-double*-to-i32* (g '%qx (@__kernel_cos-%57-loc s55))))
(defund @__kernel_cos-%58-loc (s55)
  (s '%58 (@__kernel_cos-%58-val s55) (@__kernel_cos-%57-loc s55)))
(defund @__kernel_cos-%59-val (s55)
  (getelementptr-i32 (g '%58 (@__kernel_cos-%58-loc s55)) 1))
(defund @__kernel_cos-%59-loc (s55)
  (s '%59 (@__kernel_cos-%59-val s55) (@__kernel_cos-%58-loc s55)))
(defund @__kernel_cos-m55.1-mem (s55)
  (store-i32 (g '%57 (@__kernel_cos-%59-loc s55)) (g '%59 (@__kernel_cos-%59-loc s55)) (@__kernel_cos-%55-mem s55)))
(defund @__kernel_cos-%60-val (s55)
  (bitcast-double*-to-i32* (g '%qx (@__kernel_cos-%59-loc s55))))
(defund @__kernel_cos-%60-loc (s55)
  (s '%60 (@__kernel_cos-%60-val s55) (@__kernel_cos-%59-loc s55)))
(defund @__kernel_cos-m55.2-mem (s55)
  (store-i32 0 (g '%60 (@__kernel_cos-%60-loc s55)) (@__kernel_cos-m55.1-mem s55)))
(defund @__kernel_cos-succ55-lab (s55)
  (declare (ignore s55))
  '%61)

(defund @__kernel_cos-succ55-rev (mem loc pred)
  (declare (ignore pred))
  (mv '%61 mem loc))
(defund @__kernel_cos-m55.2-rev (mem loc pred)
  (@__kernel_cos-succ55-rev (store-i32 0 (g '%60 loc) mem) loc pred))
(defund @__kernel_cos-%60-rev (mem loc pred)
  (@__kernel_cos-m55.2-rev mem (s '%60 (bitcast-double*-to-i32* (g '%qx loc)) loc) pred))
(defund @__kernel_cos-m55.1-rev (mem loc pred)
  (@__kernel_cos-%60-rev (store-i32 (g '%57 loc) (g '%59 loc) mem) loc pred))
(defund @__kernel_cos-%59-rev (mem loc pred)
  (@__kernel_cos-m55.1-rev mem (s '%59 (getelementptr-i32 (g '%58 loc) 1) loc) pred))
(defund @__kernel_cos-%58-rev (mem loc pred)
  (@__kernel_cos-%59-rev mem (s '%58 (bitcast-double*-to-i32* (g '%qx loc)) loc) pred))
(defund @__kernel_cos-%57-rev (mem loc pred)
  (@__kernel_cos-%58-rev mem (s '%57 (sub-i32 (g '%56 loc) 2097152) loc) pred))
(defund @__kernel_cos-%56-rev (mem loc pred)
  (@__kernel_cos-%57-rev mem (s '%56 (load-i32 (g '%ix loc) mem) loc) pred))

(defund @__kernel_cos-%55-rev (mem loc pred)
  (@__kernel_cos-%56-rev mem loc pred))

(defund @__kernel_cos-%55-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%56 (load-i32 (g '%ix loc) mem) loc))
    (loc (s '%57 (sub-i32 (g '%56 loc) 2097152) loc))
    (loc (s '%58 (bitcast-double*-to-i32* (g '%qx loc)) loc))
    (loc (s '%59 (getelementptr-i32 (g '%58 loc) 1) loc))
    (mem (store-i32 (g '%57 loc) (g '%59 loc) mem))
    (loc (s '%60 (bitcast-double*-to-i32* (g '%qx loc)) loc))
    (mem (store-i32 0 (g '%60 loc) mem))
    (succ '%61))
  (mv succ mem loc)))

(defruled @__kernel_cos-%55-expand-bb
  (equal (@__kernel_cos-%55-bb mem loc pred)
         (@__kernel_cos-%55-rev mem loc pred))
  :enable (@__kernel_cos-%55-bb @__kernel_cos-%55-rev
    @__kernel_cos-%56-rev
    @__kernel_cos-%57-rev
    @__kernel_cos-%58-rev
    @__kernel_cos-%59-rev
    @__kernel_cos-m55.1-rev
    @__kernel_cos-%60-rev
    @__kernel_cos-m55.2-rev
    @__kernel_cos-succ55-rev)
  :disable s-diff-s)

(defund @__kernel_cos-%61-mem (s61)
  (car s61))
(defund @__kernel_cos-%61-loc (s61)
  (cadr s61))
(defund @__kernel_cos-%61-pred (s61)
  (caddr s61))
(defund @__kernel_cos-%62-val (s61)
  (load-double (g '%z (@__kernel_cos-%61-loc s61)) (@__kernel_cos-%61-mem s61)))
(defund @__kernel_cos-%62-loc (s61)
  (s '%62 (@__kernel_cos-%62-val s61) (@__kernel_cos-%61-loc s61)))
(defund @__kernel_cos-%63-val (s61)
  (fmul-double #x3fe0000000000000 (g '%62 (@__kernel_cos-%62-loc s61))))
(defund @__kernel_cos-%63-loc (s61)
  (s '%63 (@__kernel_cos-%63-val s61) (@__kernel_cos-%62-loc s61)))
(defund @__kernel_cos-%64-val (s61)
  (load-double (g '%qx (@__kernel_cos-%63-loc s61)) (@__kernel_cos-%61-mem s61)))
(defund @__kernel_cos-%64-loc (s61)
  (s '%64 (@__kernel_cos-%64-val s61) (@__kernel_cos-%63-loc s61)))
(defund @__kernel_cos-%65-val (s61)
  (fsub-double (g '%63 (@__kernel_cos-%64-loc s61)) (g '%64 (@__kernel_cos-%64-loc s61))))
(defund @__kernel_cos-%65-loc (s61)
  (s '%65 (@__kernel_cos-%65-val s61) (@__kernel_cos-%64-loc s61)))
(defund @__kernel_cos-m61.1-mem (s61)
  (store-double (g '%65 (@__kernel_cos-%65-loc s61)) (g '%hz (@__kernel_cos-%65-loc s61)) (@__kernel_cos-%61-mem s61)))
(defund @__kernel_cos-%66-val (s61)
  (load-double (g '%qx (@__kernel_cos-%65-loc s61)) (@__kernel_cos-m61.1-mem s61)))
(defund @__kernel_cos-%66-loc (s61)
  (s '%66 (@__kernel_cos-%66-val s61) (@__kernel_cos-%65-loc s61)))
(defund @__kernel_cos-%67-val (s61)
  (fsub-double #x3ff0000000000000 (g '%66 (@__kernel_cos-%66-loc s61))))
(defund @__kernel_cos-%67-loc (s61)
  (s '%67 (@__kernel_cos-%67-val s61) (@__kernel_cos-%66-loc s61)))
(defund @__kernel_cos-m61.2-mem (s61)
  (store-double (g '%67 (@__kernel_cos-%67-loc s61)) (g '%a (@__kernel_cos-%67-loc s61)) (@__kernel_cos-m61.1-mem s61)))
(defund @__kernel_cos-%68-val (s61)
  (load-double (g '%a (@__kernel_cos-%67-loc s61)) (@__kernel_cos-m61.2-mem s61)))
(defund @__kernel_cos-%68-loc (s61)
  (s '%68 (@__kernel_cos-%68-val s61) (@__kernel_cos-%67-loc s61)))
(defund @__kernel_cos-%69-val (s61)
  (load-double (g '%hz (@__kernel_cos-%68-loc s61)) (@__kernel_cos-m61.2-mem s61)))
(defund @__kernel_cos-%69-loc (s61)
  (s '%69 (@__kernel_cos-%69-val s61) (@__kernel_cos-%68-loc s61)))
(defund @__kernel_cos-%70-val (s61)
  (load-double (g '%z (@__kernel_cos-%69-loc s61)) (@__kernel_cos-m61.2-mem s61)))
(defund @__kernel_cos-%70-loc (s61)
  (s '%70 (@__kernel_cos-%70-val s61) (@__kernel_cos-%69-loc s61)))
(defund @__kernel_cos-%71-val (s61)
  (load-double (g '%r (@__kernel_cos-%70-loc s61)) (@__kernel_cos-m61.2-mem s61)))
(defund @__kernel_cos-%71-loc (s61)
  (s '%71 (@__kernel_cos-%71-val s61) (@__kernel_cos-%70-loc s61)))
(defund @__kernel_cos-%72-val (s61)
  (fmul-double (g '%70 (@__kernel_cos-%71-loc s61)) (g '%71 (@__kernel_cos-%71-loc s61))))
(defund @__kernel_cos-%72-loc (s61)
  (s '%72 (@__kernel_cos-%72-val s61) (@__kernel_cos-%71-loc s61)))
(defund @__kernel_cos-%73-val (s61)
  (load-double (g '%2 (@__kernel_cos-%72-loc s61)) (@__kernel_cos-m61.2-mem s61)))
(defund @__kernel_cos-%73-loc (s61)
  (s '%73 (@__kernel_cos-%73-val s61) (@__kernel_cos-%72-loc s61)))
(defund @__kernel_cos-%74-val (s61)
  (load-double (g '%3 (@__kernel_cos-%73-loc s61)) (@__kernel_cos-m61.2-mem s61)))
(defund @__kernel_cos-%74-loc (s61)
  (s '%74 (@__kernel_cos-%74-val s61) (@__kernel_cos-%73-loc s61)))
(defund @__kernel_cos-%75-val (s61)
  (fmul-double (g '%73 (@__kernel_cos-%74-loc s61)) (g '%74 (@__kernel_cos-%74-loc s61))))
(defund @__kernel_cos-%75-loc (s61)
  (s '%75 (@__kernel_cos-%75-val s61) (@__kernel_cos-%74-loc s61)))
(defund @__kernel_cos-%76-val (s61)
  (fsub-double (g '%72 (@__kernel_cos-%75-loc s61)) (g '%75 (@__kernel_cos-%75-loc s61))))
(defund @__kernel_cos-%76-loc (s61)
  (s '%76 (@__kernel_cos-%76-val s61) (@__kernel_cos-%75-loc s61)))
(defund @__kernel_cos-%77-val (s61)
  (fsub-double (g '%69 (@__kernel_cos-%76-loc s61)) (g '%76 (@__kernel_cos-%76-loc s61))))
(defund @__kernel_cos-%77-loc (s61)
  (s '%77 (@__kernel_cos-%77-val s61) (@__kernel_cos-%76-loc s61)))
(defund @__kernel_cos-%78-val (s61)
  (fsub-double (g '%68 (@__kernel_cos-%77-loc s61)) (g '%77 (@__kernel_cos-%77-loc s61))))
(defund @__kernel_cos-%78-loc (s61)
  (s '%78 (@__kernel_cos-%78-val s61) (@__kernel_cos-%77-loc s61)))
(defund @__kernel_cos-m61.3-mem (s61)
  (store-double (g '%78 (@__kernel_cos-%78-loc s61)) (g '%1 (@__kernel_cos-%78-loc s61)) (@__kernel_cos-m61.2-mem s61)))
(defund @__kernel_cos-succ61-lab (s61)
  (declare (ignore s61))
  '%79)

(defund @__kernel_cos-succ61-rev (mem loc pred)
  (declare (ignore pred))
  (mv '%79 mem loc))
(defund @__kernel_cos-m61.3-rev (mem loc pred)
  (@__kernel_cos-succ61-rev (store-double (g '%78 loc) (g '%1 loc) mem) loc pred))
(defund @__kernel_cos-%78-rev (mem loc pred)
  (@__kernel_cos-m61.3-rev mem (s '%78 (fsub-double (g '%68 loc) (g '%77 loc)) loc) pred))
(defund @__kernel_cos-%77-rev (mem loc pred)
  (@__kernel_cos-%78-rev mem (s '%77 (fsub-double (g '%69 loc) (g '%76 loc)) loc) pred))
(defund @__kernel_cos-%76-rev (mem loc pred)
  (@__kernel_cos-%77-rev mem (s '%76 (fsub-double (g '%72 loc) (g '%75 loc)) loc) pred))
(defund @__kernel_cos-%75-rev (mem loc pred)
  (@__kernel_cos-%76-rev mem (s '%75 (fmul-double (g '%73 loc) (g '%74 loc)) loc) pred))
(defund @__kernel_cos-%74-rev (mem loc pred)
  (@__kernel_cos-%75-rev mem (s '%74 (load-double (g '%3 loc) mem) loc) pred))
(defund @__kernel_cos-%73-rev (mem loc pred)
  (@__kernel_cos-%74-rev mem (s '%73 (load-double (g '%2 loc) mem) loc) pred))
(defund @__kernel_cos-%72-rev (mem loc pred)
  (@__kernel_cos-%73-rev mem (s '%72 (fmul-double (g '%70 loc) (g '%71 loc)) loc) pred))
(defund @__kernel_cos-%71-rev (mem loc pred)
  (@__kernel_cos-%72-rev mem (s '%71 (load-double (g '%r loc) mem) loc) pred))
(defund @__kernel_cos-%70-rev (mem loc pred)
  (@__kernel_cos-%71-rev mem (s '%70 (load-double (g '%z loc) mem) loc) pred))
(defund @__kernel_cos-%69-rev (mem loc pred)
  (@__kernel_cos-%70-rev mem (s '%69 (load-double (g '%hz loc) mem) loc) pred))
(defund @__kernel_cos-%68-rev (mem loc pred)
  (@__kernel_cos-%69-rev mem (s '%68 (load-double (g '%a loc) mem) loc) pred))
(defund @__kernel_cos-m61.2-rev (mem loc pred)
  (@__kernel_cos-%68-rev (store-double (g '%67 loc) (g '%a loc) mem) loc pred))
(defund @__kernel_cos-%67-rev (mem loc pred)
  (@__kernel_cos-m61.2-rev mem (s '%67 (fsub-double #x3ff0000000000000 (g '%66 loc)) loc) pred))
(defund @__kernel_cos-%66-rev (mem loc pred)
  (@__kernel_cos-%67-rev mem (s '%66 (load-double (g '%qx loc) mem) loc) pred))
(defund @__kernel_cos-m61.1-rev (mem loc pred)
  (@__kernel_cos-%66-rev (store-double (g '%65 loc) (g '%hz loc) mem) loc pred))
(defund @__kernel_cos-%65-rev (mem loc pred)
  (@__kernel_cos-m61.1-rev mem (s '%65 (fsub-double (g '%63 loc) (g '%64 loc)) loc) pred))
(defund @__kernel_cos-%64-rev (mem loc pred)
  (@__kernel_cos-%65-rev mem (s '%64 (load-double (g '%qx loc) mem) loc) pred))
(defund @__kernel_cos-%63-rev (mem loc pred)
  (@__kernel_cos-%64-rev mem (s '%63 (fmul-double #x3fe0000000000000 (g '%62 loc)) loc) pred))
(defund @__kernel_cos-%62-rev (mem loc pred)
  (@__kernel_cos-%63-rev mem (s '%62 (load-double (g '%z loc) mem) loc) pred))

(defund @__kernel_cos-%61-rev (mem loc pred)
  (@__kernel_cos-%62-rev mem loc pred))

(defund @__kernel_cos-%61-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%62 (load-double (g '%z loc) mem) loc))
    (loc (s '%63 (fmul-double #x3fe0000000000000 (g '%62 loc)) loc))
    (loc (s '%64 (load-double (g '%qx loc) mem) loc))
    (loc (s '%65 (fsub-double (g '%63 loc) (g '%64 loc)) loc))
    (mem (store-double (g '%65 loc) (g '%hz loc) mem))
    (loc (s '%66 (load-double (g '%qx loc) mem) loc))
    (loc (s '%67 (fsub-double #x3ff0000000000000 (g '%66 loc)) loc))
    (mem (store-double (g '%67 loc) (g '%a loc) mem))
    (loc (s '%68 (load-double (g '%a loc) mem) loc))
    (loc (s '%69 (load-double (g '%hz loc) mem) loc))
    (loc (s '%70 (load-double (g '%z loc) mem) loc))
    (loc (s '%71 (load-double (g '%r loc) mem) loc))
    (loc (s '%72 (fmul-double (g '%70 loc) (g '%71 loc)) loc))
    (loc (s '%73 (load-double (g '%2 loc) mem) loc))
    (loc (s '%74 (load-double (g '%3 loc) mem) loc))
    (loc (s '%75 (fmul-double (g '%73 loc) (g '%74 loc)) loc))
    (loc (s '%76 (fsub-double (g '%72 loc) (g '%75 loc)) loc))
    (loc (s '%77 (fsub-double (g '%69 loc) (g '%76 loc)) loc))
    (loc (s '%78 (fsub-double (g '%68 loc) (g '%77 loc)) loc))
    (mem (store-double (g '%78 loc) (g '%1 loc) mem))
    (succ '%79))
  (mv succ mem loc)))

(defruled @__kernel_cos-%61-expand-bb
  (equal (@__kernel_cos-%61-bb mem loc pred)
         (@__kernel_cos-%61-rev mem loc pred))
  :enable (@__kernel_cos-%61-bb @__kernel_cos-%61-rev
    @__kernel_cos-%62-rev
    @__kernel_cos-%63-rev
    @__kernel_cos-%64-rev
    @__kernel_cos-%65-rev
    @__kernel_cos-m61.1-rev
    @__kernel_cos-%66-rev
    @__kernel_cos-%67-rev
    @__kernel_cos-m61.2-rev
    @__kernel_cos-%68-rev
    @__kernel_cos-%69-rev
    @__kernel_cos-%70-rev
    @__kernel_cos-%71-rev
    @__kernel_cos-%72-rev
    @__kernel_cos-%73-rev
    @__kernel_cos-%74-rev
    @__kernel_cos-%75-rev
    @__kernel_cos-%76-rev
    @__kernel_cos-%77-rev
    @__kernel_cos-%78-rev
    @__kernel_cos-m61.3-rev
    @__kernel_cos-succ61-rev)
  :disable s-diff-s)

(defund @__kernel_cos-%79-mem (s79)
  (car s79))
(defund @__kernel_cos-%79-loc (s79)
  (cadr s79))
(defund @__kernel_cos-%79-pred (s79)
  (caddr s79))
(defund @__kernel_cos-%80-val (s79)
  (load-double (g '%1 (@__kernel_cos-%79-loc s79)) (@__kernel_cos-%79-mem s79)))
(defund @__kernel_cos-%80-loc (s79)
  (s '%80 (@__kernel_cos-%80-val s79) (@__kernel_cos-%79-loc s79)))
(defund @__kernel_cos-succ79-lab (s79)
  (declare (ignore s79))
  'ret)

(defund @__kernel_cos-succ79-rev (mem loc pred)
  (declare (ignore pred))
  (mv 'ret mem loc))
(defund @__kernel_cos-%80-rev (mem loc pred)
  (@__kernel_cos-succ79-rev mem (s '%80 (load-double (g '%1 loc) mem) loc) pred))

(defund @__kernel_cos-%79-rev (mem loc pred)
  (@__kernel_cos-%80-rev mem loc pred))

(defund @__kernel_cos-%79-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%80 (load-double (g '%1 loc) mem) loc))
    (succ 'ret))
  (mv succ mem loc)))

(defruled @__kernel_cos-%79-expand-bb
  (equal (@__kernel_cos-%79-bb mem loc pred)
         (@__kernel_cos-%79-rev mem loc pred))
  :enable (@__kernel_cos-%79-bb @__kernel_cos-%79-rev
    @__kernel_cos-%80-rev
    @__kernel_cos-succ79-rev)
  :disable s-diff-s)

(defund @__kernel_cos-step (label mem loc pred)
  (case label
    (%0 (@__kernel_cos-%0-bb mem loc pred))
    (%10 (@__kernel_cos-%10-bb mem loc pred))
    (%14 (@__kernel_cos-%14-bb mem loc pred))
    (%15 (@__kernel_cos-%15-bb mem loc pred))
    (%16 (@__kernel_cos-%16-bb mem loc pred))
    (%39 (@__kernel_cos-%39-bb mem loc pred))
    (%51 (@__kernel_cos-%51-bb mem loc pred))
    (%54 (@__kernel_cos-%54-bb mem loc pred))
    (%55 (@__kernel_cos-%55-bb mem loc pred))
    (%61 (@__kernel_cos-%61-bb mem loc pred))
    (%79 (@__kernel_cos-%79-bb mem loc pred))
    (otherwise (mv nil mem loc))))

(defund @__kernel_cos-steps (label mem loc pred n)
  (declare (xargs :measure (nfix n)))
  (if (equal label 'ret)
      (g '%80 loc)
    (if (zp n) nil
      (mv-let
        (new-label new-mem new-loc)
        (@__kernel_cos-step label mem loc pred)
        (@__kernel_cos-steps new-label new-mem new-loc label (1- n))))))

(defund @__kernel_cos (%x %y)
  (declare (ignore %x %y))
   nil)
