(in-package "ACL2")
(include-book "../llvm")
(include-book "s_floor")
(include-book "s_scalbn")

(defconst *__kernel_rem_pio2-globals* '(
  (init_jk #x00000002 #x00000003 #x00000004 #x00000006)
  (PIo2 #x40000000 #x3ff921fb #x00000000 #x3e74442d #x80000000 #x3cf84698 #x60000000 #x3b78cc51 #x80000000 #x39f01b83 #x40000000 #x387a2520 #x80000000 #x36e38222 #x00000000 #x3569f31d)))

(defund @__kernel_rem_pio2-%0-bb (mem loc)
  (b* (
    (mem (alloca-pointer 'ret mem))
    (mem (alloca-pointer 'x mem))
    (mem (alloca-i32 'y 1 mem))
    (mem (alloca-i32 'e0 1 mem))
    (mem (alloca-i32 'nx 1 mem))
    (mem (alloca-pointer 'prec mem))
    (mem (alloca-i32 'jz 1 mem))
    (mem (alloca-i32 'jx 1 mem))
    (mem (alloca-i32 'jv 1 mem))
    (mem (alloca-i32 'jp 1 mem))
    (mem (alloca-i32 'jk 1 mem))
    (mem (alloca-i32 'carry 1 mem))
    (mem (alloca-i32 'n 1 mem))
    (mem (alloca-i32 'iq 20 mem))
    (mem (alloca-i32 'i 1 mem))
    (mem (alloca-i32 'j 1 mem))
    (mem (alloca-i32 'k 1 mem))
    (mem (alloca-i32 'm 1 mem))
    (mem (alloca-i32 'q0 1 mem))
    (mem (alloca-i32 'ih 1 mem))
    (mem (alloca-double 'z 1 mem))
    (mem (alloca-double 'fw 1 mem))
    (mem (alloca-double 'f 20 mem))
    (mem (alloca-double 'fq 20 mem))
    (mem (alloca-double 'q 20 mem))
    (mem (store-pointer (g '%x loc) '(ret . 0) mem))
    (mem (store-pointer (g '%y loc) '(x . 0) mem))
    (mem (store-i32 (g '%e0 loc) '(y . 0) mem))
    (mem (store-i32 (g '%nx loc) '(e0 . 0) mem))
    (mem (store-i32 (g '%prec loc) '(nx . 0) mem))
    (mem (store-pointer (g '%ipio2 loc) '(prec . 0) mem))
    (loc (s '%7 (load-i32 '(nx . 0) mem) loc))
    (loc (s '%8 (sext-i32-to-i64 (g '%7 loc)) loc))
    (loc (s '%9 (getelementptr-i32 '(init_jk . 0) (g '%8 loc)) loc))
    (loc (s '%10 (load-i32 (g '%9 loc) mem) loc))
    (mem (store-i32 (g '%10 loc) '(jk . 0) mem))
    (loc (s '%11 (load-i32 '(jk . 0) mem) loc))
    (mem (store-i32 (g '%11 loc) '(jp . 0) mem))
    (loc (s '%12 (load-i32 '(e0 . 0) mem) loc))
    (loc (s '%13 (sub-i32 (g '%12 loc) 1) loc))
    (mem (store-i32 (g '%13 loc) '(jx . 0) mem))
    (loc (s '%14 (load-i32 '(y . 0) mem) loc))
    (loc (s '%15 (sub-i32 (g '%14 loc) 3) loc))
    (loc (s '%16 (sdiv-i32 (g '%15 loc) 24) loc))
    (mem (store-i32 (g '%16 loc) '(jv . 0) mem))
    (loc (s '%17 (load-i32 '(jv . 0) mem) loc))
    (loc (s '%18 (icmp-slt-i32 (g '%17 loc) 0) loc)))
  (case (g '%18 loc)
    (-1 (mv '@__kernel_rem_pio2-%19-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%20-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%19-bb (mem loc)
  (b* (
    (mem (store-i32 0 '(jv . 0) mem)))
  (mv '@__kernel_rem_pio2-%20-bb mem loc)))

(defund @__kernel_rem_pio2-%20-bb (mem loc)
  (b* (
    (loc (s '%21 (load-i32 '(y . 0) mem) loc))
    (loc (s '%22 (load-i32 '(jv . 0) mem) loc))
    (loc (s '%23 (add-i32 (g '%22 loc) 1) loc))
    (loc (s '%24 (mul-i32 24 (g '%23 loc)) loc))
    (loc (s '%25 (sub-i32 (g '%21 loc) (g '%24 loc)) loc))
    (mem (store-i32 (g '%25 loc) '(q0 . 0) mem))
    (loc (s '%26 (load-i32 '(jv . 0) mem) loc))
    (loc (s '%27 (load-i32 '(jx . 0) mem) loc))
    (loc (s '%28 (sub-i32 (g '%26 loc) (g '%27 loc)) loc))
    (mem (store-i32 (g '%28 loc) '(j . 0) mem))
    (loc (s '%29 (load-i32 '(jx . 0) mem) loc))
    (loc (s '%30 (load-i32 '(jk . 0) mem) loc))
    (loc (s '%31 (add-i32 (g '%29 loc) (g '%30 loc)) loc))
    (mem (store-i32 (g '%31 loc) '(m . 0) mem))
    (mem (store-i32 0 '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%32-bb mem loc)))

(defund @__kernel_rem_pio2-%32-bb (mem loc)
  (b* (
    (loc (s '%33 (load-i32 '(i . 0) mem) loc))
    (loc (s '%34 (load-i32 '(m . 0) mem) loc))
    (loc (s '%35 (icmp-sle-i32 (g '%33 loc) (g '%34 loc)) loc)))
  (case (g '%35 loc)
    (-1 (mv '@__kernel_rem_pio2-%36-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%57-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%36-bb (mem loc)
  (b* (
    (loc (s '%37 (load-i32 '(j . 0) mem) loc))
    (loc (s '%38 (icmp-slt-i32 (g '%37 loc) 0) loc)))
  (case (g '%38 loc)
    (-1 (mv '@__kernel_rem_pio2-%39-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%40-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%39-bb (mem loc)
  (b* ()
  (let* ((loc (s '%48 #x0000000000000000 loc))) (mv '@__kernel_rem_pio2-%47-bb mem loc))))

(defund @__kernel_rem_pio2-%40-bb (mem loc)
  (b* (
    (loc (s '%41 (load-i32 '(j . 0) mem) loc))
    (loc (s '%42 (sext-i32-to-i64 (g '%41 loc)) loc))
    (loc (s '%43 (load-pointer '(prec . 0) mem) loc))
    (loc (s '%44 (getelementptr-i32 (g '%43 loc) (g '%42 loc)) loc))
    (loc (s '%45 (load-i32 (g '%44 loc) mem) loc))
    (loc (s '%46 (sitofp-i32-to-double (g '%45 loc)) loc)))
  (let* ((loc (s '%48 (g '%46 loc) loc))) (mv '@__kernel_rem_pio2-%47-bb mem loc))))

(defund @__kernel_rem_pio2-%47-bb (mem loc)
  ; %48 = phi double [ #x0000000000000000, %39 ], [ (g '%46 loc), %40 ]
  (b* (
    (loc (s '%49 (load-i32 '(i . 0) mem) loc))
    (loc (s '%50 (sext-i32-to-i64 (g '%49 loc)) loc))
    (loc (s '%51 (getelementptr-double '(f . 0) (g '%50 loc)) loc))
    (mem (store-double (g '%48 loc) (g '%51 loc) mem)))
  (mv '@__kernel_rem_pio2-%52-bb mem loc)))

(defund @__kernel_rem_pio2-%52-bb (mem loc)
  (b* (
    (loc (s '%53 (load-i32 '(i . 0) mem) loc))
    (loc (s '%54 (add-i32 (g '%53 loc) 1) loc))
    (mem (store-i32 (g '%54 loc) '(i . 0) mem))
    (loc (s '%55 (load-i32 '(j . 0) mem) loc))
    (loc (s '%56 (add-i32 (g '%55 loc) 1) loc))
    (mem (store-i32 (g '%56 loc) '(j . 0) mem)))
  (mv '@__kernel_rem_pio2-%32-bb mem loc)))

(defund @__kernel_rem_pio2-%57-bb (mem loc)
  (b* (
    (mem (store-i32 0 '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%58-bb mem loc)))

(defund @__kernel_rem_pio2-%58-bb (mem loc)
  (b* (
    (loc (s '%59 (load-i32 '(i . 0) mem) loc))
    (loc (s '%60 (load-i32 '(jk . 0) mem) loc))
    (loc (s '%61 (icmp-sle-i32 (g '%59 loc) (g '%60 loc)) loc)))
  (case (g '%61 loc)
    (-1 (mv '@__kernel_rem_pio2-%62-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%95-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%62-bb (mem loc)
  (b* (
    (mem (store-i32 0 '(j . 0) mem))
    (mem (store-double #x0000000000000000 '(fw . 0) mem)))
  (mv '@__kernel_rem_pio2-%63-bb mem loc)))

(defund @__kernel_rem_pio2-%63-bb (mem loc)
  (b* (
    (loc (s '%64 (load-i32 '(j . 0) mem) loc))
    (loc (s '%65 (load-i32 '(jx . 0) mem) loc))
    (loc (s '%66 (icmp-sle-i32 (g '%64 loc) (g '%65 loc)) loc)))
  (case (g '%66 loc)
    (-1 (mv '@__kernel_rem_pio2-%67-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%87-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%67-bb (mem loc)
  (b* (
    (loc (s '%68 (load-i32 '(j . 0) mem) loc))
    (loc (s '%69 (sext-i32-to-i64 (g '%68 loc)) loc))
    (loc (s '%70 (load-pointer '(ret . 0) mem) loc))
    (loc (s '%71 (getelementptr-double (g '%70 loc) (g '%69 loc)) loc))
    (loc (s '%72 (load-double (g '%71 loc) mem) loc))
    (loc (s '%73 (load-i32 '(jx . 0) mem) loc))
    (loc (s '%74 (load-i32 '(i . 0) mem) loc))
    (loc (s '%75 (add-i32 (g '%73 loc) (g '%74 loc)) loc))
    (loc (s '%76 (load-i32 '(j . 0) mem) loc))
    (loc (s '%77 (sub-i32 (g '%75 loc) (g '%76 loc)) loc))
    (loc (s '%78 (sext-i32-to-i64 (g '%77 loc)) loc))
    (loc (s '%79 (getelementptr-double '(f . 0) (g '%78 loc)) loc))
    (loc (s '%80 (load-double (g '%79 loc) mem) loc))
    (loc (s '%81 (fmul-double (g '%72 loc) (g '%80 loc)) loc))
    (loc (s '%82 (load-double '(fw . 0) mem) loc))
    (loc (s '%83 (fadd-double (g '%82 loc) (g '%81 loc)) loc))
    (mem (store-double (g '%83 loc) '(fw . 0) mem)))
  (mv '@__kernel_rem_pio2-%84-bb mem loc)))

(defund @__kernel_rem_pio2-%84-bb (mem loc)
  (b* (
    (loc (s '%85 (load-i32 '(j . 0) mem) loc))
    (loc (s '%86 (add-i32 (g '%85 loc) 1) loc))
    (mem (store-i32 (g '%86 loc) '(j . 0) mem)))
  (mv '@__kernel_rem_pio2-%63-bb mem loc)))

(defund @__kernel_rem_pio2-%87-bb (mem loc)
  (b* (
    (loc (s '%88 (load-double '(fw . 0) mem) loc))
    (loc (s '%89 (load-i32 '(i . 0) mem) loc))
    (loc (s '%90 (sext-i32-to-i64 (g '%89 loc)) loc))
    (loc (s '%91 (getelementptr-double '(q . 0) (g '%90 loc)) loc))
    (mem (store-double (g '%88 loc) (g '%91 loc) mem)))
  (mv '@__kernel_rem_pio2-%92-bb mem loc)))

(defund @__kernel_rem_pio2-%92-bb (mem loc)
  (b* (
    (loc (s '%93 (load-i32 '(i . 0) mem) loc))
    (loc (s '%94 (add-i32 (g '%93 loc) 1) loc))
    (mem (store-i32 (g '%94 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%58-bb mem loc)))

(defund @__kernel_rem_pio2-%95-bb (mem loc)
  (b* (
    (loc (s '%96 (load-i32 '(jk . 0) mem) loc))
    (mem (store-i32 (g '%96 loc) '(jz . 0) mem)))
  (mv '@__kernel_rem_pio2-%97-bb mem loc)))

(defund @__kernel_rem_pio2-%97-bb (mem loc)
  (b* (
    (mem (store-i32 0 '(i . 0) mem))
    (loc (s '%98 (load-i32 '(jz . 0) mem) loc))
    (mem (store-i32 (g '%98 loc) '(j . 0) mem))
    (loc (s '%99 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%100 (sext-i32-to-i64 (g '%99 loc)) loc))
    (loc (s '%101 (getelementptr-double '(q . 0) (g '%100 loc)) loc))
    (loc (s '%102 (load-double (g '%101 loc) mem) loc))
    (mem (store-double (g '%102 loc) '(z . 0) mem)))
  (mv '@__kernel_rem_pio2-%103-bb mem loc)))

(defund @__kernel_rem_pio2-%103-bb (mem loc)
  (b* (
    (loc (s '%104 (load-i32 '(j . 0) mem) loc))
    (loc (s '%105 (icmp-sgt-i32 (g '%104 loc) 0) loc)))
  (case (g '%105 loc)
    (-1 (mv '@__kernel_rem_pio2-%106-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%131-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%106-bb (mem loc)
  (b* (
    (loc (s '%107 (load-double '(z . 0) mem) loc))
    (loc (s '%108 (fmul-double #x3E70000000000000 (g '%107 loc)) loc))
    (loc (s '%109 (fptosi-double-to-i32 (g '%108 loc)) loc))
    (loc (s '%110 (sitofp-i32-to-double (g '%109 loc)) loc))
    (mem (store-double (g '%110 loc) '(fw . 0) mem))
    (loc (s '%111 (load-double '(z . 0) mem) loc))
    (loc (s '%112 (load-double '(fw . 0) mem) loc))
    (loc (s '%113 (fmul-double #x4170000000000000 (g '%112 loc)) loc))
    (loc (s '%114 (fsub-double (g '%111 loc) (g '%113 loc)) loc))
    (loc (s '%115 (fptosi-double-to-i32 (g '%114 loc)) loc))
    (loc (s '%116 (load-i32 '(i . 0) mem) loc))
    (loc (s '%117 (sext-i32-to-i64 (g '%116 loc)) loc))
    (loc (s '%118 (getelementptr-i32 '(iq . 0) (g '%117 loc)) loc))
    (mem (store-i32 (g '%115 loc) (g '%118 loc) mem))
    (loc (s '%119 (load-i32 '(j . 0) mem) loc))
    (loc (s '%120 (sub-i32 (g '%119 loc) 1) loc))
    (loc (s '%121 (sext-i32-to-i64 (g '%120 loc)) loc))
    (loc (s '%122 (getelementptr-double '(q . 0) (g '%121 loc)) loc))
    (loc (s '%123 (load-double (g '%122 loc) mem) loc))
    (loc (s '%124 (load-double '(fw . 0) mem) loc))
    (loc (s '%125 (fadd-double (g '%123 loc) (g '%124 loc)) loc))
    (mem (store-double (g '%125 loc) '(z . 0) mem)))
  (mv '@__kernel_rem_pio2-%126-bb mem loc)))

(defund @__kernel_rem_pio2-%126-bb (mem loc)
  (b* (
    (loc (s '%127 (load-i32 '(i . 0) mem) loc))
    (loc (s '%128 (add-i32 (g '%127 loc) 1) loc))
    (mem (store-i32 (g '%128 loc) '(i . 0) mem))
    (loc (s '%129 (load-i32 '(j . 0) mem) loc))
    (loc (s '%130 (add-i32 (g '%129 loc) -1) loc))
    (mem (store-i32 (g '%130 loc) '(j . 0) mem)))
  (mv '@__kernel_rem_pio2-%103-bb mem loc)))

(defund @__kernel_rem_pio2-%131-bb (mem loc)
  (b* (
    (loc (s '%132 (load-double '(z . 0) mem) loc))
    (loc (s '%133 (load-i32 '(q0 . 0) mem) loc))
    (loc (s '%134 (@scalbn (g '%132 loc) (g '%133 loc)) loc))
    (mem (store-double (g '%134 loc) '(z . 0) mem))
    (loc (s '%135 (load-double '(z . 0) mem) loc))
    (loc (s '%136 (fmul-double (g '%135 loc) #x3fc0000000000000) loc))
    (loc (s '%137 (@floor (g '%136 loc)) loc))
    (loc (s '%138 (fmul-double #x4020000000000000 (g '%137 loc)) loc))
    (loc (s '%139 (load-double '(z . 0) mem) loc))
    (loc (s '%140 (fsub-double (g '%139 loc) (g '%138 loc)) loc))
    (mem (store-double (g '%140 loc) '(z . 0) mem))
    (loc (s '%141 (load-double '(z . 0) mem) loc))
    (loc (s '%142 (fptosi-double-to-i32 (g '%141 loc)) loc))
    (mem (store-i32 (g '%142 loc) '(n . 0) mem))
    (loc (s '%143 (load-i32 '(n . 0) mem) loc))
    (loc (s '%144 (sitofp-i32-to-double (g '%143 loc)) loc))
    (loc (s '%145 (load-double '(z . 0) mem) loc))
    (loc (s '%146 (fsub-double (g '%145 loc) (g '%144 loc)) loc))
    (mem (store-double (g '%146 loc) '(z . 0) mem))
    (mem (store-i32 0 '(ih . 0) mem))
    (loc (s '%147 (load-i32 '(q0 . 0) mem) loc))
    (loc (s '%148 (icmp-sgt-i32 (g '%147 loc) 0) loc)))
  (case (g '%148 loc)
    (-1 (mv '@__kernel_rem_pio2-%149-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%179-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%149-bb (mem loc)
  (b* (
    (loc (s '%150 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%151 (sub-i32 (g '%150 loc) 1) loc))
    (loc (s '%152 (sext-i32-to-i64 (g '%151 loc)) loc))
    (loc (s '%153 (getelementptr-i32 '(iq . 0) (g '%152 loc)) loc))
    (loc (s '%154 (load-i32 (g '%153 loc) mem) loc))
    (loc (s '%155 (load-i32 '(q0 . 0) mem) loc))
    (loc (s '%156 (sub-i32 24 (g '%155 loc)) loc))
    (loc (s '%157 (ashr-i32 (g '%154 loc) (g '%156 loc)) loc))
    (mem (store-i32 (g '%157 loc) '(i . 0) mem))
    (loc (s '%158 (load-i32 '(i . 0) mem) loc))
    (loc (s '%159 (load-i32 '(n . 0) mem) loc))
    (loc (s '%160 (add-i32 (g '%159 loc) (g '%158 loc)) loc))
    (mem (store-i32 (g '%160 loc) '(n . 0) mem))
    (loc (s '%161 (load-i32 '(i . 0) mem) loc))
    (loc (s '%162 (load-i32 '(q0 . 0) mem) loc))
    (loc (s '%163 (sub-i32 24 (g '%162 loc)) loc))
    (loc (s '%164 (shl-i32 (g '%161 loc) (g '%163 loc)) loc))
    (loc (s '%165 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%166 (sub-i32 (g '%165 loc) 1) loc))
    (loc (s '%167 (sext-i32-to-i64 (g '%166 loc)) loc))
    (loc (s '%168 (getelementptr-i32 '(iq . 0) (g '%167 loc)) loc))
    (loc (s '%169 (load-i32 (g '%168 loc) mem) loc))
    (loc (s '%170 (sub-i32 (g '%169 loc) (g '%164 loc)) loc))
    (mem (store-i32 (g '%170 loc) (g '%168 loc) mem))
    (loc (s '%171 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%172 (sub-i32 (g '%171 loc) 1) loc))
    (loc (s '%173 (sext-i32-to-i64 (g '%172 loc)) loc))
    (loc (s '%174 (getelementptr-i32 '(iq . 0) (g '%173 loc)) loc))
    (loc (s '%175 (load-i32 (g '%174 loc) mem) loc))
    (loc (s '%176 (load-i32 '(q0 . 0) mem) loc))
    (loc (s '%177 (sub-i32 23 (g '%176 loc)) loc))
    (loc (s '%178 (ashr-i32 (g '%175 loc) (g '%177 loc)) loc))
    (mem (store-i32 (g '%178 loc) '(ih . 0) mem)))
  (mv '@__kernel_rem_pio2-%195-bb mem loc)))

(defund @__kernel_rem_pio2-%179-bb (mem loc)
  (b* (
    (loc (s '%180 (load-i32 '(q0 . 0) mem) loc))
    (loc (s '%181 (icmp-eq-i32 (g '%180 loc) 0) loc)))
  (case (g '%181 loc)
    (-1 (mv '@__kernel_rem_pio2-%182-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%189-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%182-bb (mem loc)
  (b* (
    (loc (s '%183 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%184 (sub-i32 (g '%183 loc) 1) loc))
    (loc (s '%185 (sext-i32-to-i64 (g '%184 loc)) loc))
    (loc (s '%186 (getelementptr-i32 '(iq . 0) (g '%185 loc)) loc))
    (loc (s '%187 (load-i32 (g '%186 loc) mem) loc))
    (loc (s '%188 (ashr-i32 (g '%187 loc) 23) loc))
    (mem (store-i32 (g '%188 loc) '(ih . 0) mem)))
  (mv '@__kernel_rem_pio2-%194-bb mem loc)))

(defund @__kernel_rem_pio2-%189-bb (mem loc)
  (b* (
    (loc (s '%190 (load-double '(z . 0) mem) loc))
    (loc (s '%191 (fcmp-oge-double (g '%190 loc) #x3fe0000000000000) loc)))
  (case (g '%191 loc)
    (-1 (mv '@__kernel_rem_pio2-%192-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%193-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%192-bb (mem loc)
  (b* (
    (mem (store-i32 2 '(ih . 0) mem)))
  (mv '@__kernel_rem_pio2-%193-bb mem loc)))

(defund @__kernel_rem_pio2-%193-bb (mem loc)
  (b* ()
  (mv '@__kernel_rem_pio2-%194-bb mem loc)))

(defund @__kernel_rem_pio2-%194-bb (mem loc)
  (b* ()
  (mv '@__kernel_rem_pio2-%195-bb mem loc)))

(defund @__kernel_rem_pio2-%195-bb (mem loc)
  (b* (
    (loc (s '%196 (load-i32 '(ih . 0) mem) loc))
    (loc (s '%197 (icmp-sgt-i32 (g '%196 loc) 0) loc)))
  (case (g '%197 loc)
    (-1 (mv '@__kernel_rem_pio2-%198-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%267-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%198-bb (mem loc)
  (b* (
    (loc (s '%199 (load-i32 '(n . 0) mem) loc))
    (loc (s '%200 (add-i32 (g '%199 loc) 1) loc))
    (mem (store-i32 (g '%200 loc) '(n . 0) mem))
    (mem (store-i32 0 '(carry . 0) mem))
    (mem (store-i32 0 '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%201-bb mem loc)))

(defund @__kernel_rem_pio2-%201-bb (mem loc)
  (b* (
    (loc (s '%202 (load-i32 '(i . 0) mem) loc))
    (loc (s '%203 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%204 (icmp-slt-i32 (g '%202 loc) (g '%203 loc)) loc)))
  (case (g '%204 loc)
    (-1 (mv '@__kernel_rem_pio2-%205-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%232-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%205-bb (mem loc)
  (b* (
    (loc (s '%206 (load-i32 '(i . 0) mem) loc))
    (loc (s '%207 (sext-i32-to-i64 (g '%206 loc)) loc))
    (loc (s '%208 (getelementptr-i32 '(iq . 0) (g '%207 loc)) loc))
    (loc (s '%209 (load-i32 (g '%208 loc) mem) loc))
    (mem (store-i32 (g '%209 loc) '(j . 0) mem))
    (loc (s '%210 (load-i32 '(carry . 0) mem) loc))
    (loc (s '%211 (icmp-eq-i32 (g '%210 loc) 0) loc)))
  (case (g '%211 loc)
    (-1 (mv '@__kernel_rem_pio2-%212-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%222-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%212-bb (mem loc)
  (b* (
    (loc (s '%213 (load-i32 '(j . 0) mem) loc))
    (loc (s '%214 (icmp-ne-i32 (g '%213 loc) 0) loc)))
  (case (g '%214 loc)
    (-1 (mv '@__kernel_rem_pio2-%215-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%221-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%215-bb (mem loc)
  (b* (
    (mem (store-i32 1 '(carry . 0) mem))
    (loc (s '%216 (load-i32 '(j . 0) mem) loc))
    (loc (s '%217 (sub-i32 16777216 (g '%216 loc)) loc))
    (loc (s '%218 (load-i32 '(i . 0) mem) loc))
    (loc (s '%219 (sext-i32-to-i64 (g '%218 loc)) loc))
    (loc (s '%220 (getelementptr-i32 '(iq . 0) (g '%219 loc)) loc))
    (mem (store-i32 (g '%217 loc) (g '%220 loc) mem)))
  (mv '@__kernel_rem_pio2-%221-bb mem loc)))

(defund @__kernel_rem_pio2-%221-bb (mem loc)
  (b* ()
  (mv '@__kernel_rem_pio2-%228-bb mem loc)))

(defund @__kernel_rem_pio2-%222-bb (mem loc)
  (b* (
    (loc (s '%223 (load-i32 '(j . 0) mem) loc))
    (loc (s '%224 (sub-i32 16777215 (g '%223 loc)) loc))
    (loc (s '%225 (load-i32 '(i . 0) mem) loc))
    (loc (s '%226 (sext-i32-to-i64 (g '%225 loc)) loc))
    (loc (s '%227 (getelementptr-i32 '(iq . 0) (g '%226 loc)) loc))
    (mem (store-i32 (g '%224 loc) (g '%227 loc) mem)))
  (mv '@__kernel_rem_pio2-%228-bb mem loc)))

(defund @__kernel_rem_pio2-%228-bb (mem loc)
  (b* ()
  (mv '@__kernel_rem_pio2-%229-bb mem loc)))

(defund @__kernel_rem_pio2-%229-bb (mem loc)
  (b* (
    (loc (s '%230 (load-i32 '(i . 0) mem) loc))
    (loc (s '%231 (add-i32 (g '%230 loc) 1) loc))
    (mem (store-i32 (g '%231 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%201-bb mem loc)))

(defund @__kernel_rem_pio2-%232-bb (mem loc)
  (b* (
    (loc (s '%233 (load-i32 '(q0 . 0) mem) loc))
    (loc (s '%234 (icmp-sgt-i32 (g '%233 loc) 0) loc)))
  (case (g '%234 loc)
    (-1 (mv '@__kernel_rem_pio2-%235-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%252-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%235-bb (mem loc)
  (b* (
    (loc (s '%236 (load-i32 '(q0 . 0) mem) loc)))
  (case (g '%236 loc)
    (1 (mv '@__kernel_rem_pio2-%237-bb mem loc))
    (2 (mv '@__kernel_rem_pio2-%244-bb mem loc))
    (otherwise (mv '@__kernel_rem_pio2-%251-bb mem loc)))))

(defund @__kernel_rem_pio2-%237-bb (mem loc)
  (b* (
    (loc (s '%238 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%239 (sub-i32 (g '%238 loc) 1) loc))
    (loc (s '%240 (sext-i32-to-i64 (g '%239 loc)) loc))
    (loc (s '%241 (getelementptr-i32 '(iq . 0) (g '%240 loc)) loc))
    (loc (s '%242 (load-i32 (g '%241 loc) mem) loc))
    (loc (s '%243 (and-i32 (g '%242 loc) 8388607) loc))
    (mem (store-i32 (g '%243 loc) (g '%241 loc) mem)))
  (mv '@__kernel_rem_pio2-%251-bb mem loc)))

(defund @__kernel_rem_pio2-%244-bb (mem loc)
  (b* (
    (loc (s '%245 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%246 (sub-i32 (g '%245 loc) 1) loc))
    (loc (s '%247 (sext-i32-to-i64 (g '%246 loc)) loc))
    (loc (s '%248 (getelementptr-i32 '(iq . 0) (g '%247 loc)) loc))
    (loc (s '%249 (load-i32 (g '%248 loc) mem) loc))
    (loc (s '%250 (and-i32 (g '%249 loc) 4194303) loc))
    (mem (store-i32 (g '%250 loc) (g '%248 loc) mem)))
  (mv '@__kernel_rem_pio2-%251-bb mem loc)))

(defund @__kernel_rem_pio2-%251-bb (mem loc)
  (b* ()
  (mv '@__kernel_rem_pio2-%252-bb mem loc)))

(defund @__kernel_rem_pio2-%252-bb (mem loc)
  (b* (
    (loc (s '%253 (load-i32 '(ih . 0) mem) loc))
    (loc (s '%254 (icmp-eq-i32 (g '%253 loc) 2) loc)))
  (case (g '%254 loc)
    (-1 (mv '@__kernel_rem_pio2-%255-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%266-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%255-bb (mem loc)
  (b* (
    (loc (s '%256 (load-double '(z . 0) mem) loc))
    (loc (s '%257 (fsub-double #x3ff0000000000000 (g '%256 loc)) loc))
    (mem (store-double (g '%257 loc) '(z . 0) mem))
    (loc (s '%258 (load-i32 '(carry . 0) mem) loc))
    (loc (s '%259 (icmp-ne-i32 (g '%258 loc) 0) loc)))
  (case (g '%259 loc)
    (-1 (mv '@__kernel_rem_pio2-%260-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%265-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%260-bb (mem loc)
  (b* (
    (loc (s '%261 (load-i32 '(q0 . 0) mem) loc))
    (loc (s '%262 (@scalbn #x3ff0000000000000 (g '%261 loc)) loc))
    (loc (s '%263 (load-double '(z . 0) mem) loc))
    (loc (s '%264 (fsub-double (g '%263 loc) (g '%262 loc)) loc))
    (mem (store-double (g '%264 loc) '(z . 0) mem)))
  (mv '@__kernel_rem_pio2-%265-bb mem loc)))

(defund @__kernel_rem_pio2-%265-bb (mem loc)
  (b* ()
  (mv '@__kernel_rem_pio2-%266-bb mem loc)))

(defund @__kernel_rem_pio2-%266-bb (mem loc)
  (b* ()
  (mv '@__kernel_rem_pio2-%267-bb mem loc)))

(defund @__kernel_rem_pio2-%267-bb (mem loc)
  (b* (
    (loc (s '%268 (load-double '(z . 0) mem) loc))
    (loc (s '%269 (fcmp-oeq-double (g '%268 loc) #x0000000000000000) loc)))
  (case (g '%269 loc)
    (-1 (mv '@__kernel_rem_pio2-%270-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%363-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%270-bb (mem loc)
  (b* (
    (mem (store-i32 0 '(j . 0) mem))
    (loc (s '%271 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%272 (sub-i32 (g '%271 loc) 1) loc))
    (mem (store-i32 (g '%272 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%273-bb mem loc)))

(defund @__kernel_rem_pio2-%273-bb (mem loc)
  (b* (
    (loc (s '%274 (load-i32 '(i . 0) mem) loc))
    (loc (s '%275 (load-i32 '(jk . 0) mem) loc))
    (loc (s '%276 (icmp-sge-i32 (g '%274 loc) (g '%275 loc)) loc)))
  (case (g '%276 loc)
    (-1 (mv '@__kernel_rem_pio2-%277-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%287-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%277-bb (mem loc)
  (b* (
    (loc (s '%278 (load-i32 '(i . 0) mem) loc))
    (loc (s '%279 (sext-i32-to-i64 (g '%278 loc)) loc))
    (loc (s '%280 (getelementptr-i32 '(iq . 0) (g '%279 loc)) loc))
    (loc (s '%281 (load-i32 (g '%280 loc) mem) loc))
    (loc (s '%282 (load-i32 '(j . 0) mem) loc))
    (loc (s '%283 (or-i32 (g '%282 loc) (g '%281 loc)) loc))
    (mem (store-i32 (g '%283 loc) '(j . 0) mem)))
  (mv '@__kernel_rem_pio2-%284-bb mem loc)))

(defund @__kernel_rem_pio2-%284-bb (mem loc)
  (b* (
    (loc (s '%285 (load-i32 '(i . 0) mem) loc))
    (loc (s '%286 (add-i32 (g '%285 loc) -1) loc))
    (mem (store-i32 (g '%286 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%273-bb mem loc)))

(defund @__kernel_rem_pio2-%287-bb (mem loc)
  (b* (
    (loc (s '%288 (load-i32 '(j . 0) mem) loc))
    (loc (s '%289 (icmp-eq-i32 (g '%288 loc) 0) loc)))
  (case (g '%289 loc)
    (-1 (mv '@__kernel_rem_pio2-%290-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%362-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%290-bb (mem loc)
  (b* (
    (mem (store-i32 1 '(k . 0) mem)))
  (mv '@__kernel_rem_pio2-%291-bb mem loc)))

(defund @__kernel_rem_pio2-%291-bb (mem loc)
  (b* (
    (loc (s '%292 (load-i32 '(jk . 0) mem) loc))
    (loc (s '%293 (load-i32 '(k . 0) mem) loc))
    (loc (s '%294 (sub-i32 (g '%292 loc) (g '%293 loc)) loc))
    (loc (s '%295 (sext-i32-to-i64 (g '%294 loc)) loc))
    (loc (s '%296 (getelementptr-i32 '(iq . 0) (g '%295 loc)) loc))
    (loc (s '%297 (load-i32 (g '%296 loc) mem) loc))
    (loc (s '%298 (icmp-eq-i32 (g '%297 loc) 0) loc)))
  (case (g '%298 loc)
    (-1 (mv '@__kernel_rem_pio2-%299-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%303-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%299-bb (mem loc)
  (b* ()
  (mv '@__kernel_rem_pio2-%300-bb mem loc)))

(defund @__kernel_rem_pio2-%300-bb (mem loc)
  (b* (
    (loc (s '%301 (load-i32 '(k . 0) mem) loc))
    (loc (s '%302 (add-i32 (g '%301 loc) 1) loc))
    (mem (store-i32 (g '%302 loc) '(k . 0) mem)))
  (mv '@__kernel_rem_pio2-%291-bb mem loc)))

(defund @__kernel_rem_pio2-%303-bb (mem loc)
  (b* (
    (loc (s '%304 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%305 (add-i32 (g '%304 loc) 1) loc))
    (mem (store-i32 (g '%305 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%306-bb mem loc)))

(defund @__kernel_rem_pio2-%306-bb (mem loc)
  (b* (
    (loc (s '%307 (load-i32 '(i . 0) mem) loc))
    (loc (s '%308 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%309 (load-i32 '(k . 0) mem) loc))
    (loc (s '%310 (add-i32 (g '%308 loc) (g '%309 loc)) loc))
    (loc (s '%311 (icmp-sle-i32 (g '%307 loc) (g '%310 loc)) loc)))
  (case (g '%311 loc)
    (-1 (mv '@__kernel_rem_pio2-%312-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%358-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%312-bb (mem loc)
  (b* (
    (loc (s '%313 (load-i32 '(jv . 0) mem) loc))
    (loc (s '%314 (load-i32 '(i . 0) mem) loc))
    (loc (s '%315 (add-i32 (g '%313 loc) (g '%314 loc)) loc))
    (loc (s '%316 (sext-i32-to-i64 (g '%315 loc)) loc))
    (loc (s '%317 (load-pointer '(prec . 0) mem) loc))
    (loc (s '%318 (getelementptr-i32 (g '%317 loc) (g '%316 loc)) loc))
    (loc (s '%319 (load-i32 (g '%318 loc) mem) loc))
    (loc (s '%320 (sitofp-i32-to-double (g '%319 loc)) loc))
    (loc (s '%321 (load-i32 '(jx . 0) mem) loc))
    (loc (s '%322 (load-i32 '(i . 0) mem) loc))
    (loc (s '%323 (add-i32 (g '%321 loc) (g '%322 loc)) loc))
    (loc (s '%324 (sext-i32-to-i64 (g '%323 loc)) loc))
    (loc (s '%325 (getelementptr-double '(f . 0) (g '%324 loc)) loc))
    (mem (store-double (g '%320 loc) (g '%325 loc) mem))
    (mem (store-i32 0 '(j . 0) mem))
    (mem (store-double #x0000000000000000 '(fw . 0) mem)))
  (mv '@__kernel_rem_pio2-%326-bb mem loc)))

(defund @__kernel_rem_pio2-%326-bb (mem loc)
  (b* (
    (loc (s '%327 (load-i32 '(j . 0) mem) loc))
    (loc (s '%328 (load-i32 '(jx . 0) mem) loc))
    (loc (s '%329 (icmp-sle-i32 (g '%327 loc) (g '%328 loc)) loc)))
  (case (g '%329 loc)
    (-1 (mv '@__kernel_rem_pio2-%330-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%350-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%330-bb (mem loc)
  (b* (
    (loc (s '%331 (load-i32 '(j . 0) mem) loc))
    (loc (s '%332 (sext-i32-to-i64 (g '%331 loc)) loc))
    (loc (s '%333 (load-pointer '(ret . 0) mem) loc))
    (loc (s '%334 (getelementptr-double (g '%333 loc) (g '%332 loc)) loc))
    (loc (s '%335 (load-double (g '%334 loc) mem) loc))
    (loc (s '%336 (load-i32 '(jx . 0) mem) loc))
    (loc (s '%337 (load-i32 '(i . 0) mem) loc))
    (loc (s '%338 (add-i32 (g '%336 loc) (g '%337 loc)) loc))
    (loc (s '%339 (load-i32 '(j . 0) mem) loc))
    (loc (s '%340 (sub-i32 (g '%338 loc) (g '%339 loc)) loc))
    (loc (s '%341 (sext-i32-to-i64 (g '%340 loc)) loc))
    (loc (s '%342 (getelementptr-double '(f . 0) (g '%341 loc)) loc))
    (loc (s '%343 (load-double (g '%342 loc) mem) loc))
    (loc (s '%344 (fmul-double (g '%335 loc) (g '%343 loc)) loc))
    (loc (s '%345 (load-double '(fw . 0) mem) loc))
    (loc (s '%346 (fadd-double (g '%345 loc) (g '%344 loc)) loc))
    (mem (store-double (g '%346 loc) '(fw . 0) mem)))
  (mv '@__kernel_rem_pio2-%347-bb mem loc)))

(defund @__kernel_rem_pio2-%347-bb (mem loc)
  (b* (
    (loc (s '%348 (load-i32 '(j . 0) mem) loc))
    (loc (s '%349 (add-i32 (g '%348 loc) 1) loc))
    (mem (store-i32 (g '%349 loc) '(j . 0) mem)))
  (mv '@__kernel_rem_pio2-%326-bb mem loc)))

(defund @__kernel_rem_pio2-%350-bb (mem loc)
  (b* (
    (loc (s '%351 (load-double '(fw . 0) mem) loc))
    (loc (s '%352 (load-i32 '(i . 0) mem) loc))
    (loc (s '%353 (sext-i32-to-i64 (g '%352 loc)) loc))
    (loc (s '%354 (getelementptr-double '(q . 0) (g '%353 loc)) loc))
    (mem (store-double (g '%351 loc) (g '%354 loc) mem)))
  (mv '@__kernel_rem_pio2-%355-bb mem loc)))

(defund @__kernel_rem_pio2-%355-bb (mem loc)
  (b* (
    (loc (s '%356 (load-i32 '(i . 0) mem) loc))
    (loc (s '%357 (add-i32 (g '%356 loc) 1) loc))
    (mem (store-i32 (g '%357 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%306-bb mem loc)))

(defund @__kernel_rem_pio2-%358-bb (mem loc)
  (b* (
    (loc (s '%359 (load-i32 '(k . 0) mem) loc))
    (loc (s '%360 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%361 (add-i32 (g '%360 loc) (g '%359 loc)) loc))
    (mem (store-i32 (g '%361 loc) '(jz . 0) mem)))
  (mv '@__kernel_rem_pio2-%97-bb mem loc)))

(defund @__kernel_rem_pio2-%362-bb (mem loc)
  (b* ()
  (mv '@__kernel_rem_pio2-%363-bb mem loc)))

(defund @__kernel_rem_pio2-%363-bb (mem loc)
  (b* (
    (loc (s '%364 (load-double '(z . 0) mem) loc))
    (loc (s '%365 (fcmp-oeq-double (g '%364 loc) #x0000000000000000) loc)))
  (case (g '%365 loc)
    (-1 (mv '@__kernel_rem_pio2-%366-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%383-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%366-bb (mem loc)
  (b* (
    (loc (s '%367 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%368 (sub-i32 (g '%367 loc) 1) loc))
    (mem (store-i32 (g '%368 loc) '(jz . 0) mem))
    (loc (s '%369 (load-i32 '(q0 . 0) mem) loc))
    (loc (s '%370 (sub-i32 (g '%369 loc) 24) loc))
    (mem (store-i32 (g '%370 loc) '(q0 . 0) mem)))
  (mv '@__kernel_rem_pio2-%371-bb mem loc)))

(defund @__kernel_rem_pio2-%371-bb (mem loc)
  (b* (
    (loc (s '%372 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%373 (sext-i32-to-i64 (g '%372 loc)) loc))
    (loc (s '%374 (getelementptr-i32 '(iq . 0) (g '%373 loc)) loc))
    (loc (s '%375 (load-i32 (g '%374 loc) mem) loc))
    (loc (s '%376 (icmp-eq-i32 (g '%375 loc) 0) loc)))
  (case (g '%376 loc)
    (-1 (mv '@__kernel_rem_pio2-%377-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%382-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%377-bb (mem loc)
  (b* (
    (loc (s '%378 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%379 (add-i32 (g '%378 loc) -1) loc))
    (mem (store-i32 (g '%379 loc) '(jz . 0) mem))
    (loc (s '%380 (load-i32 '(q0 . 0) mem) loc))
    (loc (s '%381 (sub-i32 (g '%380 loc) 24) loc))
    (mem (store-i32 (g '%381 loc) '(q0 . 0) mem)))
  (mv '@__kernel_rem_pio2-%371-bb mem loc)))

(defund @__kernel_rem_pio2-%382-bb (mem loc)
  (b* ()
  (mv '@__kernel_rem_pio2-%419-bb mem loc)))

(defund @__kernel_rem_pio2-%383-bb (mem loc)
  (b* (
    (loc (s '%384 (load-double '(z . 0) mem) loc))
    (loc (s '%385 (load-i32 '(q0 . 0) mem) loc))
    (loc (s '%386 (sub-i32 0 (g '%385 loc)) loc))
    (loc (s '%387 (@scalbn (g '%384 loc) (g '%386 loc)) loc))
    (mem (store-double (g '%387 loc) '(z . 0) mem))
    (loc (s '%388 (load-double '(z . 0) mem) loc))
    (loc (s '%389 (fcmp-oge-double (g '%388 loc) #x4170000000000000) loc)))
  (case (g '%389 loc)
    (-1 (mv '@__kernel_rem_pio2-%390-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%412-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%390-bb (mem loc)
  (b* (
    (loc (s '%391 (load-double '(z . 0) mem) loc))
    (loc (s '%392 (fmul-double #x3E70000000000000 (g '%391 loc)) loc))
    (loc (s '%393 (fptosi-double-to-i32 (g '%392 loc)) loc))
    (loc (s '%394 (sitofp-i32-to-double (g '%393 loc)) loc))
    (mem (store-double (g '%394 loc) '(fw . 0) mem))
    (loc (s '%395 (load-double '(z . 0) mem) loc))
    (loc (s '%396 (load-double '(fw . 0) mem) loc))
    (loc (s '%397 (fmul-double #x4170000000000000 (g '%396 loc)) loc))
    (loc (s '%398 (fsub-double (g '%395 loc) (g '%397 loc)) loc))
    (loc (s '%399 (fptosi-double-to-i32 (g '%398 loc)) loc))
    (loc (s '%400 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%401 (sext-i32-to-i64 (g '%400 loc)) loc))
    (loc (s '%402 (getelementptr-i32 '(iq . 0) (g '%401 loc)) loc))
    (mem (store-i32 (g '%399 loc) (g '%402 loc) mem))
    (loc (s '%403 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%404 (add-i32 (g '%403 loc) 1) loc))
    (mem (store-i32 (g '%404 loc) '(jz . 0) mem))
    (loc (s '%405 (load-i32 '(q0 . 0) mem) loc))
    (loc (s '%406 (add-i32 (g '%405 loc) 24) loc))
    (mem (store-i32 (g '%406 loc) '(q0 . 0) mem))
    (loc (s '%407 (load-double '(fw . 0) mem) loc))
    (loc (s '%408 (fptosi-double-to-i32 (g '%407 loc)) loc))
    (loc (s '%409 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%410 (sext-i32-to-i64 (g '%409 loc)) loc))
    (loc (s '%411 (getelementptr-i32 '(iq . 0) (g '%410 loc)) loc))
    (mem (store-i32 (g '%408 loc) (g '%411 loc) mem)))
  (mv '@__kernel_rem_pio2-%418-bb mem loc)))

(defund @__kernel_rem_pio2-%412-bb (mem loc)
  (b* (
    (loc (s '%413 (load-double '(z . 0) mem) loc))
    (loc (s '%414 (fptosi-double-to-i32 (g '%413 loc)) loc))
    (loc (s '%415 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%416 (sext-i32-to-i64 (g '%415 loc)) loc))
    (loc (s '%417 (getelementptr-i32 '(iq . 0) (g '%416 loc)) loc))
    (mem (store-i32 (g '%414 loc) (g '%417 loc) mem)))
  (mv '@__kernel_rem_pio2-%418-bb mem loc)))

(defund @__kernel_rem_pio2-%418-bb (mem loc)
  (b* ()
  (mv '@__kernel_rem_pio2-%419-bb mem loc)))

(defund @__kernel_rem_pio2-%419-bb (mem loc)
  (b* (
    (loc (s '%420 (load-i32 '(q0 . 0) mem) loc))
    (loc (s '%421 (@scalbn #x3ff0000000000000 (g '%420 loc)) loc))
    (mem (store-double (g '%421 loc) '(fw . 0) mem))
    (loc (s '%422 (load-i32 '(jz . 0) mem) loc))
    (mem (store-i32 (g '%422 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%423-bb mem loc)))

(defund @__kernel_rem_pio2-%423-bb (mem loc)
  (b* (
    (loc (s '%424 (load-i32 '(i . 0) mem) loc))
    (loc (s '%425 (icmp-sge-i32 (g '%424 loc) 0) loc)))
  (case (g '%425 loc)
    (-1 (mv '@__kernel_rem_pio2-%426-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%442-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%426-bb (mem loc)
  (b* (
    (loc (s '%427 (load-double '(fw . 0) mem) loc))
    (loc (s '%428 (load-i32 '(i . 0) mem) loc))
    (loc (s '%429 (sext-i32-to-i64 (g '%428 loc)) loc))
    (loc (s '%430 (getelementptr-i32 '(iq . 0) (g '%429 loc)) loc))
    (loc (s '%431 (load-i32 (g '%430 loc) mem) loc))
    (loc (s '%432 (sitofp-i32-to-double (g '%431 loc)) loc))
    (loc (s '%433 (fmul-double (g '%427 loc) (g '%432 loc)) loc))
    (loc (s '%434 (load-i32 '(i . 0) mem) loc))
    (loc (s '%435 (sext-i32-to-i64 (g '%434 loc)) loc))
    (loc (s '%436 (getelementptr-double '(q . 0) (g '%435 loc)) loc))
    (mem (store-double (g '%433 loc) (g '%436 loc) mem))
    (loc (s '%437 (load-double '(fw . 0) mem) loc))
    (loc (s '%438 (fmul-double (g '%437 loc) #x3E70000000000000) loc))
    (mem (store-double (g '%438 loc) '(fw . 0) mem)))
  (mv '@__kernel_rem_pio2-%439-bb mem loc)))

(defund @__kernel_rem_pio2-%439-bb (mem loc)
  (b* (
    (loc (s '%440 (load-i32 '(i . 0) mem) loc))
    (loc (s '%441 (add-i32 (g '%440 loc) -1) loc))
    (mem (store-i32 (g '%441 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%423-bb mem loc)))

(defund @__kernel_rem_pio2-%442-bb (mem loc)
  (b* (
    (loc (s '%443 (load-i32 '(jz . 0) mem) loc))
    (mem (store-i32 (g '%443 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%444-bb mem loc)))

(defund @__kernel_rem_pio2-%444-bb (mem loc)
  (b* (
    (loc (s '%445 (load-i32 '(i . 0) mem) loc))
    (loc (s '%446 (icmp-sge-i32 (g '%445 loc) 0) loc)))
  (case (g '%446 loc)
    (-1 (mv '@__kernel_rem_pio2-%447-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%487-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%447-bb (mem loc)
  (b* (
    (mem (store-double #x0000000000000000 '(fw . 0) mem))
    (mem (store-i32 0 '(k . 0) mem)))
  (mv '@__kernel_rem_pio2-%448-bb mem loc)))

(defund @__kernel_rem_pio2-%448-bb (mem loc)
  (b* (
    (loc (s '%449 (load-i32 '(k . 0) mem) loc))
    (loc (s '%450 (load-i32 '(jp . 0) mem) loc))
    (loc (s '%451 (icmp-sle-i32 (g '%449 loc) (g '%450 loc)) loc)))
  (case (g '%451 loc)
    (-1 (mv '@__kernel_rem_pio2-%452-bb mem loc))
    ( 0 (let* ((loc (s '%459 0 loc))) (mv '@__kernel_rem_pio2-%458-bb mem loc)))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%452-bb (mem loc)
  (b* (
    (loc (s '%453 (load-i32 '(k . 0) mem) loc))
    (loc (s '%454 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%455 (load-i32 '(i . 0) mem) loc))
    (loc (s '%456 (sub-i32 (g '%454 loc) (g '%455 loc)) loc))
    (loc (s '%457 (icmp-sle-i32 (g '%453 loc) (g '%456 loc)) loc)))
  (let* ((loc (s '%459 (g '%457 loc) loc))) (mv '@__kernel_rem_pio2-%458-bb mem loc))))

(defund @__kernel_rem_pio2-%458-bb (mem loc)
  ; %459 = phi i1 [ 0, %448 ], [ (g '%457 loc), %452 ]
  (b* ()
  (case (g '%459 loc)
    (-1 (mv '@__kernel_rem_pio2-%460-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%477-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%460-bb (mem loc)
  (b* (
    (loc (s '%461 (load-i32 '(k . 0) mem) loc))
    (loc (s '%462 (sext-i32-to-i64 (g '%461 loc)) loc))
    (loc (s '%463 (getelementptr-double '(PIo2 . 0) (g '%462 loc)) loc))
    (loc (s '%464 (load-double (g '%463 loc) mem) loc))
    (loc (s '%465 (load-i32 '(i . 0) mem) loc))
    (loc (s '%466 (load-i32 '(k . 0) mem) loc))
    (loc (s '%467 (add-i32 (g '%465 loc) (g '%466 loc)) loc))
    (loc (s '%468 (sext-i32-to-i64 (g '%467 loc)) loc))
    (loc (s '%469 (getelementptr-double '(q . 0) (g '%468 loc)) loc))
    (loc (s '%470 (load-double (g '%469 loc) mem) loc))
    (loc (s '%471 (fmul-double (g '%464 loc) (g '%470 loc)) loc))
    (loc (s '%472 (load-double '(fw . 0) mem) loc))
    (loc (s '%473 (fadd-double (g '%472 loc) (g '%471 loc)) loc))
    (mem (store-double (g '%473 loc) '(fw . 0) mem)))
  (mv '@__kernel_rem_pio2-%474-bb mem loc)))

(defund @__kernel_rem_pio2-%474-bb (mem loc)
  (b* (
    (loc (s '%475 (load-i32 '(k . 0) mem) loc))
    (loc (s '%476 (add-i32 (g '%475 loc) 1) loc))
    (mem (store-i32 (g '%476 loc) '(k . 0) mem)))
  (mv '@__kernel_rem_pio2-%448-bb mem loc)))

(defund @__kernel_rem_pio2-%477-bb (mem loc)
  (b* (
    (loc (s '%478 (load-double '(fw . 0) mem) loc))
    (loc (s '%479 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%480 (load-i32 '(i . 0) mem) loc))
    (loc (s '%481 (sub-i32 (g '%479 loc) (g '%480 loc)) loc))
    (loc (s '%482 (sext-i32-to-i64 (g '%481 loc)) loc))
    (loc (s '%483 (getelementptr-double '(fq . 0) (g '%482 loc)) loc))
    (mem (store-double (g '%478 loc) (g '%483 loc) mem)))
  (mv '@__kernel_rem_pio2-%484-bb mem loc)))

(defund @__kernel_rem_pio2-%484-bb (mem loc)
  (b* (
    (loc (s '%485 (load-i32 '(i . 0) mem) loc))
    (loc (s '%486 (add-i32 (g '%485 loc) -1) loc))
    (mem (store-i32 (g '%486 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%444-bb mem loc)))

(defund @__kernel_rem_pio2-%487-bb (mem loc)
  (b* (
    (loc (s '%488 (load-i32 '(nx . 0) mem) loc)))
  (case (g '%488 loc)
    (0 (mv '@__kernel_rem_pio2-%489-bb mem loc))
    (1 (mv '@__kernel_rem_pio2-%516-bb mem loc))
    (2 (mv '@__kernel_rem_pio2-%516-bb mem loc))
    (3 (mv '@__kernel_rem_pio2-%573-bb mem loc))
    (otherwise (mv '@__kernel_rem_pio2-%691-bb mem loc)))))

(defund @__kernel_rem_pio2-%489-bb (mem loc)
  (b* (
    (mem (store-double #x0000000000000000 '(fw . 0) mem))
    (loc (s '%490 (load-i32 '(jz . 0) mem) loc))
    (mem (store-i32 (g '%490 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%491-bb mem loc)))

(defund @__kernel_rem_pio2-%491-bb (mem loc)
  (b* (
    (loc (s '%492 (load-i32 '(i . 0) mem) loc))
    (loc (s '%493 (icmp-sge-i32 (g '%492 loc) 0) loc)))
  (case (g '%493 loc)
    (-1 (mv '@__kernel_rem_pio2-%494-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%504-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%494-bb (mem loc)
  (b* (
    (loc (s '%495 (load-i32 '(i . 0) mem) loc))
    (loc (s '%496 (sext-i32-to-i64 (g '%495 loc)) loc))
    (loc (s '%497 (getelementptr-double '(fq . 0) (g '%496 loc)) loc))
    (loc (s '%498 (load-double (g '%497 loc) mem) loc))
    (loc (s '%499 (load-double '(fw . 0) mem) loc))
    (loc (s '%500 (fadd-double (g '%499 loc) (g '%498 loc)) loc))
    (mem (store-double (g '%500 loc) '(fw . 0) mem)))
  (mv '@__kernel_rem_pio2-%501-bb mem loc)))

(defund @__kernel_rem_pio2-%501-bb (mem loc)
  (b* (
    (loc (s '%502 (load-i32 '(i . 0) mem) loc))
    (loc (s '%503 (add-i32 (g '%502 loc) -1) loc))
    (mem (store-i32 (g '%503 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%491-bb mem loc)))

(defund @__kernel_rem_pio2-%504-bb (mem loc)
  (b* (
    (loc (s '%505 (load-i32 '(ih . 0) mem) loc))
    (loc (s '%506 (icmp-eq-i32 (g '%505 loc) 0) loc)))
  (case (g '%506 loc)
    (-1 (mv '@__kernel_rem_pio2-%507-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%509-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%507-bb (mem loc)
  (b* (
    (loc (s '%508 (load-double '(fw . 0) mem) loc)))
  (let* ((loc (s '%513 (g '%508 loc) loc))) (mv '@__kernel_rem_pio2-%512-bb mem loc))))

(defund @__kernel_rem_pio2-%509-bb (mem loc)
  (b* (
    (loc (s '%510 (load-double '(fw . 0) mem) loc))
    (loc (s '%511 (fsub-double #x8000000000000000 (g '%510 loc)) loc)))
  (let* ((loc (s '%513 (g '%511 loc) loc))) (mv '@__kernel_rem_pio2-%512-bb mem loc))))

(defund @__kernel_rem_pio2-%512-bb (mem loc)
  ; %513 = phi double [ (g '%508 loc), %507 ], [ (g '%511 loc), %509 ]
  (b* (
    (loc (s '%514 (load-pointer '(x . 0) mem) loc))
    (loc (s '%515 (getelementptr-double (g '%514 loc) 0) loc))
    (mem (store-double (g '%513 loc) (g '%515 loc) mem)))
  (mv '@__kernel_rem_pio2-%691-bb mem loc)))

(defund @__kernel_rem_pio2-%516-bb (mem loc)
  (b* (
    (mem (store-double #x0000000000000000 '(fw . 0) mem))
    (loc (s '%517 (load-i32 '(jz . 0) mem) loc))
    (mem (store-i32 (g '%517 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%518-bb mem loc)))

(defund @__kernel_rem_pio2-%518-bb (mem loc)
  (b* (
    (loc (s '%519 (load-i32 '(i . 0) mem) loc))
    (loc (s '%520 (icmp-sge-i32 (g '%519 loc) 0) loc)))
  (case (g '%520 loc)
    (-1 (mv '@__kernel_rem_pio2-%521-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%531-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%521-bb (mem loc)
  (b* (
    (loc (s '%522 (load-i32 '(i . 0) mem) loc))
    (loc (s '%523 (sext-i32-to-i64 (g '%522 loc)) loc))
    (loc (s '%524 (getelementptr-double '(fq . 0) (g '%523 loc)) loc))
    (loc (s '%525 (load-double (g '%524 loc) mem) loc))
    (loc (s '%526 (load-double '(fw . 0) mem) loc))
    (loc (s '%527 (fadd-double (g '%526 loc) (g '%525 loc)) loc))
    (mem (store-double (g '%527 loc) '(fw . 0) mem)))
  (mv '@__kernel_rem_pio2-%528-bb mem loc)))

(defund @__kernel_rem_pio2-%528-bb (mem loc)
  (b* (
    (loc (s '%529 (load-i32 '(i . 0) mem) loc))
    (loc (s '%530 (add-i32 (g '%529 loc) -1) loc))
    (mem (store-i32 (g '%530 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%518-bb mem loc)))

(defund @__kernel_rem_pio2-%531-bb (mem loc)
  (b* (
    (loc (s '%532 (load-i32 '(ih . 0) mem) loc))
    (loc (s '%533 (icmp-eq-i32 (g '%532 loc) 0) loc)))
  (case (g '%533 loc)
    (-1 (mv '@__kernel_rem_pio2-%534-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%536-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%534-bb (mem loc)
  (b* (
    (loc (s '%535 (load-double '(fw . 0) mem) loc)))
  (let* ((loc (s '%540 (g '%535 loc) loc))) (mv '@__kernel_rem_pio2-%539-bb mem loc))))

(defund @__kernel_rem_pio2-%536-bb (mem loc)
  (b* (
    (loc (s '%537 (load-double '(fw . 0) mem) loc))
    (loc (s '%538 (fsub-double #x8000000000000000 (g '%537 loc)) loc)))
  (let* ((loc (s '%540 (g '%538 loc) loc))) (mv '@__kernel_rem_pio2-%539-bb mem loc))))

(defund @__kernel_rem_pio2-%539-bb (mem loc)
  ; %540 = phi double [ (g '%535 loc), %534 ], [ (g '%538 loc), %536 ]
  (b* (
    (loc (s '%541 (load-pointer '(x . 0) mem) loc))
    (loc (s '%542 (getelementptr-double (g '%541 loc) 0) loc))
    (mem (store-double (g '%540 loc) (g '%542 loc) mem))
    (loc (s '%543 (getelementptr-double '(fq . 0) 0) loc))
    (loc (s '%544 (load-double (g '%543 loc) mem) loc))
    (loc (s '%545 (load-double '(fw . 0) mem) loc))
    (loc (s '%546 (fsub-double (g '%544 loc) (g '%545 loc)) loc))
    (mem (store-double (g '%546 loc) '(fw . 0) mem))
    (mem (store-i32 1 '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%547-bb mem loc)))

(defund @__kernel_rem_pio2-%547-bb (mem loc)
  (b* (
    (loc (s '%548 (load-i32 '(i . 0) mem) loc))
    (loc (s '%549 (load-i32 '(jz . 0) mem) loc))
    (loc (s '%550 (icmp-sle-i32 (g '%548 loc) (g '%549 loc)) loc)))
  (case (g '%550 loc)
    (-1 (mv '@__kernel_rem_pio2-%551-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%561-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%551-bb (mem loc)
  (b* (
    (loc (s '%552 (load-i32 '(i . 0) mem) loc))
    (loc (s '%553 (sext-i32-to-i64 (g '%552 loc)) loc))
    (loc (s '%554 (getelementptr-double '(fq . 0) (g '%553 loc)) loc))
    (loc (s '%555 (load-double (g '%554 loc) mem) loc))
    (loc (s '%556 (load-double '(fw . 0) mem) loc))
    (loc (s '%557 (fadd-double (g '%556 loc) (g '%555 loc)) loc))
    (mem (store-double (g '%557 loc) '(fw . 0) mem)))
  (mv '@__kernel_rem_pio2-%558-bb mem loc)))

(defund @__kernel_rem_pio2-%558-bb (mem loc)
  (b* (
    (loc (s '%559 (load-i32 '(i . 0) mem) loc))
    (loc (s '%560 (add-i32 (g '%559 loc) 1) loc))
    (mem (store-i32 (g '%560 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%547-bb mem loc)))

(defund @__kernel_rem_pio2-%561-bb (mem loc)
  (b* (
    (loc (s '%562 (load-i32 '(ih . 0) mem) loc))
    (loc (s '%563 (icmp-eq-i32 (g '%562 loc) 0) loc)))
  (case (g '%563 loc)
    (-1 (mv '@__kernel_rem_pio2-%564-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%566-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%564-bb (mem loc)
  (b* (
    (loc (s '%565 (load-double '(fw . 0) mem) loc)))
  (let* ((loc (s '%570 (g '%565 loc) loc))) (mv '@__kernel_rem_pio2-%569-bb mem loc))))

(defund @__kernel_rem_pio2-%566-bb (mem loc)
  (b* (
    (loc (s '%567 (load-double '(fw . 0) mem) loc))
    (loc (s '%568 (fsub-double #x8000000000000000 (g '%567 loc)) loc)))
  (let* ((loc (s '%570 (g '%568 loc) loc))) (mv '@__kernel_rem_pio2-%569-bb mem loc))))

(defund @__kernel_rem_pio2-%569-bb (mem loc)
  ; %570 = phi double [ (g '%565 loc), %564 ], [ (g '%568 loc), %566 ]
  (b* (
    (loc (s '%571 (load-pointer '(x . 0) mem) loc))
    (loc (s '%572 (getelementptr-double (g '%571 loc) 1) loc))
    (mem (store-double (g '%570 loc) (g '%572 loc) mem)))
  (mv '@__kernel_rem_pio2-%691-bb mem loc)))

(defund @__kernel_rem_pio2-%573-bb (mem loc)
  (b* (
    (loc (s '%574 (load-i32 '(jz . 0) mem) loc))
    (mem (store-i32 (g '%574 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%575-bb mem loc)))

(defund @__kernel_rem_pio2-%575-bb (mem loc)
  (b* (
    (loc (s '%576 (load-i32 '(i . 0) mem) loc))
    (loc (s '%577 (icmp-sgt-i32 (g '%576 loc) 0) loc)))
  (case (g '%577 loc)
    (-1 (mv '@__kernel_rem_pio2-%578-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%609-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%578-bb (mem loc)
  (b* (
    (loc (s '%579 (load-i32 '(i . 0) mem) loc))
    (loc (s '%580 (sub-i32 (g '%579 loc) 1) loc))
    (loc (s '%581 (sext-i32-to-i64 (g '%580 loc)) loc))
    (loc (s '%582 (getelementptr-double '(fq . 0) (g '%581 loc)) loc))
    (loc (s '%583 (load-double (g '%582 loc) mem) loc))
    (loc (s '%584 (load-i32 '(i . 0) mem) loc))
    (loc (s '%585 (sext-i32-to-i64 (g '%584 loc)) loc))
    (loc (s '%586 (getelementptr-double '(fq . 0) (g '%585 loc)) loc))
    (loc (s '%587 (load-double (g '%586 loc) mem) loc))
    (loc (s '%588 (fadd-double (g '%583 loc) (g '%587 loc)) loc))
    (mem (store-double (g '%588 loc) '(fw . 0) mem))
    (loc (s '%589 (load-i32 '(i . 0) mem) loc))
    (loc (s '%590 (sub-i32 (g '%589 loc) 1) loc))
    (loc (s '%591 (sext-i32-to-i64 (g '%590 loc)) loc))
    (loc (s '%592 (getelementptr-double '(fq . 0) (g '%591 loc)) loc))
    (loc (s '%593 (load-double (g '%592 loc) mem) loc))
    (loc (s '%594 (load-double '(fw . 0) mem) loc))
    (loc (s '%595 (fsub-double (g '%593 loc) (g '%594 loc)) loc))
    (loc (s '%596 (load-i32 '(i . 0) mem) loc))
    (loc (s '%597 (sext-i32-to-i64 (g '%596 loc)) loc))
    (loc (s '%598 (getelementptr-double '(fq . 0) (g '%597 loc)) loc))
    (loc (s '%599 (load-double (g '%598 loc) mem) loc))
    (loc (s '%600 (fadd-double (g '%599 loc) (g '%595 loc)) loc))
    (mem (store-double (g '%600 loc) (g '%598 loc) mem))
    (loc (s '%601 (load-double '(fw . 0) mem) loc))
    (loc (s '%602 (load-i32 '(i . 0) mem) loc))
    (loc (s '%603 (sub-i32 (g '%602 loc) 1) loc))
    (loc (s '%604 (sext-i32-to-i64 (g '%603 loc)) loc))
    (loc (s '%605 (getelementptr-double '(fq . 0) (g '%604 loc)) loc))
    (mem (store-double (g '%601 loc) (g '%605 loc) mem)))
  (mv '@__kernel_rem_pio2-%606-bb mem loc)))

(defund @__kernel_rem_pio2-%606-bb (mem loc)
  (b* (
    (loc (s '%607 (load-i32 '(i . 0) mem) loc))
    (loc (s '%608 (add-i32 (g '%607 loc) -1) loc))
    (mem (store-i32 (g '%608 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%575-bb mem loc)))

(defund @__kernel_rem_pio2-%609-bb (mem loc)
  (b* (
    (loc (s '%610 (load-i32 '(jz . 0) mem) loc))
    (mem (store-i32 (g '%610 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%611-bb mem loc)))

(defund @__kernel_rem_pio2-%611-bb (mem loc)
  (b* (
    (loc (s '%612 (load-i32 '(i . 0) mem) loc))
    (loc (s '%613 (icmp-sgt-i32 (g '%612 loc) 1) loc)))
  (case (g '%613 loc)
    (-1 (mv '@__kernel_rem_pio2-%614-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%645-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%614-bb (mem loc)
  (b* (
    (loc (s '%615 (load-i32 '(i . 0) mem) loc))
    (loc (s '%616 (sub-i32 (g '%615 loc) 1) loc))
    (loc (s '%617 (sext-i32-to-i64 (g '%616 loc)) loc))
    (loc (s '%618 (getelementptr-double '(fq . 0) (g '%617 loc)) loc))
    (loc (s '%619 (load-double (g '%618 loc) mem) loc))
    (loc (s '%620 (load-i32 '(i . 0) mem) loc))
    (loc (s '%621 (sext-i32-to-i64 (g '%620 loc)) loc))
    (loc (s '%622 (getelementptr-double '(fq . 0) (g '%621 loc)) loc))
    (loc (s '%623 (load-double (g '%622 loc) mem) loc))
    (loc (s '%624 (fadd-double (g '%619 loc) (g '%623 loc)) loc))
    (mem (store-double (g '%624 loc) '(fw . 0) mem))
    (loc (s '%625 (load-i32 '(i . 0) mem) loc))
    (loc (s '%626 (sub-i32 (g '%625 loc) 1) loc))
    (loc (s '%627 (sext-i32-to-i64 (g '%626 loc)) loc))
    (loc (s '%628 (getelementptr-double '(fq . 0) (g '%627 loc)) loc))
    (loc (s '%629 (load-double (g '%628 loc) mem) loc))
    (loc (s '%630 (load-double '(fw . 0) mem) loc))
    (loc (s '%631 (fsub-double (g '%629 loc) (g '%630 loc)) loc))
    (loc (s '%632 (load-i32 '(i . 0) mem) loc))
    (loc (s '%633 (sext-i32-to-i64 (g '%632 loc)) loc))
    (loc (s '%634 (getelementptr-double '(fq . 0) (g '%633 loc)) loc))
    (loc (s '%635 (load-double (g '%634 loc) mem) loc))
    (loc (s '%636 (fadd-double (g '%635 loc) (g '%631 loc)) loc))
    (mem (store-double (g '%636 loc) (g '%634 loc) mem))
    (loc (s '%637 (load-double '(fw . 0) mem) loc))
    (loc (s '%638 (load-i32 '(i . 0) mem) loc))
    (loc (s '%639 (sub-i32 (g '%638 loc) 1) loc))
    (loc (s '%640 (sext-i32-to-i64 (g '%639 loc)) loc))
    (loc (s '%641 (getelementptr-double '(fq . 0) (g '%640 loc)) loc))
    (mem (store-double (g '%637 loc) (g '%641 loc) mem)))
  (mv '@__kernel_rem_pio2-%642-bb mem loc)))

(defund @__kernel_rem_pio2-%642-bb (mem loc)
  (b* (
    (loc (s '%643 (load-i32 '(i . 0) mem) loc))
    (loc (s '%644 (add-i32 (g '%643 loc) -1) loc))
    (mem (store-i32 (g '%644 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%611-bb mem loc)))

(defund @__kernel_rem_pio2-%645-bb (mem loc)
  (b* (
    (mem (store-double #x0000000000000000 '(fw . 0) mem))
    (loc (s '%646 (load-i32 '(jz . 0) mem) loc))
    (mem (store-i32 (g '%646 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%647-bb mem loc)))

(defund @__kernel_rem_pio2-%647-bb (mem loc)
  (b* (
    (loc (s '%648 (load-i32 '(i . 0) mem) loc))
    (loc (s '%649 (icmp-sge-i32 (g '%648 loc) 2) loc)))
  (case (g '%649 loc)
    (-1 (mv '@__kernel_rem_pio2-%650-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%660-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%650-bb (mem loc)
  (b* (
    (loc (s '%651 (load-i32 '(i . 0) mem) loc))
    (loc (s '%652 (sext-i32-to-i64 (g '%651 loc)) loc))
    (loc (s '%653 (getelementptr-double '(fq . 0) (g '%652 loc)) loc))
    (loc (s '%654 (load-double (g '%653 loc) mem) loc))
    (loc (s '%655 (load-double '(fw . 0) mem) loc))
    (loc (s '%656 (fadd-double (g '%655 loc) (g '%654 loc)) loc))
    (mem (store-double (g '%656 loc) '(fw . 0) mem)))
  (mv '@__kernel_rem_pio2-%657-bb mem loc)))

(defund @__kernel_rem_pio2-%657-bb (mem loc)
  (b* (
    (loc (s '%658 (load-i32 '(i . 0) mem) loc))
    (loc (s '%659 (add-i32 (g '%658 loc) -1) loc))
    (mem (store-i32 (g '%659 loc) '(i . 0) mem)))
  (mv '@__kernel_rem_pio2-%647-bb mem loc)))

(defund @__kernel_rem_pio2-%660-bb (mem loc)
  (b* (
    (loc (s '%661 (load-i32 '(ih . 0) mem) loc))
    (loc (s '%662 (icmp-eq-i32 (g '%661 loc) 0) loc)))
  (case (g '%662 loc)
    (-1 (mv '@__kernel_rem_pio2-%663-bb mem loc))
    ( 0 (mv '@__kernel_rem_pio2-%675-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__kernel_rem_pio2-%663-bb (mem loc)
  (b* (
    (loc (s '%664 (getelementptr-double '(fq . 0) 0) loc))
    (loc (s '%665 (load-double (g '%664 loc) mem) loc))
    (loc (s '%666 (load-pointer '(x . 0) mem) loc))
    (loc (s '%667 (getelementptr-double (g '%666 loc) 0) loc))
    (mem (store-double (g '%665 loc) (g '%667 loc) mem))
    (loc (s '%668 (getelementptr-double '(fq . 0) 1) loc))
    (loc (s '%669 (load-double (g '%668 loc) mem) loc))
    (loc (s '%670 (load-pointer '(x . 0) mem) loc))
    (loc (s '%671 (getelementptr-double (g '%670 loc) 1) loc))
    (mem (store-double (g '%669 loc) (g '%671 loc) mem))
    (loc (s '%672 (load-double '(fw . 0) mem) loc))
    (loc (s '%673 (load-pointer '(x . 0) mem) loc))
    (loc (s '%674 (getelementptr-double (g '%673 loc) 2) loc))
    (mem (store-double (g '%672 loc) (g '%674 loc) mem)))
  (mv '@__kernel_rem_pio2-%690-bb mem loc)))

(defund @__kernel_rem_pio2-%675-bb (mem loc)
  (b* (
    (loc (s '%676 (getelementptr-double '(fq . 0) 0) loc))
    (loc (s '%677 (load-double (g '%676 loc) mem) loc))
    (loc (s '%678 (fsub-double #x8000000000000000 (g '%677 loc)) loc))
    (loc (s '%679 (load-pointer '(x . 0) mem) loc))
    (loc (s '%680 (getelementptr-double (g '%679 loc) 0) loc))
    (mem (store-double (g '%678 loc) (g '%680 loc) mem))
    (loc (s '%681 (getelementptr-double '(fq . 0) 1) loc))
    (loc (s '%682 (load-double (g '%681 loc) mem) loc))
    (loc (s '%683 (fsub-double #x8000000000000000 (g '%682 loc)) loc))
    (loc (s '%684 (load-pointer '(x . 0) mem) loc))
    (loc (s '%685 (getelementptr-double (g '%684 loc) 1) loc))
    (mem (store-double (g '%683 loc) (g '%685 loc) mem))
    (loc (s '%686 (load-double '(fw . 0) mem) loc))
    (loc (s '%687 (fsub-double #x8000000000000000 (g '%686 loc)) loc))
    (loc (s '%688 (load-pointer '(x . 0) mem) loc))
    (loc (s '%689 (getelementptr-double (g '%688 loc) 2) loc))
    (mem (store-double (g '%687 loc) (g '%689 loc) mem)))
  (mv '@__kernel_rem_pio2-%690-bb mem loc)))

(defund @__kernel_rem_pio2-%690-bb (mem loc)
  (b* ()
  (mv '@__kernel_rem_pio2-%691-bb mem loc)))

(defund @__kernel_rem_pio2-%691-bb (mem loc)
  (b* (
    (loc (s '%692 (load-i32 '(n . 0) mem) loc))
    (loc (s '%693 (and-i32 (g '%692 loc) 7) loc)))
  (mv 'ret mem loc)))

(defund @__kernel_rem_pio2-step (label mem loc)
  (case label
    (%-0 (@__kernel_rem_pio2-%0-bb mem loc))
    (%-19 (@__kernel_rem_pio2-%19-bb mem loc))
    (%-20 (@__kernel_rem_pio2-%20-bb mem loc))
    (%-32 (@__kernel_rem_pio2-%32-bb mem loc))
    (%-36 (@__kernel_rem_pio2-%36-bb mem loc))
    (%-39 (@__kernel_rem_pio2-%39-bb mem loc))
    (%-40 (@__kernel_rem_pio2-%40-bb mem loc))
    (%-47 (@__kernel_rem_pio2-%47-bb mem loc))
    (%-52 (@__kernel_rem_pio2-%52-bb mem loc))
    (%-57 (@__kernel_rem_pio2-%57-bb mem loc))
    (%-58 (@__kernel_rem_pio2-%58-bb mem loc))
    (%-62 (@__kernel_rem_pio2-%62-bb mem loc))
    (%-63 (@__kernel_rem_pio2-%63-bb mem loc))
    (%-67 (@__kernel_rem_pio2-%67-bb mem loc))
    (%-84 (@__kernel_rem_pio2-%84-bb mem loc))
    (%-87 (@__kernel_rem_pio2-%87-bb mem loc))
    (%-92 (@__kernel_rem_pio2-%92-bb mem loc))
    (%-95 (@__kernel_rem_pio2-%95-bb mem loc))
    (%-97 (@__kernel_rem_pio2-%97-bb mem loc))
    (%-103 (@__kernel_rem_pio2-%103-bb mem loc))
    (%-106 (@__kernel_rem_pio2-%106-bb mem loc))
    (%-126 (@__kernel_rem_pio2-%126-bb mem loc))
    (%-131 (@__kernel_rem_pio2-%131-bb mem loc))
    (%-149 (@__kernel_rem_pio2-%149-bb mem loc))
    (%-179 (@__kernel_rem_pio2-%179-bb mem loc))
    (%-182 (@__kernel_rem_pio2-%182-bb mem loc))
    (%-189 (@__kernel_rem_pio2-%189-bb mem loc))
    (%-192 (@__kernel_rem_pio2-%192-bb mem loc))
    (%-193 (@__kernel_rem_pio2-%193-bb mem loc))
    (%-194 (@__kernel_rem_pio2-%194-bb mem loc))
    (%-195 (@__kernel_rem_pio2-%195-bb mem loc))
    (%-198 (@__kernel_rem_pio2-%198-bb mem loc))
    (%-201 (@__kernel_rem_pio2-%201-bb mem loc))
    (%-205 (@__kernel_rem_pio2-%205-bb mem loc))
    (%-212 (@__kernel_rem_pio2-%212-bb mem loc))
    (%-215 (@__kernel_rem_pio2-%215-bb mem loc))
    (%-221 (@__kernel_rem_pio2-%221-bb mem loc))
    (%-222 (@__kernel_rem_pio2-%222-bb mem loc))
    (%-228 (@__kernel_rem_pio2-%228-bb mem loc))
    (%-229 (@__kernel_rem_pio2-%229-bb mem loc))
    (%-232 (@__kernel_rem_pio2-%232-bb mem loc))
    (%-235 (@__kernel_rem_pio2-%235-bb mem loc))
    (%-237 (@__kernel_rem_pio2-%237-bb mem loc))
    (%-244 (@__kernel_rem_pio2-%244-bb mem loc))
    (%-251 (@__kernel_rem_pio2-%251-bb mem loc))
    (%-252 (@__kernel_rem_pio2-%252-bb mem loc))
    (%-255 (@__kernel_rem_pio2-%255-bb mem loc))
    (%-260 (@__kernel_rem_pio2-%260-bb mem loc))
    (%-265 (@__kernel_rem_pio2-%265-bb mem loc))
    (%-266 (@__kernel_rem_pio2-%266-bb mem loc))
    (%-267 (@__kernel_rem_pio2-%267-bb mem loc))
    (%-270 (@__kernel_rem_pio2-%270-bb mem loc))
    (%-273 (@__kernel_rem_pio2-%273-bb mem loc))
    (%-277 (@__kernel_rem_pio2-%277-bb mem loc))
    (%-284 (@__kernel_rem_pio2-%284-bb mem loc))
    (%-287 (@__kernel_rem_pio2-%287-bb mem loc))
    (%-290 (@__kernel_rem_pio2-%290-bb mem loc))
    (%-291 (@__kernel_rem_pio2-%291-bb mem loc))
    (%-299 (@__kernel_rem_pio2-%299-bb mem loc))
    (%-300 (@__kernel_rem_pio2-%300-bb mem loc))
    (%-303 (@__kernel_rem_pio2-%303-bb mem loc))
    (%-306 (@__kernel_rem_pio2-%306-bb mem loc))
    (%-312 (@__kernel_rem_pio2-%312-bb mem loc))
    (%-326 (@__kernel_rem_pio2-%326-bb mem loc))
    (%-330 (@__kernel_rem_pio2-%330-bb mem loc))
    (%-347 (@__kernel_rem_pio2-%347-bb mem loc))
    (%-350 (@__kernel_rem_pio2-%350-bb mem loc))
    (%-355 (@__kernel_rem_pio2-%355-bb mem loc))
    (%-358 (@__kernel_rem_pio2-%358-bb mem loc))
    (%-362 (@__kernel_rem_pio2-%362-bb mem loc))
    (%-363 (@__kernel_rem_pio2-%363-bb mem loc))
    (%-366 (@__kernel_rem_pio2-%366-bb mem loc))
    (%-371 (@__kernel_rem_pio2-%371-bb mem loc))
    (%-377 (@__kernel_rem_pio2-%377-bb mem loc))
    (%-382 (@__kernel_rem_pio2-%382-bb mem loc))
    (%-383 (@__kernel_rem_pio2-%383-bb mem loc))
    (%-390 (@__kernel_rem_pio2-%390-bb mem loc))
    (%-412 (@__kernel_rem_pio2-%412-bb mem loc))
    (%-418 (@__kernel_rem_pio2-%418-bb mem loc))
    (%-419 (@__kernel_rem_pio2-%419-bb mem loc))
    (%-423 (@__kernel_rem_pio2-%423-bb mem loc))
    (%-426 (@__kernel_rem_pio2-%426-bb mem loc))
    (%-439 (@__kernel_rem_pio2-%439-bb mem loc))
    (%-442 (@__kernel_rem_pio2-%442-bb mem loc))
    (%-444 (@__kernel_rem_pio2-%444-bb mem loc))
    (%-447 (@__kernel_rem_pio2-%447-bb mem loc))
    (%-448 (@__kernel_rem_pio2-%448-bb mem loc))
    (%-452 (@__kernel_rem_pio2-%452-bb mem loc))
    (%-458 (@__kernel_rem_pio2-%458-bb mem loc))
    (%-460 (@__kernel_rem_pio2-%460-bb mem loc))
    (%-474 (@__kernel_rem_pio2-%474-bb mem loc))
    (%-477 (@__kernel_rem_pio2-%477-bb mem loc))
    (%-484 (@__kernel_rem_pio2-%484-bb mem loc))
    (%-487 (@__kernel_rem_pio2-%487-bb mem loc))
    (%-489 (@__kernel_rem_pio2-%489-bb mem loc))
    (%-491 (@__kernel_rem_pio2-%491-bb mem loc))
    (%-494 (@__kernel_rem_pio2-%494-bb mem loc))
    (%-501 (@__kernel_rem_pio2-%501-bb mem loc))
    (%-504 (@__kernel_rem_pio2-%504-bb mem loc))
    (%-507 (@__kernel_rem_pio2-%507-bb mem loc))
    (%-509 (@__kernel_rem_pio2-%509-bb mem loc))
    (%-512 (@__kernel_rem_pio2-%512-bb mem loc))
    (%-516 (@__kernel_rem_pio2-%516-bb mem loc))
    (%-518 (@__kernel_rem_pio2-%518-bb mem loc))
    (%-521 (@__kernel_rem_pio2-%521-bb mem loc))
    (%-528 (@__kernel_rem_pio2-%528-bb mem loc))
    (%-531 (@__kernel_rem_pio2-%531-bb mem loc))
    (%-534 (@__kernel_rem_pio2-%534-bb mem loc))
    (%-536 (@__kernel_rem_pio2-%536-bb mem loc))
    (%-539 (@__kernel_rem_pio2-%539-bb mem loc))
    (%-547 (@__kernel_rem_pio2-%547-bb mem loc))
    (%-551 (@__kernel_rem_pio2-%551-bb mem loc))
    (%-558 (@__kernel_rem_pio2-%558-bb mem loc))
    (%-561 (@__kernel_rem_pio2-%561-bb mem loc))
    (%-564 (@__kernel_rem_pio2-%564-bb mem loc))
    (%-566 (@__kernel_rem_pio2-%566-bb mem loc))
    (%-569 (@__kernel_rem_pio2-%569-bb mem loc))
    (%-573 (@__kernel_rem_pio2-%573-bb mem loc))
    (%-575 (@__kernel_rem_pio2-%575-bb mem loc))
    (%-578 (@__kernel_rem_pio2-%578-bb mem loc))
    (%-606 (@__kernel_rem_pio2-%606-bb mem loc))
    (%-609 (@__kernel_rem_pio2-%609-bb mem loc))
    (%-611 (@__kernel_rem_pio2-%611-bb mem loc))
    (%-614 (@__kernel_rem_pio2-%614-bb mem loc))
    (%-642 (@__kernel_rem_pio2-%642-bb mem loc))
    (%-645 (@__kernel_rem_pio2-%645-bb mem loc))
    (%-647 (@__kernel_rem_pio2-%647-bb mem loc))
    (%-650 (@__kernel_rem_pio2-%650-bb mem loc))
    (%-657 (@__kernel_rem_pio2-%657-bb mem loc))
    (%-660 (@__kernel_rem_pio2-%660-bb mem loc))
    (%-663 (@__kernel_rem_pio2-%663-bb mem loc))
    (%-675 (@__kernel_rem_pio2-%675-bb mem loc))
    (%-690 (@__kernel_rem_pio2-%690-bb mem loc))
    (%-691 (@__kernel_rem_pio2-%691-bb mem loc))
    (otherwise (mv nil mem loc))))

(defund @__kernel_rem_pio2-steps (label mem loc n)
  (declare (xargs :measure (nfix n)))
  (if (equal label 'ret)
      (g '%693 loc)
    (if (zp n) nil
      (mv-let
        (label mem loc)
        (@__kernel_rem_pio2-step label mem loc)
        (@__kernel_rem_pio2-steps label mem loc (1- n))))))

(defund @__kernel_rem_pio2 (%x %y %e0 %nx %prec %ipio2)
  (declare (ignore %x %y %e0 %nx %prec %ipio2))
   nil)
