(in-package "ACL2")
(include-book "std/util/defrule" :dir :system)
(include-book "../llvm")
(include-book "s_copysign")

(defconst *scalbn-globals* '())

(defconst *scalbn-labels* '(%0 %14 %20 %22 %34 %37 %38 %41 %45 %51 %55 %58 %67 %70 %73 %77 %81 %93))

(defund @scalbn-%0-mem (s0)
  (car s0))
(defund @scalbn-%0-loc (s0)
  (cadr s0))
(defund @scalbn-%0-pred (s0)
  (caddr s0))
(defund @scalbn-%1-mem (s0)
  (alloca-double 'ret 1 (@scalbn-%0-mem s0)))
(defund @scalbn-%1-loc (s0)
  (s '%1 '(ret . 0) (@scalbn-%0-loc s0)))
(defund @scalbn-%2-mem (s0)
  (alloca-double 'x 1 (@scalbn-%1-mem s0)))
(defund @scalbn-%2-loc (s0)
  (s '%2 '(x . 0) (@scalbn-%1-loc s0)))
(defund @scalbn-%3-mem (s0)
  (alloca-i32 'n 1 (@scalbn-%2-mem s0)))
(defund @scalbn-%3-loc (s0)
  (s '%3 '(n . 0) (@scalbn-%2-loc s0)))
(defund @scalbn-%k-mem (s0)
  (alloca-i32 'k 1 (@scalbn-%3-mem s0)))
(defund @scalbn-%k-loc (s0)
  (s '%k '(k . 0) (@scalbn-%3-loc s0)))
(defund @scalbn-%hx-mem (s0)
  (alloca-i32 'hx 1 (@scalbn-%k-mem s0)))
(defund @scalbn-%hx-loc (s0)
  (s '%hx '(hx . 0) (@scalbn-%k-loc s0)))
(defund @scalbn-%lx-mem (s0)
  (alloca-i32 'lx 1 (@scalbn-%hx-mem s0)))
(defund @scalbn-%lx-loc (s0)
  (s '%lx '(lx . 0) (@scalbn-%hx-loc s0)))
(defund @scalbn-m0.1-mem (s0)
  (store-double (g '%x (@scalbn-%lx-loc s0)) (g '%2 (@scalbn-%lx-loc s0)) (@scalbn-%lx-mem s0)))
(defund @scalbn-m0.2-mem (s0)
  (store-i32 (g '%n (@scalbn-%lx-loc s0)) (g '%3 (@scalbn-%lx-loc s0)) (@scalbn-m0.1-mem s0)))
(defund @scalbn-%4-val (s0)
  (bitcast-double*-to-i32* (g '%2 (@scalbn-%lx-loc s0))))
(defund @scalbn-%4-loc (s0)
  (s '%4 (@scalbn-%4-val s0) (@scalbn-%lx-loc s0)))
(defund @scalbn-%5-val (s0)
  (getelementptr-i32 (g '%4 (@scalbn-%4-loc s0)) 1))
(defund @scalbn-%5-loc (s0)
  (s '%5 (@scalbn-%5-val s0) (@scalbn-%4-loc s0)))
(defund @scalbn-%6-val (s0)
  (load-i32 (g '%5 (@scalbn-%5-loc s0)) (@scalbn-m0.2-mem s0)))
(defund @scalbn-%6-loc (s0)
  (s '%6 (@scalbn-%6-val s0) (@scalbn-%5-loc s0)))
(defund @scalbn-m0.3-mem (s0)
  (store-i32 (g '%6 (@scalbn-%6-loc s0)) (g '%hx (@scalbn-%6-loc s0)) (@scalbn-m0.2-mem s0)))
(defund @scalbn-%7-val (s0)
  (bitcast-double*-to-i32* (g '%2 (@scalbn-%6-loc s0))))
(defund @scalbn-%7-loc (s0)
  (s '%7 (@scalbn-%7-val s0) (@scalbn-%6-loc s0)))
(defund @scalbn-%8-val (s0)
  (load-i32 (g '%7 (@scalbn-%7-loc s0)) (@scalbn-m0.3-mem s0)))
(defund @scalbn-%8-loc (s0)
  (s '%8 (@scalbn-%8-val s0) (@scalbn-%7-loc s0)))
(defund @scalbn-m0.4-mem (s0)
  (store-i32 (g '%8 (@scalbn-%8-loc s0)) (g '%lx (@scalbn-%8-loc s0)) (@scalbn-m0.3-mem s0)))
(defund @scalbn-%9-val (s0)
  (load-i32 (g '%hx (@scalbn-%8-loc s0)) (@scalbn-m0.4-mem s0)))
(defund @scalbn-%9-loc (s0)
  (s '%9 (@scalbn-%9-val s0) (@scalbn-%8-loc s0)))
(defund @scalbn-%10-val (s0)
  (and-i32 (g '%9 (@scalbn-%9-loc s0)) 2146435072))
(defund @scalbn-%10-loc (s0)
  (s '%10 (@scalbn-%10-val s0) (@scalbn-%9-loc s0)))
(defund @scalbn-%11-val (s0)
  (ashr-i32 (g '%10 (@scalbn-%10-loc s0)) 20))
(defund @scalbn-%11-loc (s0)
  (s '%11 (@scalbn-%11-val s0) (@scalbn-%10-loc s0)))
(defund @scalbn-m0.5-mem (s0)
  (store-i32 (g '%11 (@scalbn-%11-loc s0)) (g '%k (@scalbn-%11-loc s0)) (@scalbn-m0.4-mem s0)))
(defund @scalbn-%12-val (s0)
  (load-i32 (g '%k (@scalbn-%11-loc s0)) (@scalbn-m0.5-mem s0)))
(defund @scalbn-%12-loc (s0)
  (s '%12 (@scalbn-%12-val s0) (@scalbn-%11-loc s0)))
(defund @scalbn-%13-val (s0)
  (icmp-eq-i32 (g '%12 (@scalbn-%12-loc s0)) 0))
(defund @scalbn-%13-loc (s0)
  (s '%13 (@scalbn-%13-val s0) (@scalbn-%12-loc s0)))
(defund @scalbn-succ0-lab (s0)
  (case (g '%13 (@scalbn-%13-loc s0)) (-1 '%14) (0 '%38)))

(defund @scalbn-succ0-rev (mem loc pred)
  (declare (ignore pred))
  (mv (case (g '%13 loc) (-1 '%14) (0 '%38)) mem loc))
(defund @scalbn-%13-rev (mem loc pred)
  (@scalbn-succ0-rev mem (s '%13 (icmp-eq-i32 (g '%12 loc) 0) loc) pred))
(defund @scalbn-%12-rev (mem loc pred)
  (@scalbn-%13-rev mem (s '%12 (load-i32 (g '%k loc) mem) loc) pred))
(defund @scalbn-m0.5-rev (mem loc pred)
  (@scalbn-%12-rev (store-i32 (g '%11 loc) (g '%k loc) mem) loc pred))
(defund @scalbn-%11-rev (mem loc pred)
  (@scalbn-m0.5-rev mem (s '%11 (ashr-i32 (g '%10 loc) 20) loc) pred))
(defund @scalbn-%10-rev (mem loc pred)
  (@scalbn-%11-rev mem (s '%10 (and-i32 (g '%9 loc) 2146435072) loc) pred))
(defund @scalbn-%9-rev (mem loc pred)
  (@scalbn-%10-rev mem (s '%9 (load-i32 (g '%hx loc) mem) loc) pred))
(defund @scalbn-m0.4-rev (mem loc pred)
  (@scalbn-%9-rev (store-i32 (g '%8 loc) (g '%lx loc) mem) loc pred))
(defund @scalbn-%8-rev (mem loc pred)
  (@scalbn-m0.4-rev mem (s '%8 (load-i32 (g '%7 loc) mem) loc) pred))
(defund @scalbn-%7-rev (mem loc pred)
  (@scalbn-%8-rev mem (s '%7 (bitcast-double*-to-i32* (g '%2 loc)) loc) pred))
(defund @scalbn-m0.3-rev (mem loc pred)
  (@scalbn-%7-rev (store-i32 (g '%6 loc) (g '%hx loc) mem) loc pred))
(defund @scalbn-%6-rev (mem loc pred)
  (@scalbn-m0.3-rev mem (s '%6 (load-i32 (g '%5 loc) mem) loc) pred))
(defund @scalbn-%5-rev (mem loc pred)
  (@scalbn-%6-rev mem (s '%5 (getelementptr-i32 (g '%4 loc) 1) loc) pred))
(defund @scalbn-%4-rev (mem loc pred)
  (@scalbn-%5-rev mem (s '%4 (bitcast-double*-to-i32* (g '%2 loc)) loc) pred))
(defund @scalbn-m0.2-rev (mem loc pred)
  (@scalbn-%4-rev (store-i32 (g '%n loc) (g '%3 loc) mem) loc pred))
(defund @scalbn-m0.1-rev (mem loc pred)
  (@scalbn-m0.2-rev (store-double (g '%x loc) (g '%2 loc) mem) loc pred))
(defund @scalbn-%lx-rev (mem loc pred)
  (@scalbn-m0.1-rev (alloca-i32 'lx 1 mem) (s '%lx '(lx . 0) loc) pred))
(defund @scalbn-%hx-rev (mem loc pred)
  (@scalbn-%lx-rev (alloca-i32 'hx 1 mem) (s '%hx '(hx . 0) loc) pred))
(defund @scalbn-%k-rev (mem loc pred)
  (@scalbn-%hx-rev (alloca-i32 'k 1 mem) (s '%k '(k . 0) loc) pred))
(defund @scalbn-%3-rev (mem loc pred)
  (@scalbn-%k-rev (alloca-i32 'n 1 mem) (s '%3 '(n . 0) loc) pred))
(defund @scalbn-%2-rev (mem loc pred)
  (@scalbn-%3-rev (alloca-double 'x 1 mem) (s '%2 '(x . 0) loc) pred))
(defund @scalbn-%1-rev (mem loc pred)
  (@scalbn-%2-rev (alloca-double 'ret 1 mem) (s '%1 '(ret . 0) loc) pred))

(defund @scalbn-%0-rev (mem loc pred)
  (@scalbn-%1-rev mem loc pred))

(defund @scalbn-%0-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (mem (alloca-double 'ret 1 mem))
    (loc (s '%1 '(ret . 0) loc))
    (mem (alloca-double 'x 1 mem))
    (loc (s '%2 '(x . 0) loc))
    (mem (alloca-i32 'n 1 mem))
    (loc (s '%3 '(n . 0) loc))
    (mem (alloca-i32 'k 1 mem))
    (loc (s '%k '(k . 0) loc))
    (mem (alloca-i32 'hx 1 mem))
    (loc (s '%hx '(hx . 0) loc))
    (mem (alloca-i32 'lx 1 mem))
    (loc (s '%lx '(lx . 0) loc))
    (mem (store-double (g '%x loc) (g '%2 loc) mem))
    (mem (store-i32 (g '%n loc) (g '%3 loc) mem))
    (loc (s '%4 (bitcast-double*-to-i32* (g '%2 loc)) loc))
    (loc (s '%5 (getelementptr-i32 (g '%4 loc) 1) loc))
    (loc (s '%6 (load-i32 (g '%5 loc) mem) loc))
    (mem (store-i32 (g '%6 loc) (g '%hx loc) mem))
    (loc (s '%7 (bitcast-double*-to-i32* (g '%2 loc)) loc))
    (loc (s '%8 (load-i32 (g '%7 loc) mem) loc))
    (mem (store-i32 (g '%8 loc) (g '%lx loc) mem))
    (loc (s '%9 (load-i32 (g '%hx loc) mem) loc))
    (loc (s '%10 (and-i32 (g '%9 loc) 2146435072) loc))
    (loc (s '%11 (ashr-i32 (g '%10 loc) 20) loc))
    (mem (store-i32 (g '%11 loc) (g '%k loc) mem))
    (loc (s '%12 (load-i32 (g '%k loc) mem) loc))
    (loc (s '%13 (icmp-eq-i32 (g '%12 loc) 0) loc))
    (succ (case (g '%13 loc) (-1 '%14) (0 '%38))))
  (mv succ mem loc)))

(defruled @scalbn-%0-expand-bb
  (equal (@scalbn-%0-bb mem loc pred)
         (@scalbn-%0-rev mem loc pred))
  :enable (@scalbn-%0-bb @scalbn-%0-rev
    @scalbn-%1-rev
    @scalbn-%2-rev
    @scalbn-%3-rev
    @scalbn-%k-rev
    @scalbn-%hx-rev
    @scalbn-%lx-rev
    @scalbn-m0.1-rev
    @scalbn-m0.2-rev
    @scalbn-%4-rev
    @scalbn-%5-rev
    @scalbn-%6-rev
    @scalbn-m0.3-rev
    @scalbn-%7-rev
    @scalbn-%8-rev
    @scalbn-m0.4-rev
    @scalbn-%9-rev
    @scalbn-%10-rev
    @scalbn-%11-rev
    @scalbn-m0.5-rev
    @scalbn-%12-rev
    @scalbn-%13-rev
    @scalbn-succ0-rev)
  :disable s-diff-s)

(defund @scalbn-%14-mem (s14)
  (car s14))
(defund @scalbn-%14-loc (s14)
  (cadr s14))
(defund @scalbn-%14-pred (s14)
  (caddr s14))
(defund @scalbn-%15-val (s14)
  (load-i32 (g '%lx (@scalbn-%14-loc s14)) (@scalbn-%14-mem s14)))
(defund @scalbn-%15-loc (s14)
  (s '%15 (@scalbn-%15-val s14) (@scalbn-%14-loc s14)))
(defund @scalbn-%16-val (s14)
  (load-i32 (g '%hx (@scalbn-%15-loc s14)) (@scalbn-%14-mem s14)))
(defund @scalbn-%16-loc (s14)
  (s '%16 (@scalbn-%16-val s14) (@scalbn-%15-loc s14)))
(defund @scalbn-%17-val (s14)
  (and-i32 (g '%16 (@scalbn-%16-loc s14)) 2147483647))
(defund @scalbn-%17-loc (s14)
  (s '%17 (@scalbn-%17-val s14) (@scalbn-%16-loc s14)))
(defund @scalbn-%18-val (s14)
  (or-i32 (g '%15 (@scalbn-%17-loc s14)) (g '%17 (@scalbn-%17-loc s14))))
(defund @scalbn-%18-loc (s14)
  (s '%18 (@scalbn-%18-val s14) (@scalbn-%17-loc s14)))
(defund @scalbn-%19-val (s14)
  (icmp-eq-i32 (g '%18 (@scalbn-%18-loc s14)) 0))
(defund @scalbn-%19-loc (s14)
  (s '%19 (@scalbn-%19-val s14) (@scalbn-%18-loc s14)))
(defund @scalbn-succ14-lab (s14)
  (case (g '%19 (@scalbn-%19-loc s14)) (-1 '%20) (0 '%22)))

(defund @scalbn-succ14-rev (mem loc pred)
  (declare (ignore pred))
  (mv (case (g '%19 loc) (-1 '%20) (0 '%22)) mem loc))
(defund @scalbn-%19-rev (mem loc pred)
  (@scalbn-succ14-rev mem (s '%19 (icmp-eq-i32 (g '%18 loc) 0) loc) pred))
(defund @scalbn-%18-rev (mem loc pred)
  (@scalbn-%19-rev mem (s '%18 (or-i32 (g '%15 loc) (g '%17 loc)) loc) pred))
(defund @scalbn-%17-rev (mem loc pred)
  (@scalbn-%18-rev mem (s '%17 (and-i32 (g '%16 loc) 2147483647) loc) pred))
(defund @scalbn-%16-rev (mem loc pred)
  (@scalbn-%17-rev mem (s '%16 (load-i32 (g '%hx loc) mem) loc) pred))
(defund @scalbn-%15-rev (mem loc pred)
  (@scalbn-%16-rev mem (s '%15 (load-i32 (g '%lx loc) mem) loc) pred))

(defund @scalbn-%14-rev (mem loc pred)
  (@scalbn-%15-rev mem loc pred))

(defund @scalbn-%14-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%15 (load-i32 (g '%lx loc) mem) loc))
    (loc (s '%16 (load-i32 (g '%hx loc) mem) loc))
    (loc (s '%17 (and-i32 (g '%16 loc) 2147483647) loc))
    (loc (s '%18 (or-i32 (g '%15 loc) (g '%17 loc)) loc))
    (loc (s '%19 (icmp-eq-i32 (g '%18 loc) 0) loc))
    (succ (case (g '%19 loc) (-1 '%20) (0 '%22))))
  (mv succ mem loc)))

(defruled @scalbn-%14-expand-bb
  (equal (@scalbn-%14-bb mem loc pred)
         (@scalbn-%14-rev mem loc pred))
  :enable (@scalbn-%14-bb @scalbn-%14-rev
    @scalbn-%15-rev
    @scalbn-%16-rev
    @scalbn-%17-rev
    @scalbn-%18-rev
    @scalbn-%19-rev
    @scalbn-succ14-rev)
  :disable s-diff-s)

(defund @scalbn-%20-mem (s20)
  (car s20))
(defund @scalbn-%20-loc (s20)
  (cadr s20))
(defund @scalbn-%20-pred (s20)
  (caddr s20))
(defund @scalbn-%21-val (s20)
  (load-double (g '%2 (@scalbn-%20-loc s20)) (@scalbn-%20-mem s20)))
(defund @scalbn-%21-loc (s20)
  (s '%21 (@scalbn-%21-val s20) (@scalbn-%20-loc s20)))
(defund @scalbn-m20.1-mem (s20)
  (store-double (g '%21 (@scalbn-%21-loc s20)) (g '%1 (@scalbn-%21-loc s20)) (@scalbn-%20-mem s20)))
(defund @scalbn-succ20-lab (s20)
  (declare (ignore s20))
  '%93)

(defund @scalbn-succ20-rev (mem loc pred)
  (declare (ignore pred))
  (mv '%93 mem loc))
(defund @scalbn-m20.1-rev (mem loc pred)
  (@scalbn-succ20-rev (store-double (g '%21 loc) (g '%1 loc) mem) loc pred))
(defund @scalbn-%21-rev (mem loc pred)
  (@scalbn-m20.1-rev mem (s '%21 (load-double (g '%2 loc) mem) loc) pred))

(defund @scalbn-%20-rev (mem loc pred)
  (@scalbn-%21-rev mem loc pred))

(defund @scalbn-%20-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%21 (load-double (g '%2 loc) mem) loc))
    (mem (store-double (g '%21 loc) (g '%1 loc) mem))
    (succ '%93))
  (mv succ mem loc)))

(defruled @scalbn-%20-expand-bb
  (equal (@scalbn-%20-bb mem loc pred)
         (@scalbn-%20-rev mem loc pred))
  :enable (@scalbn-%20-bb @scalbn-%20-rev
    @scalbn-%21-rev
    @scalbn-m20.1-rev
    @scalbn-succ20-rev)
  :disable s-diff-s)

(defund @scalbn-%22-mem (s22)
  (car s22))
(defund @scalbn-%22-loc (s22)
  (cadr s22))
(defund @scalbn-%22-pred (s22)
  (caddr s22))
(defund @scalbn-%23-val (s22)
  (load-double (g '%2 (@scalbn-%22-loc s22)) (@scalbn-%22-mem s22)))
(defund @scalbn-%23-loc (s22)
  (s '%23 (@scalbn-%23-val s22) (@scalbn-%22-loc s22)))
(defund @scalbn-%24-val (s22)
  (fmul-double (g '%23 (@scalbn-%23-loc s22)) #x4350000000000000))
(defund @scalbn-%24-loc (s22)
  (s '%24 (@scalbn-%24-val s22) (@scalbn-%23-loc s22)))
(defund @scalbn-m22.1-mem (s22)
  (store-double (g '%24 (@scalbn-%24-loc s22)) (g '%2 (@scalbn-%24-loc s22)) (@scalbn-%22-mem s22)))
(defund @scalbn-%25-val (s22)
  (bitcast-double*-to-i32* (g '%2 (@scalbn-%24-loc s22))))
(defund @scalbn-%25-loc (s22)
  (s '%25 (@scalbn-%25-val s22) (@scalbn-%24-loc s22)))
(defund @scalbn-%26-val (s22)
  (getelementptr-i32 (g '%25 (@scalbn-%25-loc s22)) 1))
(defund @scalbn-%26-loc (s22)
  (s '%26 (@scalbn-%26-val s22) (@scalbn-%25-loc s22)))
(defund @scalbn-%27-val (s22)
  (load-i32 (g '%26 (@scalbn-%26-loc s22)) (@scalbn-m22.1-mem s22)))
(defund @scalbn-%27-loc (s22)
  (s '%27 (@scalbn-%27-val s22) (@scalbn-%26-loc s22)))
(defund @scalbn-m22.2-mem (s22)
  (store-i32 (g '%27 (@scalbn-%27-loc s22)) (g '%hx (@scalbn-%27-loc s22)) (@scalbn-m22.1-mem s22)))
(defund @scalbn-%28-val (s22)
  (load-i32 (g '%hx (@scalbn-%27-loc s22)) (@scalbn-m22.2-mem s22)))
(defund @scalbn-%28-loc (s22)
  (s '%28 (@scalbn-%28-val s22) (@scalbn-%27-loc s22)))
(defund @scalbn-%29-val (s22)
  (and-i32 (g '%28 (@scalbn-%28-loc s22)) 2146435072))
(defund @scalbn-%29-loc (s22)
  (s '%29 (@scalbn-%29-val s22) (@scalbn-%28-loc s22)))
(defund @scalbn-%30-val (s22)
  (ashr-i32 (g '%29 (@scalbn-%29-loc s22)) 20))
(defund @scalbn-%30-loc (s22)
  (s '%30 (@scalbn-%30-val s22) (@scalbn-%29-loc s22)))
(defund @scalbn-%31-val (s22)
  (sub-i32 (g '%30 (@scalbn-%30-loc s22)) 54))
(defund @scalbn-%31-loc (s22)
  (s '%31 (@scalbn-%31-val s22) (@scalbn-%30-loc s22)))
(defund @scalbn-m22.3-mem (s22)
  (store-i32 (g '%31 (@scalbn-%31-loc s22)) (g '%k (@scalbn-%31-loc s22)) (@scalbn-m22.2-mem s22)))
(defund @scalbn-%32-val (s22)
  (load-i32 (g '%3 (@scalbn-%31-loc s22)) (@scalbn-m22.3-mem s22)))
(defund @scalbn-%32-loc (s22)
  (s '%32 (@scalbn-%32-val s22) (@scalbn-%31-loc s22)))
(defund @scalbn-%33-val (s22)
  (icmp-slt-i32 (g '%32 (@scalbn-%32-loc s22)) -50000))
(defund @scalbn-%33-loc (s22)
  (s '%33 (@scalbn-%33-val s22) (@scalbn-%32-loc s22)))
(defund @scalbn-succ22-lab (s22)
  (case (g '%33 (@scalbn-%33-loc s22)) (-1 '%34) (0 '%37)))

(defund @scalbn-succ22-rev (mem loc pred)
  (declare (ignore pred))
  (mv (case (g '%33 loc) (-1 '%34) (0 '%37)) mem loc))
(defund @scalbn-%33-rev (mem loc pred)
  (@scalbn-succ22-rev mem (s '%33 (icmp-slt-i32 (g '%32 loc) -50000) loc) pred))
(defund @scalbn-%32-rev (mem loc pred)
  (@scalbn-%33-rev mem (s '%32 (load-i32 (g '%3 loc) mem) loc) pred))
(defund @scalbn-m22.3-rev (mem loc pred)
  (@scalbn-%32-rev (store-i32 (g '%31 loc) (g '%k loc) mem) loc pred))
(defund @scalbn-%31-rev (mem loc pred)
  (@scalbn-m22.3-rev mem (s '%31 (sub-i32 (g '%30 loc) 54) loc) pred))
(defund @scalbn-%30-rev (mem loc pred)
  (@scalbn-%31-rev mem (s '%30 (ashr-i32 (g '%29 loc) 20) loc) pred))
(defund @scalbn-%29-rev (mem loc pred)
  (@scalbn-%30-rev mem (s '%29 (and-i32 (g '%28 loc) 2146435072) loc) pred))
(defund @scalbn-%28-rev (mem loc pred)
  (@scalbn-%29-rev mem (s '%28 (load-i32 (g '%hx loc) mem) loc) pred))
(defund @scalbn-m22.2-rev (mem loc pred)
  (@scalbn-%28-rev (store-i32 (g '%27 loc) (g '%hx loc) mem) loc pred))
(defund @scalbn-%27-rev (mem loc pred)
  (@scalbn-m22.2-rev mem (s '%27 (load-i32 (g '%26 loc) mem) loc) pred))
(defund @scalbn-%26-rev (mem loc pred)
  (@scalbn-%27-rev mem (s '%26 (getelementptr-i32 (g '%25 loc) 1) loc) pred))
(defund @scalbn-%25-rev (mem loc pred)
  (@scalbn-%26-rev mem (s '%25 (bitcast-double*-to-i32* (g '%2 loc)) loc) pred))
(defund @scalbn-m22.1-rev (mem loc pred)
  (@scalbn-%25-rev (store-double (g '%24 loc) (g '%2 loc) mem) loc pred))
(defund @scalbn-%24-rev (mem loc pred)
  (@scalbn-m22.1-rev mem (s '%24 (fmul-double (g '%23 loc) #x4350000000000000) loc) pred))
(defund @scalbn-%23-rev (mem loc pred)
  (@scalbn-%24-rev mem (s '%23 (load-double (g '%2 loc) mem) loc) pred))

(defund @scalbn-%22-rev (mem loc pred)
  (@scalbn-%23-rev mem loc pred))

(defund @scalbn-%22-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%23 (load-double (g '%2 loc) mem) loc))
    (loc (s '%24 (fmul-double (g '%23 loc) #x4350000000000000) loc))
    (mem (store-double (g '%24 loc) (g '%2 loc) mem))
    (loc (s '%25 (bitcast-double*-to-i32* (g '%2 loc)) loc))
    (loc (s '%26 (getelementptr-i32 (g '%25 loc) 1) loc))
    (loc (s '%27 (load-i32 (g '%26 loc) mem) loc))
    (mem (store-i32 (g '%27 loc) (g '%hx loc) mem))
    (loc (s '%28 (load-i32 (g '%hx loc) mem) loc))
    (loc (s '%29 (and-i32 (g '%28 loc) 2146435072) loc))
    (loc (s '%30 (ashr-i32 (g '%29 loc) 20) loc))
    (loc (s '%31 (sub-i32 (g '%30 loc) 54) loc))
    (mem (store-i32 (g '%31 loc) (g '%k loc) mem))
    (loc (s '%32 (load-i32 (g '%3 loc) mem) loc))
    (loc (s '%33 (icmp-slt-i32 (g '%32 loc) -50000) loc))
    (succ (case (g '%33 loc) (-1 '%34) (0 '%37))))
  (mv succ mem loc)))

(defruled @scalbn-%22-expand-bb
  (equal (@scalbn-%22-bb mem loc pred)
         (@scalbn-%22-rev mem loc pred))
  :enable (@scalbn-%22-bb @scalbn-%22-rev
    @scalbn-%23-rev
    @scalbn-%24-rev
    @scalbn-m22.1-rev
    @scalbn-%25-rev
    @scalbn-%26-rev
    @scalbn-%27-rev
    @scalbn-m22.2-rev
    @scalbn-%28-rev
    @scalbn-%29-rev
    @scalbn-%30-rev
    @scalbn-%31-rev
    @scalbn-m22.3-rev
    @scalbn-%32-rev
    @scalbn-%33-rev
    @scalbn-succ22-rev)
  :disable s-diff-s)

(defund @scalbn-%34-mem (s34)
  (car s34))
(defund @scalbn-%34-loc (s34)
  (cadr s34))
(defund @scalbn-%34-pred (s34)
  (caddr s34))
(defund @scalbn-%35-val (s34)
  (load-double (g '%2 (@scalbn-%34-loc s34)) (@scalbn-%34-mem s34)))
(defund @scalbn-%35-loc (s34)
  (s '%35 (@scalbn-%35-val s34) (@scalbn-%34-loc s34)))
(defund @scalbn-%36-val (s34)
  (fmul-double #x01a56e1fc2f8f359 (g '%35 (@scalbn-%35-loc s34))))
(defund @scalbn-%36-loc (s34)
  (s '%36 (@scalbn-%36-val s34) (@scalbn-%35-loc s34)))
(defund @scalbn-m34.1-mem (s34)
  (store-double (g '%36 (@scalbn-%36-loc s34)) (g '%1 (@scalbn-%36-loc s34)) (@scalbn-%34-mem s34)))
(defund @scalbn-succ34-lab (s34)
  (declare (ignore s34))
  '%93)

(defund @scalbn-succ34-rev (mem loc pred)
  (declare (ignore pred))
  (mv '%93 mem loc))
(defund @scalbn-m34.1-rev (mem loc pred)
  (@scalbn-succ34-rev (store-double (g '%36 loc) (g '%1 loc) mem) loc pred))
(defund @scalbn-%36-rev (mem loc pred)
  (@scalbn-m34.1-rev mem (s '%36 (fmul-double #x01a56e1fc2f8f359 (g '%35 loc)) loc) pred))
(defund @scalbn-%35-rev (mem loc pred)
  (@scalbn-%36-rev mem (s '%35 (load-double (g '%2 loc) mem) loc) pred))

(defund @scalbn-%34-rev (mem loc pred)
  (@scalbn-%35-rev mem loc pred))

(defund @scalbn-%34-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%35 (load-double (g '%2 loc) mem) loc))
    (loc (s '%36 (fmul-double #x01a56e1fc2f8f359 (g '%35 loc)) loc))
    (mem (store-double (g '%36 loc) (g '%1 loc) mem))
    (succ '%93))
  (mv succ mem loc)))

(defruled @scalbn-%34-expand-bb
  (equal (@scalbn-%34-bb mem loc pred)
         (@scalbn-%34-rev mem loc pred))
  :enable (@scalbn-%34-bb @scalbn-%34-rev
    @scalbn-%35-rev
    @scalbn-%36-rev
    @scalbn-m34.1-rev
    @scalbn-succ34-rev)
  :disable s-diff-s)

(defund @scalbn-%37-mem (s37)
  (car s37))
(defund @scalbn-%37-loc (s37)
  (cadr s37))
(defund @scalbn-%37-pred (s37)
  (caddr s37))
(defund @scalbn-succ37-lab (s37)
  (declare (ignore s37))
  '%38)

(defund @scalbn-succ37-rev (mem loc pred)
  (declare (ignore pred))
  (mv '%38 mem loc))

(defund @scalbn-%37-rev (mem loc pred)
  (@scalbn-succ37-rev mem loc pred))

(defund @scalbn-%37-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (succ '%38))
  (mv succ mem loc)))

(defruled @scalbn-%37-expand-bb
  (equal (@scalbn-%37-bb mem loc pred)
         (@scalbn-%37-rev mem loc pred))
  :enable (@scalbn-%37-bb @scalbn-%37-rev
    @scalbn-succ37-rev)
  :disable s-diff-s)

(defund @scalbn-%38-mem (s38)
  (car s38))
(defund @scalbn-%38-loc (s38)
  (cadr s38))
(defund @scalbn-%38-pred (s38)
  (caddr s38))
(defund @scalbn-%39-val (s38)
  (load-i32 (g '%k (@scalbn-%38-loc s38)) (@scalbn-%38-mem s38)))
(defund @scalbn-%39-loc (s38)
  (s '%39 (@scalbn-%39-val s38) (@scalbn-%38-loc s38)))
(defund @scalbn-%40-val (s38)
  (icmp-eq-i32 (g '%39 (@scalbn-%39-loc s38)) 2047))
(defund @scalbn-%40-loc (s38)
  (s '%40 (@scalbn-%40-val s38) (@scalbn-%39-loc s38)))
(defund @scalbn-succ38-lab (s38)
  (case (g '%40 (@scalbn-%40-loc s38)) (-1 '%41) (0 '%45)))

(defund @scalbn-succ38-rev (mem loc pred)
  (declare (ignore pred))
  (mv (case (g '%40 loc) (-1 '%41) (0 '%45)) mem loc))
(defund @scalbn-%40-rev (mem loc pred)
  (@scalbn-succ38-rev mem (s '%40 (icmp-eq-i32 (g '%39 loc) 2047) loc) pred))
(defund @scalbn-%39-rev (mem loc pred)
  (@scalbn-%40-rev mem (s '%39 (load-i32 (g '%k loc) mem) loc) pred))

(defund @scalbn-%38-rev (mem loc pred)
  (@scalbn-%39-rev mem loc pred))

(defund @scalbn-%38-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%39 (load-i32 (g '%k loc) mem) loc))
    (loc (s '%40 (icmp-eq-i32 (g '%39 loc) 2047) loc))
    (succ (case (g '%40 loc) (-1 '%41) (0 '%45))))
  (mv succ mem loc)))

(defruled @scalbn-%38-expand-bb
  (equal (@scalbn-%38-bb mem loc pred)
         (@scalbn-%38-rev mem loc pred))
  :enable (@scalbn-%38-bb @scalbn-%38-rev
    @scalbn-%39-rev
    @scalbn-%40-rev
    @scalbn-succ38-rev)
  :disable s-diff-s)

(defund @scalbn-%41-mem (s41)
  (car s41))
(defund @scalbn-%41-loc (s41)
  (cadr s41))
(defund @scalbn-%41-pred (s41)
  (caddr s41))
(defund @scalbn-%42-val (s41)
  (load-double (g '%2 (@scalbn-%41-loc s41)) (@scalbn-%41-mem s41)))
(defund @scalbn-%42-loc (s41)
  (s '%42 (@scalbn-%42-val s41) (@scalbn-%41-loc s41)))
(defund @scalbn-%43-val (s41)
  (load-double (g '%2 (@scalbn-%42-loc s41)) (@scalbn-%41-mem s41)))
(defund @scalbn-%43-loc (s41)
  (s '%43 (@scalbn-%43-val s41) (@scalbn-%42-loc s41)))
(defund @scalbn-%44-val (s41)
  (fadd-double (g '%42 (@scalbn-%43-loc s41)) (g '%43 (@scalbn-%43-loc s41))))
(defund @scalbn-%44-loc (s41)
  (s '%44 (@scalbn-%44-val s41) (@scalbn-%43-loc s41)))
(defund @scalbn-m41.1-mem (s41)
  (store-double (g '%44 (@scalbn-%44-loc s41)) (g '%1 (@scalbn-%44-loc s41)) (@scalbn-%41-mem s41)))
(defund @scalbn-succ41-lab (s41)
  (declare (ignore s41))
  '%93)

(defund @scalbn-succ41-rev (mem loc pred)
  (declare (ignore pred))
  (mv '%93 mem loc))
(defund @scalbn-m41.1-rev (mem loc pred)
  (@scalbn-succ41-rev (store-double (g '%44 loc) (g '%1 loc) mem) loc pred))
(defund @scalbn-%44-rev (mem loc pred)
  (@scalbn-m41.1-rev mem (s '%44 (fadd-double (g '%42 loc) (g '%43 loc)) loc) pred))
(defund @scalbn-%43-rev (mem loc pred)
  (@scalbn-%44-rev mem (s '%43 (load-double (g '%2 loc) mem) loc) pred))
(defund @scalbn-%42-rev (mem loc pred)
  (@scalbn-%43-rev mem (s '%42 (load-double (g '%2 loc) mem) loc) pred))

(defund @scalbn-%41-rev (mem loc pred)
  (@scalbn-%42-rev mem loc pred))

(defund @scalbn-%41-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%42 (load-double (g '%2 loc) mem) loc))
    (loc (s '%43 (load-double (g '%2 loc) mem) loc))
    (loc (s '%44 (fadd-double (g '%42 loc) (g '%43 loc)) loc))
    (mem (store-double (g '%44 loc) (g '%1 loc) mem))
    (succ '%93))
  (mv succ mem loc)))

(defruled @scalbn-%41-expand-bb
  (equal (@scalbn-%41-bb mem loc pred)
         (@scalbn-%41-rev mem loc pred))
  :enable (@scalbn-%41-bb @scalbn-%41-rev
    @scalbn-%42-rev
    @scalbn-%43-rev
    @scalbn-%44-rev
    @scalbn-m41.1-rev
    @scalbn-succ41-rev)
  :disable s-diff-s)

(defund @scalbn-%45-mem (s45)
  (car s45))
(defund @scalbn-%45-loc (s45)
  (cadr s45))
(defund @scalbn-%45-pred (s45)
  (caddr s45))
(defund @scalbn-%46-val (s45)
  (load-i32 (g '%k (@scalbn-%45-loc s45)) (@scalbn-%45-mem s45)))
(defund @scalbn-%46-loc (s45)
  (s '%46 (@scalbn-%46-val s45) (@scalbn-%45-loc s45)))
(defund @scalbn-%47-val (s45)
  (load-i32 (g '%3 (@scalbn-%46-loc s45)) (@scalbn-%45-mem s45)))
(defund @scalbn-%47-loc (s45)
  (s '%47 (@scalbn-%47-val s45) (@scalbn-%46-loc s45)))
(defund @scalbn-%48-val (s45)
  (add-i32 (g '%46 (@scalbn-%47-loc s45)) (g '%47 (@scalbn-%47-loc s45))))
(defund @scalbn-%48-loc (s45)
  (s '%48 (@scalbn-%48-val s45) (@scalbn-%47-loc s45)))
(defund @scalbn-m45.1-mem (s45)
  (store-i32 (g '%48 (@scalbn-%48-loc s45)) (g '%k (@scalbn-%48-loc s45)) (@scalbn-%45-mem s45)))
(defund @scalbn-%49-val (s45)
  (load-i32 (g '%k (@scalbn-%48-loc s45)) (@scalbn-m45.1-mem s45)))
(defund @scalbn-%49-loc (s45)
  (s '%49 (@scalbn-%49-val s45) (@scalbn-%48-loc s45)))
(defund @scalbn-%50-val (s45)
  (icmp-sgt-i32 (g '%49 (@scalbn-%49-loc s45)) 2046))
(defund @scalbn-%50-loc (s45)
  (s '%50 (@scalbn-%50-val s45) (@scalbn-%49-loc s45)))
(defund @scalbn-succ45-lab (s45)
  (case (g '%50 (@scalbn-%50-loc s45)) (-1 '%51) (0 '%55)))

(defund @scalbn-succ45-rev (mem loc pred)
  (declare (ignore pred))
  (mv (case (g '%50 loc) (-1 '%51) (0 '%55)) mem loc))
(defund @scalbn-%50-rev (mem loc pred)
  (@scalbn-succ45-rev mem (s '%50 (icmp-sgt-i32 (g '%49 loc) 2046) loc) pred))
(defund @scalbn-%49-rev (mem loc pred)
  (@scalbn-%50-rev mem (s '%49 (load-i32 (g '%k loc) mem) loc) pred))
(defund @scalbn-m45.1-rev (mem loc pred)
  (@scalbn-%49-rev (store-i32 (g '%48 loc) (g '%k loc) mem) loc pred))
(defund @scalbn-%48-rev (mem loc pred)
  (@scalbn-m45.1-rev mem (s '%48 (add-i32 (g '%46 loc) (g '%47 loc)) loc) pred))
(defund @scalbn-%47-rev (mem loc pred)
  (@scalbn-%48-rev mem (s '%47 (load-i32 (g '%3 loc) mem) loc) pred))
(defund @scalbn-%46-rev (mem loc pred)
  (@scalbn-%47-rev mem (s '%46 (load-i32 (g '%k loc) mem) loc) pred))

(defund @scalbn-%45-rev (mem loc pred)
  (@scalbn-%46-rev mem loc pred))

(defund @scalbn-%45-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%46 (load-i32 (g '%k loc) mem) loc))
    (loc (s '%47 (load-i32 (g '%3 loc) mem) loc))
    (loc (s '%48 (add-i32 (g '%46 loc) (g '%47 loc)) loc))
    (mem (store-i32 (g '%48 loc) (g '%k loc) mem))
    (loc (s '%49 (load-i32 (g '%k loc) mem) loc))
    (loc (s '%50 (icmp-sgt-i32 (g '%49 loc) 2046) loc))
    (succ (case (g '%50 loc) (-1 '%51) (0 '%55))))
  (mv succ mem loc)))

(defruled @scalbn-%45-expand-bb
  (equal (@scalbn-%45-bb mem loc pred)
         (@scalbn-%45-rev mem loc pred))
  :enable (@scalbn-%45-bb @scalbn-%45-rev
    @scalbn-%46-rev
    @scalbn-%47-rev
    @scalbn-%48-rev
    @scalbn-m45.1-rev
    @scalbn-%49-rev
    @scalbn-%50-rev
    @scalbn-succ45-rev)
  :disable s-diff-s)

(defund @scalbn-%51-mem (s51)
  (car s51))
(defund @scalbn-%51-loc (s51)
  (cadr s51))
(defund @scalbn-%51-pred (s51)
  (caddr s51))
(defund @scalbn-%52-val (s51)
  (load-double (g '%2 (@scalbn-%51-loc s51)) (@scalbn-%51-mem s51)))
(defund @scalbn-%52-loc (s51)
  (s '%52 (@scalbn-%52-val s51) (@scalbn-%51-loc s51)))
(defund @scalbn-%53-val (s51)
  (@copysign #x7e37e43c8800759c (g '%52 (@scalbn-%52-loc s51))))
(defund @scalbn-%53-loc (s51)
  (s '%53 (@scalbn-%53-val s51) (@scalbn-%52-loc s51)))
(defund @scalbn-%54-val (s51)
  (fmul-double #x7e37e43c8800759c (g '%53 (@scalbn-%53-loc s51))))
(defund @scalbn-%54-loc (s51)
  (s '%54 (@scalbn-%54-val s51) (@scalbn-%53-loc s51)))
(defund @scalbn-m51.1-mem (s51)
  (store-double (g '%54 (@scalbn-%54-loc s51)) (g '%1 (@scalbn-%54-loc s51)) (@scalbn-%51-mem s51)))
(defund @scalbn-succ51-lab (s51)
  (declare (ignore s51))
  '%93)

(defund @scalbn-succ51-rev (mem loc pred)
  (declare (ignore pred))
  (mv '%93 mem loc))
(defund @scalbn-m51.1-rev (mem loc pred)
  (@scalbn-succ51-rev (store-double (g '%54 loc) (g '%1 loc) mem) loc pred))
(defund @scalbn-%54-rev (mem loc pred)
  (@scalbn-m51.1-rev mem (s '%54 (fmul-double #x7e37e43c8800759c (g '%53 loc)) loc) pred))
(defund @scalbn-%53-rev (mem loc pred)
  (@scalbn-%54-rev mem (s '%53 (@copysign #x7e37e43c8800759c (g '%52 loc)) loc) pred))
(defund @scalbn-%52-rev (mem loc pred)
  (@scalbn-%53-rev mem (s '%52 (load-double (g '%2 loc) mem) loc) pred))

(defund @scalbn-%51-rev (mem loc pred)
  (@scalbn-%52-rev mem loc pred))

(defund @scalbn-%51-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%52 (load-double (g '%2 loc) mem) loc))
    (loc (s '%53 (@copysign #x7e37e43c8800759c (g '%52 loc)) loc))
    (loc (s '%54 (fmul-double #x7e37e43c8800759c (g '%53 loc)) loc))
    (mem (store-double (g '%54 loc) (g '%1 loc) mem))
    (succ '%93))
  (mv succ mem loc)))

(defruled @scalbn-%51-expand-bb
  (equal (@scalbn-%51-bb mem loc pred)
         (@scalbn-%51-rev mem loc pred))
  :enable (@scalbn-%51-bb @scalbn-%51-rev
    @scalbn-%52-rev
    @scalbn-%53-rev
    @scalbn-%54-rev
    @scalbn-m51.1-rev
    @scalbn-succ51-rev)
  :disable s-diff-s)

(defund @scalbn-%55-mem (s55)
  (car s55))
(defund @scalbn-%55-loc (s55)
  (cadr s55))
(defund @scalbn-%55-pred (s55)
  (caddr s55))
(defund @scalbn-%56-val (s55)
  (load-i32 (g '%k (@scalbn-%55-loc s55)) (@scalbn-%55-mem s55)))
(defund @scalbn-%56-loc (s55)
  (s '%56 (@scalbn-%56-val s55) (@scalbn-%55-loc s55)))
(defund @scalbn-%57-val (s55)
  (icmp-sgt-i32 (g '%56 (@scalbn-%56-loc s55)) 0))
(defund @scalbn-%57-loc (s55)
  (s '%57 (@scalbn-%57-val s55) (@scalbn-%56-loc s55)))
(defund @scalbn-succ55-lab (s55)
  (case (g '%57 (@scalbn-%57-loc s55)) (-1 '%58) (0 '%67)))

(defund @scalbn-succ55-rev (mem loc pred)
  (declare (ignore pred))
  (mv (case (g '%57 loc) (-1 '%58) (0 '%67)) mem loc))
(defund @scalbn-%57-rev (mem loc pred)
  (@scalbn-succ55-rev mem (s '%57 (icmp-sgt-i32 (g '%56 loc) 0) loc) pred))
(defund @scalbn-%56-rev (mem loc pred)
  (@scalbn-%57-rev mem (s '%56 (load-i32 (g '%k loc) mem) loc) pred))

(defund @scalbn-%55-rev (mem loc pred)
  (@scalbn-%56-rev mem loc pred))

(defund @scalbn-%55-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%56 (load-i32 (g '%k loc) mem) loc))
    (loc (s '%57 (icmp-sgt-i32 (g '%56 loc) 0) loc))
    (succ (case (g '%57 loc) (-1 '%58) (0 '%67))))
  (mv succ mem loc)))

(defruled @scalbn-%55-expand-bb
  (equal (@scalbn-%55-bb mem loc pred)
         (@scalbn-%55-rev mem loc pred))
  :enable (@scalbn-%55-bb @scalbn-%55-rev
    @scalbn-%56-rev
    @scalbn-%57-rev
    @scalbn-succ55-rev)
  :disable s-diff-s)

(defund @scalbn-%58-mem (s58)
  (car s58))
(defund @scalbn-%58-loc (s58)
  (cadr s58))
(defund @scalbn-%58-pred (s58)
  (caddr s58))
(defund @scalbn-%59-val (s58)
  (load-i32 (g '%hx (@scalbn-%58-loc s58)) (@scalbn-%58-mem s58)))
(defund @scalbn-%59-loc (s58)
  (s '%59 (@scalbn-%59-val s58) (@scalbn-%58-loc s58)))
(defund @scalbn-%60-val (s58)
  (and-i32 (g '%59 (@scalbn-%59-loc s58)) -2146435073))
(defund @scalbn-%60-loc (s58)
  (s '%60 (@scalbn-%60-val s58) (@scalbn-%59-loc s58)))
(defund @scalbn-%61-val (s58)
  (load-i32 (g '%k (@scalbn-%60-loc s58)) (@scalbn-%58-mem s58)))
(defund @scalbn-%61-loc (s58)
  (s '%61 (@scalbn-%61-val s58) (@scalbn-%60-loc s58)))
(defund @scalbn-%62-val (s58)
  (shl-i32 (g '%61 (@scalbn-%61-loc s58)) 20))
(defund @scalbn-%62-loc (s58)
  (s '%62 (@scalbn-%62-val s58) (@scalbn-%61-loc s58)))
(defund @scalbn-%63-val (s58)
  (or-i32 (g '%60 (@scalbn-%62-loc s58)) (g '%62 (@scalbn-%62-loc s58))))
(defund @scalbn-%63-loc (s58)
  (s '%63 (@scalbn-%63-val s58) (@scalbn-%62-loc s58)))
(defund @scalbn-%64-val (s58)
  (bitcast-double*-to-i32* (g '%2 (@scalbn-%63-loc s58))))
(defund @scalbn-%64-loc (s58)
  (s '%64 (@scalbn-%64-val s58) (@scalbn-%63-loc s58)))
(defund @scalbn-%65-val (s58)
  (getelementptr-i32 (g '%64 (@scalbn-%64-loc s58)) 1))
(defund @scalbn-%65-loc (s58)
  (s '%65 (@scalbn-%65-val s58) (@scalbn-%64-loc s58)))
(defund @scalbn-m58.1-mem (s58)
  (store-i32 (g '%63 (@scalbn-%65-loc s58)) (g '%65 (@scalbn-%65-loc s58)) (@scalbn-%58-mem s58)))
(defund @scalbn-%66-val (s58)
  (load-double (g '%2 (@scalbn-%65-loc s58)) (@scalbn-m58.1-mem s58)))
(defund @scalbn-%66-loc (s58)
  (s '%66 (@scalbn-%66-val s58) (@scalbn-%65-loc s58)))
(defund @scalbn-m58.2-mem (s58)
  (store-double (g '%66 (@scalbn-%66-loc s58)) (g '%1 (@scalbn-%66-loc s58)) (@scalbn-m58.1-mem s58)))
(defund @scalbn-succ58-lab (s58)
  (declare (ignore s58))
  '%93)

(defund @scalbn-succ58-rev (mem loc pred)
  (declare (ignore pred))
  (mv '%93 mem loc))
(defund @scalbn-m58.2-rev (mem loc pred)
  (@scalbn-succ58-rev (store-double (g '%66 loc) (g '%1 loc) mem) loc pred))
(defund @scalbn-%66-rev (mem loc pred)
  (@scalbn-m58.2-rev mem (s '%66 (load-double (g '%2 loc) mem) loc) pred))
(defund @scalbn-m58.1-rev (mem loc pred)
  (@scalbn-%66-rev (store-i32 (g '%63 loc) (g '%65 loc) mem) loc pred))
(defund @scalbn-%65-rev (mem loc pred)
  (@scalbn-m58.1-rev mem (s '%65 (getelementptr-i32 (g '%64 loc) 1) loc) pred))
(defund @scalbn-%64-rev (mem loc pred)
  (@scalbn-%65-rev mem (s '%64 (bitcast-double*-to-i32* (g '%2 loc)) loc) pred))
(defund @scalbn-%63-rev (mem loc pred)
  (@scalbn-%64-rev mem (s '%63 (or-i32 (g '%60 loc) (g '%62 loc)) loc) pred))
(defund @scalbn-%62-rev (mem loc pred)
  (@scalbn-%63-rev mem (s '%62 (shl-i32 (g '%61 loc) 20) loc) pred))
(defund @scalbn-%61-rev (mem loc pred)
  (@scalbn-%62-rev mem (s '%61 (load-i32 (g '%k loc) mem) loc) pred))
(defund @scalbn-%60-rev (mem loc pred)
  (@scalbn-%61-rev mem (s '%60 (and-i32 (g '%59 loc) -2146435073) loc) pred))
(defund @scalbn-%59-rev (mem loc pred)
  (@scalbn-%60-rev mem (s '%59 (load-i32 (g '%hx loc) mem) loc) pred))

(defund @scalbn-%58-rev (mem loc pred)
  (@scalbn-%59-rev mem loc pred))

(defund @scalbn-%58-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%59 (load-i32 (g '%hx loc) mem) loc))
    (loc (s '%60 (and-i32 (g '%59 loc) -2146435073) loc))
    (loc (s '%61 (load-i32 (g '%k loc) mem) loc))
    (loc (s '%62 (shl-i32 (g '%61 loc) 20) loc))
    (loc (s '%63 (or-i32 (g '%60 loc) (g '%62 loc)) loc))
    (loc (s '%64 (bitcast-double*-to-i32* (g '%2 loc)) loc))
    (loc (s '%65 (getelementptr-i32 (g '%64 loc) 1) loc))
    (mem (store-i32 (g '%63 loc) (g '%65 loc) mem))
    (loc (s '%66 (load-double (g '%2 loc) mem) loc))
    (mem (store-double (g '%66 loc) (g '%1 loc) mem))
    (succ '%93))
  (mv succ mem loc)))

(defruled @scalbn-%58-expand-bb
  (equal (@scalbn-%58-bb mem loc pred)
         (@scalbn-%58-rev mem loc pred))
  :enable (@scalbn-%58-bb @scalbn-%58-rev
    @scalbn-%59-rev
    @scalbn-%60-rev
    @scalbn-%61-rev
    @scalbn-%62-rev
    @scalbn-%63-rev
    @scalbn-%64-rev
    @scalbn-%65-rev
    @scalbn-m58.1-rev
    @scalbn-%66-rev
    @scalbn-m58.2-rev
    @scalbn-succ58-rev)
  :disable s-diff-s)

(defund @scalbn-%67-mem (s67)
  (car s67))
(defund @scalbn-%67-loc (s67)
  (cadr s67))
(defund @scalbn-%67-pred (s67)
  (caddr s67))
(defund @scalbn-%68-val (s67)
  (load-i32 (g '%k (@scalbn-%67-loc s67)) (@scalbn-%67-mem s67)))
(defund @scalbn-%68-loc (s67)
  (s '%68 (@scalbn-%68-val s67) (@scalbn-%67-loc s67)))
(defund @scalbn-%69-val (s67)
  (icmp-sle-i32 (g '%68 (@scalbn-%68-loc s67)) -54))
(defund @scalbn-%69-loc (s67)
  (s '%69 (@scalbn-%69-val s67) (@scalbn-%68-loc s67)))
(defund @scalbn-succ67-lab (s67)
  (case (g '%69 (@scalbn-%69-loc s67)) (-1 '%70) (0 '%81)))

(defund @scalbn-succ67-rev (mem loc pred)
  (declare (ignore pred))
  (mv (case (g '%69 loc) (-1 '%70) (0 '%81)) mem loc))
(defund @scalbn-%69-rev (mem loc pred)
  (@scalbn-succ67-rev mem (s '%69 (icmp-sle-i32 (g '%68 loc) -54) loc) pred))
(defund @scalbn-%68-rev (mem loc pred)
  (@scalbn-%69-rev mem (s '%68 (load-i32 (g '%k loc) mem) loc) pred))

(defund @scalbn-%67-rev (mem loc pred)
  (@scalbn-%68-rev mem loc pred))

(defund @scalbn-%67-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%68 (load-i32 (g '%k loc) mem) loc))
    (loc (s '%69 (icmp-sle-i32 (g '%68 loc) -54) loc))
    (succ (case (g '%69 loc) (-1 '%70) (0 '%81))))
  (mv succ mem loc)))

(defruled @scalbn-%67-expand-bb
  (equal (@scalbn-%67-bb mem loc pred)
         (@scalbn-%67-rev mem loc pred))
  :enable (@scalbn-%67-bb @scalbn-%67-rev
    @scalbn-%68-rev
    @scalbn-%69-rev
    @scalbn-succ67-rev)
  :disable s-diff-s)

(defund @scalbn-%70-mem (s70)
  (car s70))
(defund @scalbn-%70-loc (s70)
  (cadr s70))
(defund @scalbn-%70-pred (s70)
  (caddr s70))
(defund @scalbn-%71-val (s70)
  (load-i32 (g '%3 (@scalbn-%70-loc s70)) (@scalbn-%70-mem s70)))
(defund @scalbn-%71-loc (s70)
  (s '%71 (@scalbn-%71-val s70) (@scalbn-%70-loc s70)))
(defund @scalbn-%72-val (s70)
  (icmp-sgt-i32 (g '%71 (@scalbn-%71-loc s70)) 50000))
(defund @scalbn-%72-loc (s70)
  (s '%72 (@scalbn-%72-val s70) (@scalbn-%71-loc s70)))
(defund @scalbn-succ70-lab (s70)
  (case (g '%72 (@scalbn-%72-loc s70)) (-1 '%73) (0 '%77)))

(defund @scalbn-succ70-rev (mem loc pred)
  (declare (ignore pred))
  (mv (case (g '%72 loc) (-1 '%73) (0 '%77)) mem loc))
(defund @scalbn-%72-rev (mem loc pred)
  (@scalbn-succ70-rev mem (s '%72 (icmp-sgt-i32 (g '%71 loc) 50000) loc) pred))
(defund @scalbn-%71-rev (mem loc pred)
  (@scalbn-%72-rev mem (s '%71 (load-i32 (g '%3 loc) mem) loc) pred))

(defund @scalbn-%70-rev (mem loc pred)
  (@scalbn-%71-rev mem loc pred))

(defund @scalbn-%70-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%71 (load-i32 (g '%3 loc) mem) loc))
    (loc (s '%72 (icmp-sgt-i32 (g '%71 loc) 50000) loc))
    (succ (case (g '%72 loc) (-1 '%73) (0 '%77))))
  (mv succ mem loc)))

(defruled @scalbn-%70-expand-bb
  (equal (@scalbn-%70-bb mem loc pred)
         (@scalbn-%70-rev mem loc pred))
  :enable (@scalbn-%70-bb @scalbn-%70-rev
    @scalbn-%71-rev
    @scalbn-%72-rev
    @scalbn-succ70-rev)
  :disable s-diff-s)

(defund @scalbn-%73-mem (s73)
  (car s73))
(defund @scalbn-%73-loc (s73)
  (cadr s73))
(defund @scalbn-%73-pred (s73)
  (caddr s73))
(defund @scalbn-%74-val (s73)
  (load-double (g '%2 (@scalbn-%73-loc s73)) (@scalbn-%73-mem s73)))
(defund @scalbn-%74-loc (s73)
  (s '%74 (@scalbn-%74-val s73) (@scalbn-%73-loc s73)))
(defund @scalbn-%75-val (s73)
  (@copysign #x7e37e43c8800759c (g '%74 (@scalbn-%74-loc s73))))
(defund @scalbn-%75-loc (s73)
  (s '%75 (@scalbn-%75-val s73) (@scalbn-%74-loc s73)))
(defund @scalbn-%76-val (s73)
  (fmul-double #x7e37e43c8800759c (g '%75 (@scalbn-%75-loc s73))))
(defund @scalbn-%76-loc (s73)
  (s '%76 (@scalbn-%76-val s73) (@scalbn-%75-loc s73)))
(defund @scalbn-m73.1-mem (s73)
  (store-double (g '%76 (@scalbn-%76-loc s73)) (g '%1 (@scalbn-%76-loc s73)) (@scalbn-%73-mem s73)))
(defund @scalbn-succ73-lab (s73)
  (declare (ignore s73))
  '%93)

(defund @scalbn-succ73-rev (mem loc pred)
  (declare (ignore pred))
  (mv '%93 mem loc))
(defund @scalbn-m73.1-rev (mem loc pred)
  (@scalbn-succ73-rev (store-double (g '%76 loc) (g '%1 loc) mem) loc pred))
(defund @scalbn-%76-rev (mem loc pred)
  (@scalbn-m73.1-rev mem (s '%76 (fmul-double #x7e37e43c8800759c (g '%75 loc)) loc) pred))
(defund @scalbn-%75-rev (mem loc pred)
  (@scalbn-%76-rev mem (s '%75 (@copysign #x7e37e43c8800759c (g '%74 loc)) loc) pred))
(defund @scalbn-%74-rev (mem loc pred)
  (@scalbn-%75-rev mem (s '%74 (load-double (g '%2 loc) mem) loc) pred))

(defund @scalbn-%73-rev (mem loc pred)
  (@scalbn-%74-rev mem loc pred))

(defund @scalbn-%73-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%74 (load-double (g '%2 loc) mem) loc))
    (loc (s '%75 (@copysign #x7e37e43c8800759c (g '%74 loc)) loc))
    (loc (s '%76 (fmul-double #x7e37e43c8800759c (g '%75 loc)) loc))
    (mem (store-double (g '%76 loc) (g '%1 loc) mem))
    (succ '%93))
  (mv succ mem loc)))

(defruled @scalbn-%73-expand-bb
  (equal (@scalbn-%73-bb mem loc pred)
         (@scalbn-%73-rev mem loc pred))
  :enable (@scalbn-%73-bb @scalbn-%73-rev
    @scalbn-%74-rev
    @scalbn-%75-rev
    @scalbn-%76-rev
    @scalbn-m73.1-rev
    @scalbn-succ73-rev)
  :disable s-diff-s)

(defund @scalbn-%77-mem (s77)
  (car s77))
(defund @scalbn-%77-loc (s77)
  (cadr s77))
(defund @scalbn-%77-pred (s77)
  (caddr s77))
(defund @scalbn-%78-val (s77)
  (load-double (g '%2 (@scalbn-%77-loc s77)) (@scalbn-%77-mem s77)))
(defund @scalbn-%78-loc (s77)
  (s '%78 (@scalbn-%78-val s77) (@scalbn-%77-loc s77)))
(defund @scalbn-%79-val (s77)
  (@copysign #x01a56e1fc2f8f359 (g '%78 (@scalbn-%78-loc s77))))
(defund @scalbn-%79-loc (s77)
  (s '%79 (@scalbn-%79-val s77) (@scalbn-%78-loc s77)))
(defund @scalbn-%80-val (s77)
  (fmul-double #x01a56e1fc2f8f359 (g '%79 (@scalbn-%79-loc s77))))
(defund @scalbn-%80-loc (s77)
  (s '%80 (@scalbn-%80-val s77) (@scalbn-%79-loc s77)))
(defund @scalbn-m77.1-mem (s77)
  (store-double (g '%80 (@scalbn-%80-loc s77)) (g '%1 (@scalbn-%80-loc s77)) (@scalbn-%77-mem s77)))
(defund @scalbn-succ77-lab (s77)
  (declare (ignore s77))
  '%93)

(defund @scalbn-succ77-rev (mem loc pred)
  (declare (ignore pred))
  (mv '%93 mem loc))
(defund @scalbn-m77.1-rev (mem loc pred)
  (@scalbn-succ77-rev (store-double (g '%80 loc) (g '%1 loc) mem) loc pred))
(defund @scalbn-%80-rev (mem loc pred)
  (@scalbn-m77.1-rev mem (s '%80 (fmul-double #x01a56e1fc2f8f359 (g '%79 loc)) loc) pred))
(defund @scalbn-%79-rev (mem loc pred)
  (@scalbn-%80-rev mem (s '%79 (@copysign #x01a56e1fc2f8f359 (g '%78 loc)) loc) pred))
(defund @scalbn-%78-rev (mem loc pred)
  (@scalbn-%79-rev mem (s '%78 (load-double (g '%2 loc) mem) loc) pred))

(defund @scalbn-%77-rev (mem loc pred)
  (@scalbn-%78-rev mem loc pred))

(defund @scalbn-%77-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%78 (load-double (g '%2 loc) mem) loc))
    (loc (s '%79 (@copysign #x01a56e1fc2f8f359 (g '%78 loc)) loc))
    (loc (s '%80 (fmul-double #x01a56e1fc2f8f359 (g '%79 loc)) loc))
    (mem (store-double (g '%80 loc) (g '%1 loc) mem))
    (succ '%93))
  (mv succ mem loc)))

(defruled @scalbn-%77-expand-bb
  (equal (@scalbn-%77-bb mem loc pred)
         (@scalbn-%77-rev mem loc pred))
  :enable (@scalbn-%77-bb @scalbn-%77-rev
    @scalbn-%78-rev
    @scalbn-%79-rev
    @scalbn-%80-rev
    @scalbn-m77.1-rev
    @scalbn-succ77-rev)
  :disable s-diff-s)

(defund @scalbn-%81-mem (s81)
  (car s81))
(defund @scalbn-%81-loc (s81)
  (cadr s81))
(defund @scalbn-%81-pred (s81)
  (caddr s81))
(defund @scalbn-%82-val (s81)
  (load-i32 (g '%k (@scalbn-%81-loc s81)) (@scalbn-%81-mem s81)))
(defund @scalbn-%82-loc (s81)
  (s '%82 (@scalbn-%82-val s81) (@scalbn-%81-loc s81)))
(defund @scalbn-%83-val (s81)
  (add-i32 (g '%82 (@scalbn-%82-loc s81)) 54))
(defund @scalbn-%83-loc (s81)
  (s '%83 (@scalbn-%83-val s81) (@scalbn-%82-loc s81)))
(defund @scalbn-m81.1-mem (s81)
  (store-i32 (g '%83 (@scalbn-%83-loc s81)) (g '%k (@scalbn-%83-loc s81)) (@scalbn-%81-mem s81)))
(defund @scalbn-%84-val (s81)
  (load-i32 (g '%hx (@scalbn-%83-loc s81)) (@scalbn-m81.1-mem s81)))
(defund @scalbn-%84-loc (s81)
  (s '%84 (@scalbn-%84-val s81) (@scalbn-%83-loc s81)))
(defund @scalbn-%85-val (s81)
  (and-i32 (g '%84 (@scalbn-%84-loc s81)) -2146435073))
(defund @scalbn-%85-loc (s81)
  (s '%85 (@scalbn-%85-val s81) (@scalbn-%84-loc s81)))
(defund @scalbn-%86-val (s81)
  (load-i32 (g '%k (@scalbn-%85-loc s81)) (@scalbn-m81.1-mem s81)))
(defund @scalbn-%86-loc (s81)
  (s '%86 (@scalbn-%86-val s81) (@scalbn-%85-loc s81)))
(defund @scalbn-%87-val (s81)
  (shl-i32 (g '%86 (@scalbn-%86-loc s81)) 20))
(defund @scalbn-%87-loc (s81)
  (s '%87 (@scalbn-%87-val s81) (@scalbn-%86-loc s81)))
(defund @scalbn-%88-val (s81)
  (or-i32 (g '%85 (@scalbn-%87-loc s81)) (g '%87 (@scalbn-%87-loc s81))))
(defund @scalbn-%88-loc (s81)
  (s '%88 (@scalbn-%88-val s81) (@scalbn-%87-loc s81)))
(defund @scalbn-%89-val (s81)
  (bitcast-double*-to-i32* (g '%2 (@scalbn-%88-loc s81))))
(defund @scalbn-%89-loc (s81)
  (s '%89 (@scalbn-%89-val s81) (@scalbn-%88-loc s81)))
(defund @scalbn-%90-val (s81)
  (getelementptr-i32 (g '%89 (@scalbn-%89-loc s81)) 1))
(defund @scalbn-%90-loc (s81)
  (s '%90 (@scalbn-%90-val s81) (@scalbn-%89-loc s81)))
(defund @scalbn-m81.2-mem (s81)
  (store-i32 (g '%88 (@scalbn-%90-loc s81)) (g '%90 (@scalbn-%90-loc s81)) (@scalbn-m81.1-mem s81)))
(defund @scalbn-%91-val (s81)
  (load-double (g '%2 (@scalbn-%90-loc s81)) (@scalbn-m81.2-mem s81)))
(defund @scalbn-%91-loc (s81)
  (s '%91 (@scalbn-%91-val s81) (@scalbn-%90-loc s81)))
(defund @scalbn-%92-val (s81)
  (fmul-double (g '%91 (@scalbn-%91-loc s81)) #x3C90000000000000))
(defund @scalbn-%92-loc (s81)
  (s '%92 (@scalbn-%92-val s81) (@scalbn-%91-loc s81)))
(defund @scalbn-m81.3-mem (s81)
  (store-double (g '%92 (@scalbn-%92-loc s81)) (g '%1 (@scalbn-%92-loc s81)) (@scalbn-m81.2-mem s81)))
(defund @scalbn-succ81-lab (s81)
  (declare (ignore s81))
  '%93)

(defund @scalbn-succ81-rev (mem loc pred)
  (declare (ignore pred))
  (mv '%93 mem loc))
(defund @scalbn-m81.3-rev (mem loc pred)
  (@scalbn-succ81-rev (store-double (g '%92 loc) (g '%1 loc) mem) loc pred))
(defund @scalbn-%92-rev (mem loc pred)
  (@scalbn-m81.3-rev mem (s '%92 (fmul-double (g '%91 loc) #x3C90000000000000) loc) pred))
(defund @scalbn-%91-rev (mem loc pred)
  (@scalbn-%92-rev mem (s '%91 (load-double (g '%2 loc) mem) loc) pred))
(defund @scalbn-m81.2-rev (mem loc pred)
  (@scalbn-%91-rev (store-i32 (g '%88 loc) (g '%90 loc) mem) loc pred))
(defund @scalbn-%90-rev (mem loc pred)
  (@scalbn-m81.2-rev mem (s '%90 (getelementptr-i32 (g '%89 loc) 1) loc) pred))
(defund @scalbn-%89-rev (mem loc pred)
  (@scalbn-%90-rev mem (s '%89 (bitcast-double*-to-i32* (g '%2 loc)) loc) pred))
(defund @scalbn-%88-rev (mem loc pred)
  (@scalbn-%89-rev mem (s '%88 (or-i32 (g '%85 loc) (g '%87 loc)) loc) pred))
(defund @scalbn-%87-rev (mem loc pred)
  (@scalbn-%88-rev mem (s '%87 (shl-i32 (g '%86 loc) 20) loc) pred))
(defund @scalbn-%86-rev (mem loc pred)
  (@scalbn-%87-rev mem (s '%86 (load-i32 (g '%k loc) mem) loc) pred))
(defund @scalbn-%85-rev (mem loc pred)
  (@scalbn-%86-rev mem (s '%85 (and-i32 (g '%84 loc) -2146435073) loc) pred))
(defund @scalbn-%84-rev (mem loc pred)
  (@scalbn-%85-rev mem (s '%84 (load-i32 (g '%hx loc) mem) loc) pred))
(defund @scalbn-m81.1-rev (mem loc pred)
  (@scalbn-%84-rev (store-i32 (g '%83 loc) (g '%k loc) mem) loc pred))
(defund @scalbn-%83-rev (mem loc pred)
  (@scalbn-m81.1-rev mem (s '%83 (add-i32 (g '%82 loc) 54) loc) pred))
(defund @scalbn-%82-rev (mem loc pred)
  (@scalbn-%83-rev mem (s '%82 (load-i32 (g '%k loc) mem) loc) pred))

(defund @scalbn-%81-rev (mem loc pred)
  (@scalbn-%82-rev mem loc pred))

(defund @scalbn-%81-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%82 (load-i32 (g '%k loc) mem) loc))
    (loc (s '%83 (add-i32 (g '%82 loc) 54) loc))
    (mem (store-i32 (g '%83 loc) (g '%k loc) mem))
    (loc (s '%84 (load-i32 (g '%hx loc) mem) loc))
    (loc (s '%85 (and-i32 (g '%84 loc) -2146435073) loc))
    (loc (s '%86 (load-i32 (g '%k loc) mem) loc))
    (loc (s '%87 (shl-i32 (g '%86 loc) 20) loc))
    (loc (s '%88 (or-i32 (g '%85 loc) (g '%87 loc)) loc))
    (loc (s '%89 (bitcast-double*-to-i32* (g '%2 loc)) loc))
    (loc (s '%90 (getelementptr-i32 (g '%89 loc) 1) loc))
    (mem (store-i32 (g '%88 loc) (g '%90 loc) mem))
    (loc (s '%91 (load-double (g '%2 loc) mem) loc))
    (loc (s '%92 (fmul-double (g '%91 loc) #x3C90000000000000) loc))
    (mem (store-double (g '%92 loc) (g '%1 loc) mem))
    (succ '%93))
  (mv succ mem loc)))

(defruled @scalbn-%81-expand-bb
  (equal (@scalbn-%81-bb mem loc pred)
         (@scalbn-%81-rev mem loc pred))
  :enable (@scalbn-%81-bb @scalbn-%81-rev
    @scalbn-%82-rev
    @scalbn-%83-rev
    @scalbn-m81.1-rev
    @scalbn-%84-rev
    @scalbn-%85-rev
    @scalbn-%86-rev
    @scalbn-%87-rev
    @scalbn-%88-rev
    @scalbn-%89-rev
    @scalbn-%90-rev
    @scalbn-m81.2-rev
    @scalbn-%91-rev
    @scalbn-%92-rev
    @scalbn-m81.3-rev
    @scalbn-succ81-rev)
  :disable s-diff-s)

(defund @scalbn-%93-mem (s93)
  (car s93))
(defund @scalbn-%93-loc (s93)
  (cadr s93))
(defund @scalbn-%93-pred (s93)
  (caddr s93))
(defund @scalbn-%94-val (s93)
  (load-double (g '%1 (@scalbn-%93-loc s93)) (@scalbn-%93-mem s93)))
(defund @scalbn-%94-loc (s93)
  (s '%94 (@scalbn-%94-val s93) (@scalbn-%93-loc s93)))
(defund @scalbn-succ93-lab (s93)
  (declare (ignore s93))
  'ret)

(defund @scalbn-succ93-rev (mem loc pred)
  (declare (ignore pred))
  (mv 'ret mem loc))
(defund @scalbn-%94-rev (mem loc pred)
  (@scalbn-succ93-rev mem (s '%94 (load-double (g '%1 loc) mem) loc) pred))

(defund @scalbn-%93-rev (mem loc pred)
  (@scalbn-%94-rev mem loc pred))

(defund @scalbn-%93-bb (mem loc pred)
  (declare (ignore pred))
  (b* (
    (loc (s '%94 (load-double (g '%1 loc) mem) loc))
    (succ 'ret))
  (mv succ mem loc)))

(defruled @scalbn-%93-expand-bb
  (equal (@scalbn-%93-bb mem loc pred)
         (@scalbn-%93-rev mem loc pred))
  :enable (@scalbn-%93-bb @scalbn-%93-rev
    @scalbn-%94-rev
    @scalbn-succ93-rev)
  :disable s-diff-s)

(defund @scalbn-step (label mem loc pred)
  (case label
    (%0 (@scalbn-%0-bb mem loc pred))
    (%14 (@scalbn-%14-bb mem loc pred))
    (%20 (@scalbn-%20-bb mem loc pred))
    (%22 (@scalbn-%22-bb mem loc pred))
    (%34 (@scalbn-%34-bb mem loc pred))
    (%37 (@scalbn-%37-bb mem loc pred))
    (%38 (@scalbn-%38-bb mem loc pred))
    (%41 (@scalbn-%41-bb mem loc pred))
    (%45 (@scalbn-%45-bb mem loc pred))
    (%51 (@scalbn-%51-bb mem loc pred))
    (%55 (@scalbn-%55-bb mem loc pred))
    (%58 (@scalbn-%58-bb mem loc pred))
    (%67 (@scalbn-%67-bb mem loc pred))
    (%70 (@scalbn-%70-bb mem loc pred))
    (%73 (@scalbn-%73-bb mem loc pred))
    (%77 (@scalbn-%77-bb mem loc pred))
    (%81 (@scalbn-%81-bb mem loc pred))
    (%93 (@scalbn-%93-bb mem loc pred))
    (otherwise (mv nil mem loc))))

(defund @scalbn-steps (label mem loc pred n)
  (declare (xargs :measure (nfix n)))
  (if (equal label 'ret)
      (g '%94 loc)
    (if (zp n) nil
      (mv-let
        (new-label new-mem new-loc)
        (@scalbn-step label mem loc pred)
        (@scalbn-steps new-label new-mem new-loc label (1- n))))))

(defund @scalbn (%x %n)
  (declare (ignore %x %n))
   nil)
