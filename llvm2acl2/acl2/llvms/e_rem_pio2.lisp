(in-package "ACL2")
(include-book "../llvm")
(include-book "s_fabs")
(include-book "k_rem_pio2")

(defconst *__ieee754_rem_pio2-globals* '(
  (npio2_hw #x3ff921fb #x400921fb #x4012d97c #x401921fb #x401f6a7a #x4022d97c #x4025fdbb #x402921fb #x402c463a #x402f6a7a #x4031475c #x4032d97c #x40346b9c #x4035fdbb #x40378fdb #x403921fb #x403ab41b #x403c463a #x403dd85a #x403f6a7a #x40407e4c #x4041475c #x4042106c #x4042d97c #x4043a28c #x40446b9c #x404534ac #x4045fdbb #x4046c6cb #x40478fdb #x404858eb #x404921fb)
  (two_over_pi #x00a2f983 #x006e4e44 #x001529fc #x002757d1 #x00f534dd #x00c0db62 #x0095993c #x00439041 #x00fe5163 #x00abdebb #x00c561b7 #x00246e3a #x00424dd2 #x00e00649 #x002eea09 #x00d1921c #x00fe1deb #x001cb129 #x00a73ee8 #x008235f5 #x002ebb44 #x0084e99c #x007026b4 #x005f7e41 #x003991d6 #x00398353 #x0039f49c #x00845f8b #x00bdf928 #x003b1ff8 #x0097ffde #x0005980f #x00ef2f11 #x008b5a0a #x006d1f6d #x00367ecf #x0027cb09 #x00b74f46 #x003f669e #x005fea2d #x007527ba #x00c7ebe5 #x00f17b3d #x000739f7 #x008a5292 #x00ea6bfb #x005fb11f #x008d5d08 #x00560330 #x0046fc7b #x006babf0 #x00cfbc20 #x009af436 #x001da9e3 #x0091615e #x00e61b08 #x00659985 #x005f14a0 #x0068408d #x00ffd880 #x004d7327 #x00310606 #x001556ca #x0073a8c9 #x0060e27b #x00c08c6b)))

(defund @__ieee754_rem_pio2-%0-bb (mem loc)
  (b* (
    (mem (alloca-i32 'ret 1 mem))
    (mem (alloca-double 'x 1 mem))
    (mem (alloca-pointer 'y mem))
    (mem (alloca-double 'z 1 mem))
    (mem (alloca-double 'w 1 mem))
    (mem (alloca-double 't 1 mem))
    (mem (alloca-double 'r 1 mem))
    (mem (alloca-double 'fn 1 mem))
    (mem (alloca-double 'tx 3 mem))
    (mem (alloca-i32 'e0 1 mem))
    (mem (alloca-i32 'i 1 mem))
    (mem (alloca-i32 'j 1 mem))
    (mem (alloca-i32 'nx 1 mem))
    (mem (alloca-i32 'n 1 mem))
    (mem (alloca-i32 'ix 1 mem))
    (mem (alloca-i32 'hx 1 mem))
    (mem (store-double (g '%x loc) '(x . 0) mem))
    (mem (store-pointer (g '%y loc) '(y . 0) mem))
    (loc (s '%4 (bitcast-double*-to-i32* '(x . 0)) loc))
    (loc (s '%5 (getelementptr-i32 (g '%4 loc) 1) loc))
    (loc (s '%6 (load-i32 (g '%5 loc) mem) loc))
    (mem (store-i32 (g '%6 loc) '(hx . 0) mem))
    (loc (s '%7 (load-i32 '(hx . 0) mem) loc))
    (loc (s '%8 (and-i32 (g '%7 loc) 2147483647) loc))
    (mem (store-i32 (g '%8 loc) '(ix . 0) mem))
    (loc (s '%9 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%10 (icmp-sle-i32 (g '%9 loc) 1072243195) loc)))
  (case (g '%10 loc)
    (-1 (mv '@__ieee754_rem_pio2-%11-bb mem loc))
    ( 0 (mv '@__ieee754_rem_pio2-%17-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_rem_pio2-%11-bb (mem loc)
  (b* (
    (loc (s '%12 (load-double '(x . 0) mem) loc))
    (loc (s '%13 (load-pointer '(y . 0) mem) loc))
    (loc (s '%14 (getelementptr-double (g '%13 loc) 0) loc))
    (mem (store-double (g '%12 loc) (g '%14 loc) mem))
    (loc (s '%15 (load-pointer '(y . 0) mem) loc))
    (loc (s '%16 (getelementptr-double (g '%15 loc) 1) loc))
    (mem (store-double #x0000000000000000 (g '%16 loc) mem))
    (mem (store-i32 0 '(ret . 0) mem)))
  (mv '@__ieee754_rem_pio2-%308-bb mem loc)))

(defund @__ieee754_rem_pio2-%17-bb (mem loc)
  (b* (
    (loc (s '%18 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%19 (icmp-slt-i32 (g '%18 loc) 1073928572) loc)))
  (case (g '%19 loc)
    (-1 (mv '@__ieee754_rem_pio2-%20-bb mem loc))
    ( 0 (mv '@__ieee754_rem_pio2-%91-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_rem_pio2-%20-bb (mem loc)
  (b* (
    (loc (s '%21 (load-i32 '(hx . 0) mem) loc))
    (loc (s '%22 (icmp-sgt-i32 (g '%21 loc) 0) loc)))
  (case (g '%22 loc)
    (-1 (mv '@__ieee754_rem_pio2-%23-bb mem loc))
    ( 0 (mv '@__ieee754_rem_pio2-%57-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_rem_pio2-%23-bb (mem loc)
  (b* (
    (loc (s '%24 (load-double '(x . 0) mem) loc))
    (loc (s '%25 (fsub-double (g '%24 loc) #x3FF921FB54400000) loc))
    (mem (store-double (g '%25 loc) '(z . 0) mem))
    (loc (s '%26 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%27 (icmp-ne-i32 (g '%26 loc) 1073291771) loc)))
  (case (g '%27 loc)
    (-1 (mv '@__ieee754_rem_pio2-%28-bb mem loc))
    ( 0 (mv '@__ieee754_rem_pio2-%41-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_rem_pio2-%28-bb (mem loc)
  (b* (
    (loc (s '%29 (load-double '(z . 0) mem) loc))
    (loc (s '%30 (fsub-double (g '%29 loc) #x3DD0B4611A626331) loc))
    (loc (s '%31 (load-pointer '(y . 0) mem) loc))
    (loc (s '%32 (getelementptr-double (g '%31 loc) 0) loc))
    (mem (store-double (g '%30 loc) (g '%32 loc) mem))
    (loc (s '%33 (load-double '(z . 0) mem) loc))
    (loc (s '%34 (load-pointer '(y . 0) mem) loc))
    (loc (s '%35 (getelementptr-double (g '%34 loc) 0) loc))
    (loc (s '%36 (load-double (g '%35 loc) mem) loc))
    (loc (s '%37 (fsub-double (g '%33 loc) (g '%36 loc)) loc))
    (loc (s '%38 (fsub-double (g '%37 loc) #x3DD0B4611A626331) loc))
    (loc (s '%39 (load-pointer '(y . 0) mem) loc))
    (loc (s '%40 (getelementptr-double (g '%39 loc) 1) loc))
    (mem (store-double (g '%38 loc) (g '%40 loc) mem)))
  (mv '@__ieee754_rem_pio2-%56-bb mem loc)))

(defund @__ieee754_rem_pio2-%41-bb (mem loc)
  (b* (
    (loc (s '%42 (load-double '(z . 0) mem) loc))
    (loc (s '%43 (fsub-double (g '%42 loc) #x3DD0B4611A600000) loc))
    (mem (store-double (g '%43 loc) '(z . 0) mem))
    (loc (s '%44 (load-double '(z . 0) mem) loc))
    (loc (s '%45 (fsub-double (g '%44 loc) #x3BA3198A2E037073) loc))
    (loc (s '%46 (load-pointer '(y . 0) mem) loc))
    (loc (s '%47 (getelementptr-double (g '%46 loc) 0) loc))
    (mem (store-double (g '%45 loc) (g '%47 loc) mem))
    (loc (s '%48 (load-double '(z . 0) mem) loc))
    (loc (s '%49 (load-pointer '(y . 0) mem) loc))
    (loc (s '%50 (getelementptr-double (g '%49 loc) 0) loc))
    (loc (s '%51 (load-double (g '%50 loc) mem) loc))
    (loc (s '%52 (fsub-double (g '%48 loc) (g '%51 loc)) loc))
    (loc (s '%53 (fsub-double (g '%52 loc) #x3BA3198A2E037073) loc))
    (loc (s '%54 (load-pointer '(y . 0) mem) loc))
    (loc (s '%55 (getelementptr-double (g '%54 loc) 1) loc))
    (mem (store-double (g '%53 loc) (g '%55 loc) mem)))
  (mv '@__ieee754_rem_pio2-%56-bb mem loc)))

(defund @__ieee754_rem_pio2-%56-bb (mem loc)
  (b* (
    (mem (store-i32 1 '(ret . 0) mem)))
  (mv '@__ieee754_rem_pio2-%308-bb mem loc)))

(defund @__ieee754_rem_pio2-%57-bb (mem loc)
  (b* (
    (loc (s '%58 (load-double '(x . 0) mem) loc))
    (loc (s '%59 (fadd-double (g '%58 loc) #x3FF921FB54400000) loc))
    (mem (store-double (g '%59 loc) '(z . 0) mem))
    (loc (s '%60 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%61 (icmp-ne-i32 (g '%60 loc) 1073291771) loc)))
  (case (g '%61 loc)
    (-1 (mv '@__ieee754_rem_pio2-%62-bb mem loc))
    ( 0 (mv '@__ieee754_rem_pio2-%75-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_rem_pio2-%62-bb (mem loc)
  (b* (
    (loc (s '%63 (load-double '(z . 0) mem) loc))
    (loc (s '%64 (fadd-double (g '%63 loc) #x3DD0B4611A626331) loc))
    (loc (s '%65 (load-pointer '(y . 0) mem) loc))
    (loc (s '%66 (getelementptr-double (g '%65 loc) 0) loc))
    (mem (store-double (g '%64 loc) (g '%66 loc) mem))
    (loc (s '%67 (load-double '(z . 0) mem) loc))
    (loc (s '%68 (load-pointer '(y . 0) mem) loc))
    (loc (s '%69 (getelementptr-double (g '%68 loc) 0) loc))
    (loc (s '%70 (load-double (g '%69 loc) mem) loc))
    (loc (s '%71 (fsub-double (g '%67 loc) (g '%70 loc)) loc))
    (loc (s '%72 (fadd-double (g '%71 loc) #x3DD0B4611A626331) loc))
    (loc (s '%73 (load-pointer '(y . 0) mem) loc))
    (loc (s '%74 (getelementptr-double (g '%73 loc) 1) loc))
    (mem (store-double (g '%72 loc) (g '%74 loc) mem)))
  (mv '@__ieee754_rem_pio2-%90-bb mem loc)))

(defund @__ieee754_rem_pio2-%75-bb (mem loc)
  (b* (
    (loc (s '%76 (load-double '(z . 0) mem) loc))
    (loc (s '%77 (fadd-double (g '%76 loc) #x3DD0B4611A600000) loc))
    (mem (store-double (g '%77 loc) '(z . 0) mem))
    (loc (s '%78 (load-double '(z . 0) mem) loc))
    (loc (s '%79 (fadd-double (g '%78 loc) #x3BA3198A2E037073) loc))
    (loc (s '%80 (load-pointer '(y . 0) mem) loc))
    (loc (s '%81 (getelementptr-double (g '%80 loc) 0) loc))
    (mem (store-double (g '%79 loc) (g '%81 loc) mem))
    (loc (s '%82 (load-double '(z . 0) mem) loc))
    (loc (s '%83 (load-pointer '(y . 0) mem) loc))
    (loc (s '%84 (getelementptr-double (g '%83 loc) 0) loc))
    (loc (s '%85 (load-double (g '%84 loc) mem) loc))
    (loc (s '%86 (fsub-double (g '%82 loc) (g '%85 loc)) loc))
    (loc (s '%87 (fadd-double (g '%86 loc) #x3BA3198A2E037073) loc))
    (loc (s '%88 (load-pointer '(y . 0) mem) loc))
    (loc (s '%89 (getelementptr-double (g '%88 loc) 1) loc))
    (mem (store-double (g '%87 loc) (g '%89 loc) mem)))
  (mv '@__ieee754_rem_pio2-%90-bb mem loc)))

(defund @__ieee754_rem_pio2-%90-bb (mem loc)
  (b* (
    (mem (store-i32 -1 '(ret . 0) mem)))
  (mv '@__ieee754_rem_pio2-%308-bb mem loc)))

(defund @__ieee754_rem_pio2-%91-bb (mem loc)
  (b* (
    (loc (s '%92 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%93 (icmp-sle-i32 (g '%92 loc) 1094263291) loc)))
  (case (g '%93 loc)
    (-1 (mv '@__ieee754_rem_pio2-%94-bb mem loc))
    ( 0 (mv '@__ieee754_rem_pio2-%226-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_rem_pio2-%94-bb (mem loc)
  (b* (
    (loc (s '%95 (load-double '(x . 0) mem) loc))
    (loc (s '%96 (@fabs (g '%95 loc)) loc))
    (mem (store-double (g '%96 loc) '(t . 0) mem))
    (loc (s '%97 (load-double '(t . 0) mem) loc))
    (loc (s '%98 (fmul-double (g '%97 loc) #x3FE45F306DC9C883) loc))
    (loc (s '%99 (fadd-double (g '%98 loc) #x3fe0000000000000) loc))
    (loc (s '%100 (fptosi-double-to-i32 (g '%99 loc)) loc))
    (mem (store-i32 (g '%100 loc) '(n . 0) mem))
    (loc (s '%101 (load-i32 '(n . 0) mem) loc))
    (loc (s '%102 (sitofp-i32-to-double (g '%101 loc)) loc))
    (mem (store-double (g '%102 loc) '(fn . 0) mem))
    (loc (s '%103 (load-double '(t . 0) mem) loc))
    (loc (s '%104 (load-double '(fn . 0) mem) loc))
    (loc (s '%105 (fmul-double (g '%104 loc) #x3FF921FB54400000) loc))
    (loc (s '%106 (fsub-double (g '%103 loc) (g '%105 loc)) loc))
    (mem (store-double (g '%106 loc) '(r . 0) mem))
    (loc (s '%107 (load-double '(fn . 0) mem) loc))
    (loc (s '%108 (fmul-double (g '%107 loc) #x3DD0B4611A626331) loc))
    (mem (store-double (g '%108 loc) '(w . 0) mem))
    (loc (s '%109 (load-i32 '(n . 0) mem) loc))
    (loc (s '%110 (icmp-slt-i32 (g '%109 loc) 32) loc)))
  (case (g '%110 loc)
    (-1 (mv '@__ieee754_rem_pio2-%111-bb mem loc))
    ( 0 (mv '@__ieee754_rem_pio2-%125-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_rem_pio2-%111-bb (mem loc)
  (b* (
    (loc (s '%112 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%113 (load-i32 '(n . 0) mem) loc))
    (loc (s '%114 (sub-i32 (g '%113 loc) 1) loc))
    (loc (s '%115 (sext-i32-to-i64 (g '%114 loc)) loc))
    (loc (s '%116 (getelementptr-i32 '(npio2_hw . 0) (g '%115 loc)) loc))
    (loc (s '%117 (load-i32 (g '%116 loc) mem) loc))
    (loc (s '%118 (icmp-ne-i32 (g '%112 loc) (g '%117 loc)) loc)))
  (case (g '%118 loc)
    (-1 (mv '@__ieee754_rem_pio2-%119-bb mem loc))
    ( 0 (mv '@__ieee754_rem_pio2-%125-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_rem_pio2-%119-bb (mem loc)
  (b* (
    (loc (s '%120 (load-double '(r . 0) mem) loc))
    (loc (s '%121 (load-double '(w . 0) mem) loc))
    (loc (s '%122 (fsub-double (g '%120 loc) (g '%121 loc)) loc))
    (loc (s '%123 (load-pointer '(y . 0) mem) loc))
    (loc (s '%124 (getelementptr-double (g '%123 loc) 0) loc))
    (mem (store-double (g '%122 loc) (g '%124 loc) mem)))
  (mv '@__ieee754_rem_pio2-%197-bb mem loc)))

(defund @__ieee754_rem_pio2-%125-bb (mem loc)
  (b* (
    (loc (s '%126 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%127 (ashr-i32 (g '%126 loc) 20) loc))
    (mem (store-i32 (g '%127 loc) '(j . 0) mem))
    (loc (s '%128 (load-double '(r . 0) mem) loc))
    (loc (s '%129 (load-double '(w . 0) mem) loc))
    (loc (s '%130 (fsub-double (g '%128 loc) (g '%129 loc)) loc))
    (loc (s '%131 (load-pointer '(y . 0) mem) loc))
    (loc (s '%132 (getelementptr-double (g '%131 loc) 0) loc))
    (mem (store-double (g '%130 loc) (g '%132 loc) mem))
    (loc (s '%133 (load-i32 '(j . 0) mem) loc))
    (loc (s '%134 (load-pointer '(y . 0) mem) loc))
    (loc (s '%135 (getelementptr-double (g '%134 loc) 0) loc))
    (loc (s '%136 (bitcast-double*-to-i32* (g '%135 loc)) loc))
    (loc (s '%137 (getelementptr-i32 (g '%136 loc) 1) loc))
    (loc (s '%138 (load-i32 (g '%137 loc) mem) loc))
    (loc (s '%139 (ashr-i32 (g '%138 loc) 20) loc))
    (loc (s '%140 (and-i32 (g '%139 loc) 2047) loc))
    (loc (s '%141 (sub-i32 (g '%133 loc) (g '%140 loc)) loc))
    (mem (store-i32 (g '%141 loc) '(i . 0) mem))
    (loc (s '%142 (load-i32 '(i . 0) mem) loc))
    (loc (s '%143 (icmp-sgt-i32 (g '%142 loc) 16) loc)))
  (case (g '%143 loc)
    (-1 (mv '@__ieee754_rem_pio2-%144-bb mem loc))
    ( 0 (mv '@__ieee754_rem_pio2-%196-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_rem_pio2-%144-bb (mem loc)
  (b* (
    (loc (s '%145 (load-double '(r . 0) mem) loc))
    (mem (store-double (g '%145 loc) '(t . 0) mem))
    (loc (s '%146 (load-double '(fn . 0) mem) loc))
    (loc (s '%147 (fmul-double (g '%146 loc) #x3DD0B4611A600000) loc))
    (mem (store-double (g '%147 loc) '(w . 0) mem))
    (loc (s '%148 (load-double '(t . 0) mem) loc))
    (loc (s '%149 (load-double '(w . 0) mem) loc))
    (loc (s '%150 (fsub-double (g '%148 loc) (g '%149 loc)) loc))
    (mem (store-double (g '%150 loc) '(r . 0) mem))
    (loc (s '%151 (load-double '(fn . 0) mem) loc))
    (loc (s '%152 (fmul-double (g '%151 loc) #x3BA3198A2E037073) loc))
    (loc (s '%153 (load-double '(t . 0) mem) loc))
    (loc (s '%154 (load-double '(r . 0) mem) loc))
    (loc (s '%155 (fsub-double (g '%153 loc) (g '%154 loc)) loc))
    (loc (s '%156 (load-double '(w . 0) mem) loc))
    (loc (s '%157 (fsub-double (g '%155 loc) (g '%156 loc)) loc))
    (loc (s '%158 (fsub-double (g '%152 loc) (g '%157 loc)) loc))
    (mem (store-double (g '%158 loc) '(w . 0) mem))
    (loc (s '%159 (load-double '(r . 0) mem) loc))
    (loc (s '%160 (load-double '(w . 0) mem) loc))
    (loc (s '%161 (fsub-double (g '%159 loc) (g '%160 loc)) loc))
    (loc (s '%162 (load-pointer '(y . 0) mem) loc))
    (loc (s '%163 (getelementptr-double (g '%162 loc) 0) loc))
    (mem (store-double (g '%161 loc) (g '%163 loc) mem))
    (loc (s '%164 (load-i32 '(j . 0) mem) loc))
    (loc (s '%165 (load-pointer '(y . 0) mem) loc))
    (loc (s '%166 (getelementptr-double (g '%165 loc) 0) loc))
    (loc (s '%167 (bitcast-double*-to-i32* (g '%166 loc)) loc))
    (loc (s '%168 (getelementptr-i32 (g '%167 loc) 1) loc))
    (loc (s '%169 (load-i32 (g '%168 loc) mem) loc))
    (loc (s '%170 (ashr-i32 (g '%169 loc) 20) loc))
    (loc (s '%171 (and-i32 (g '%170 loc) 2047) loc))
    (loc (s '%172 (sub-i32 (g '%164 loc) (g '%171 loc)) loc))
    (mem (store-i32 (g '%172 loc) '(i . 0) mem))
    (loc (s '%173 (load-i32 '(i . 0) mem) loc))
    (loc (s '%174 (icmp-sgt-i32 (g '%173 loc) 49) loc)))
  (case (g '%174 loc)
    (-1 (mv '@__ieee754_rem_pio2-%175-bb mem loc))
    ( 0 (mv '@__ieee754_rem_pio2-%195-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_rem_pio2-%175-bb (mem loc)
  (b* (
    (loc (s '%176 (load-double '(r . 0) mem) loc))
    (mem (store-double (g '%176 loc) '(t . 0) mem))
    (loc (s '%177 (load-double '(fn . 0) mem) loc))
    (loc (s '%178 (fmul-double (g '%177 loc) #x3BA3198A2E000000) loc))
    (mem (store-double (g '%178 loc) '(w . 0) mem))
    (loc (s '%179 (load-double '(t . 0) mem) loc))
    (loc (s '%180 (load-double '(w . 0) mem) loc))
    (loc (s '%181 (fsub-double (g '%179 loc) (g '%180 loc)) loc))
    (mem (store-double (g '%181 loc) '(r . 0) mem))
    (loc (s '%182 (load-double '(fn . 0) mem) loc))
    (loc (s '%183 (fmul-double (g '%182 loc) #x397B839A252049C1) loc))
    (loc (s '%184 (load-double '(t . 0) mem) loc))
    (loc (s '%185 (load-double '(r . 0) mem) loc))
    (loc (s '%186 (fsub-double (g '%184 loc) (g '%185 loc)) loc))
    (loc (s '%187 (load-double '(w . 0) mem) loc))
    (loc (s '%188 (fsub-double (g '%186 loc) (g '%187 loc)) loc))
    (loc (s '%189 (fsub-double (g '%183 loc) (g '%188 loc)) loc))
    (mem (store-double (g '%189 loc) '(w . 0) mem))
    (loc (s '%190 (load-double '(r . 0) mem) loc))
    (loc (s '%191 (load-double '(w . 0) mem) loc))
    (loc (s '%192 (fsub-double (g '%190 loc) (g '%191 loc)) loc))
    (loc (s '%193 (load-pointer '(y . 0) mem) loc))
    (loc (s '%194 (getelementptr-double (g '%193 loc) 0) loc))
    (mem (store-double (g '%192 loc) (g '%194 loc) mem)))
  (mv '@__ieee754_rem_pio2-%195-bb mem loc)))

(defund @__ieee754_rem_pio2-%195-bb (mem loc)
  (b* ()
  (mv '@__ieee754_rem_pio2-%196-bb mem loc)))

(defund @__ieee754_rem_pio2-%196-bb (mem loc)
  (b* ()
  (mv '@__ieee754_rem_pio2-%197-bb mem loc)))

(defund @__ieee754_rem_pio2-%197-bb (mem loc)
  (b* (
    (loc (s '%198 (load-double '(r . 0) mem) loc))
    (loc (s '%199 (load-pointer '(y . 0) mem) loc))
    (loc (s '%200 (getelementptr-double (g '%199 loc) 0) loc))
    (loc (s '%201 (load-double (g '%200 loc) mem) loc))
    (loc (s '%202 (fsub-double (g '%198 loc) (g '%201 loc)) loc))
    (loc (s '%203 (load-double '(w . 0) mem) loc))
    (loc (s '%204 (fsub-double (g '%202 loc) (g '%203 loc)) loc))
    (loc (s '%205 (load-pointer '(y . 0) mem) loc))
    (loc (s '%206 (getelementptr-double (g '%205 loc) 1) loc))
    (mem (store-double (g '%204 loc) (g '%206 loc) mem))
    (loc (s '%207 (load-i32 '(hx . 0) mem) loc))
    (loc (s '%208 (icmp-slt-i32 (g '%207 loc) 0) loc)))
  (case (g '%208 loc)
    (-1 (mv '@__ieee754_rem_pio2-%209-bb mem loc))
    ( 0 (mv '@__ieee754_rem_pio2-%224-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_rem_pio2-%209-bb (mem loc)
  (b* (
    (loc (s '%210 (load-pointer '(y . 0) mem) loc))
    (loc (s '%211 (getelementptr-double (g '%210 loc) 0) loc))
    (loc (s '%212 (load-double (g '%211 loc) mem) loc))
    (loc (s '%213 (fsub-double #x8000000000000000 (g '%212 loc)) loc))
    (loc (s '%214 (load-pointer '(y . 0) mem) loc))
    (loc (s '%215 (getelementptr-double (g '%214 loc) 0) loc))
    (mem (store-double (g '%213 loc) (g '%215 loc) mem))
    (loc (s '%216 (load-pointer '(y . 0) mem) loc))
    (loc (s '%217 (getelementptr-double (g '%216 loc) 1) loc))
    (loc (s '%218 (load-double (g '%217 loc) mem) loc))
    (loc (s '%219 (fsub-double #x8000000000000000 (g '%218 loc)) loc))
    (loc (s '%220 (load-pointer '(y . 0) mem) loc))
    (loc (s '%221 (getelementptr-double (g '%220 loc) 1) loc))
    (mem (store-double (g '%219 loc) (g '%221 loc) mem))
    (loc (s '%222 (load-i32 '(n . 0) mem) loc))
    (loc (s '%223 (sub-i32 0 (g '%222 loc)) loc))
    (mem (store-i32 (g '%223 loc) '(ret . 0) mem)))
  (mv '@__ieee754_rem_pio2-%308-bb mem loc)))

(defund @__ieee754_rem_pio2-%224-bb (mem loc)
  (b* (
    (loc (s '%225 (load-i32 '(n . 0) mem) loc))
    (mem (store-i32 (g '%225 loc) '(ret . 0) mem)))
  (mv '@__ieee754_rem_pio2-%308-bb mem loc)))

(defund @__ieee754_rem_pio2-%226-bb (mem loc)
  (b* (
    (loc (s '%227 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%228 (icmp-sge-i32 (g '%227 loc) 2146435072) loc)))
  (case (g '%228 loc)
    (-1 (mv '@__ieee754_rem_pio2-%229-bb mem loc))
    ( 0 (mv '@__ieee754_rem_pio2-%237-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_rem_pio2-%229-bb (mem loc)
  (b* (
    (loc (s '%230 (load-double '(x . 0) mem) loc))
    (loc (s '%231 (load-double '(x . 0) mem) loc))
    (loc (s '%232 (fsub-double (g '%230 loc) (g '%231 loc)) loc))
    (loc (s '%233 (load-pointer '(y . 0) mem) loc))
    (loc (s '%234 (getelementptr-double (g '%233 loc) 1) loc))
    (mem (store-double (g '%232 loc) (g '%234 loc) mem))
    (loc (s '%235 (load-pointer '(y . 0) mem) loc))
    (loc (s '%236 (getelementptr-double (g '%235 loc) 0) loc))
    (mem (store-double (g '%232 loc) (g '%236 loc) mem))
    (mem (store-i32 0 '(ret . 0) mem)))
  (mv '@__ieee754_rem_pio2-%308-bb mem loc)))

(defund @__ieee754_rem_pio2-%237-bb (mem loc)
  (b* (
    (loc (s '%238 (bitcast-double*-to-i32* '(x . 0)) loc))
    (loc (s '%239 (load-i32 (g '%238 loc) mem) loc))
    (loc (s '%240 (bitcast-double*-to-i32* '(z . 0)) loc))
    (mem (store-i32 (g '%239 loc) (g '%240 loc) mem))
    (loc (s '%241 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%242 (ashr-i32 (g '%241 loc) 20) loc))
    (loc (s '%243 (sub-i32 (g '%242 loc) 1046) loc))
    (mem (store-i32 (g '%243 loc) '(e0 . 0) mem))
    (loc (s '%244 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%245 (load-i32 '(e0 . 0) mem) loc))
    (loc (s '%246 (shl-i32 (g '%245 loc) 20) loc))
    (loc (s '%247 (sub-i32 (g '%244 loc) (g '%246 loc)) loc))
    (loc (s '%248 (bitcast-double*-to-i32* '(z . 0)) loc))
    (loc (s '%249 (getelementptr-i32 (g '%248 loc) 1) loc))
    (mem (store-i32 (g '%247 loc) (g '%249 loc) mem))
    (mem (store-i32 0 '(i . 0) mem)))
  (mv '@__ieee754_rem_pio2-%250-bb mem loc)))

(defund @__ieee754_rem_pio2-%250-bb (mem loc)
  (b* (
    (loc (s '%251 (load-i32 '(i . 0) mem) loc))
    (loc (s '%252 (icmp-slt-i32 (g '%251 loc) 2) loc)))
  (case (g '%252 loc)
    (-1 (mv '@__ieee754_rem_pio2-%253-bb mem loc))
    ( 0 (mv '@__ieee754_rem_pio2-%270-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_rem_pio2-%253-bb (mem loc)
  (b* (
    (loc (s '%254 (load-double '(z . 0) mem) loc))
    (loc (s '%255 (fptosi-double-to-i32 (g '%254 loc)) loc))
    (loc (s '%256 (sitofp-i32-to-double (g '%255 loc)) loc))
    (loc (s '%257 (load-i32 '(i . 0) mem) loc))
    (loc (s '%258 (sext-i32-to-i64 (g '%257 loc)) loc))
    (loc (s '%259 (getelementptr-double '(tx . 0) (g '%258 loc)) loc))
    (mem (store-double (g '%256 loc) (g '%259 loc) mem))
    (loc (s '%260 (load-double '(z . 0) mem) loc))
    (loc (s '%261 (load-i32 '(i . 0) mem) loc))
    (loc (s '%262 (sext-i32-to-i64 (g '%261 loc)) loc))
    (loc (s '%263 (getelementptr-double '(tx . 0) (g '%262 loc)) loc))
    (loc (s '%264 (load-double (g '%263 loc) mem) loc))
    (loc (s '%265 (fsub-double (g '%260 loc) (g '%264 loc)) loc))
    (loc (s '%266 (fmul-double (g '%265 loc) #x4170000000000000) loc))
    (mem (store-double (g '%266 loc) '(z . 0) mem)))
  (mv '@__ieee754_rem_pio2-%267-bb mem loc)))

(defund @__ieee754_rem_pio2-%267-bb (mem loc)
  (b* (
    (loc (s '%268 (load-i32 '(i . 0) mem) loc))
    (loc (s '%269 (add-i32 (g '%268 loc) 1) loc))
    (mem (store-i32 (g '%269 loc) '(i . 0) mem)))
  (mv '@__ieee754_rem_pio2-%250-bb mem loc)))

(defund @__ieee754_rem_pio2-%270-bb (mem loc)
  (b* (
    (loc (s '%271 (load-double '(z . 0) mem) loc))
    (loc (s '%272 (getelementptr-double '(tx . 0) 2) loc))
    (mem (store-double (g '%271 loc) (g '%272 loc) mem))
    (mem (store-i32 3 '(nx . 0) mem)))
  (mv '@__ieee754_rem_pio2-%273-bb mem loc)))

(defund @__ieee754_rem_pio2-%273-bb (mem loc)
  (b* (
    (loc (s '%274 (load-i32 '(nx . 0) mem) loc))
    (loc (s '%275 (sub-i32 (g '%274 loc) 1) loc))
    (loc (s '%276 (sext-i32-to-i64 (g '%275 loc)) loc))
    (loc (s '%277 (getelementptr-double '(tx . 0) (g '%276 loc)) loc))
    (loc (s '%278 (load-double (g '%277 loc) mem) loc))
    (loc (s '%279 (fcmp-oeq-double (g '%278 loc) #x0000000000000000) loc)))
  (case (g '%279 loc)
    (-1 (mv '@__ieee754_rem_pio2-%280-bb mem loc))
    ( 0 (mv '@__ieee754_rem_pio2-%283-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_rem_pio2-%280-bb (mem loc)
  (b* (
    (loc (s '%281 (load-i32 '(nx . 0) mem) loc))
    (loc (s '%282 (add-i32 (g '%281 loc) -1) loc))
    (mem (store-i32 (g '%282 loc) '(nx . 0) mem)))
  (mv '@__ieee754_rem_pio2-%273-bb mem loc)))

(defund @__ieee754_rem_pio2-%283-bb (mem loc)
  (b* (
    (loc (s '%284 (getelementptr-double '(tx . 0) 0) loc))
    (loc (s '%285 (load-pointer '(y . 0) mem) loc))
    (loc (s '%286 (load-i32 '(e0 . 0) mem) loc))
    (loc (s '%287 (load-i32 '(nx . 0) mem) loc))
    (loc (s '%288 (@__kernel_rem_pio2 (g '%284 loc) (g '%285 loc) (g '%286 loc) (g '%287 loc) 2 '(two_over_pi . 0)) loc))
    (mem (store-i32 (g '%288 loc) '(n . 0) mem))
    (loc (s '%289 (load-i32 '(hx . 0) mem) loc))
    (loc (s '%290 (icmp-slt-i32 (g '%289 loc) 0) loc)))
  (case (g '%290 loc)
    (-1 (mv '@__ieee754_rem_pio2-%291-bb mem loc))
    ( 0 (mv '@__ieee754_rem_pio2-%306-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_rem_pio2-%291-bb (mem loc)
  (b* (
    (loc (s '%292 (load-pointer '(y . 0) mem) loc))
    (loc (s '%293 (getelementptr-double (g '%292 loc) 0) loc))
    (loc (s '%294 (load-double (g '%293 loc) mem) loc))
    (loc (s '%295 (fsub-double #x8000000000000000 (g '%294 loc)) loc))
    (loc (s '%296 (load-pointer '(y . 0) mem) loc))
    (loc (s '%297 (getelementptr-double (g '%296 loc) 0) loc))
    (mem (store-double (g '%295 loc) (g '%297 loc) mem))
    (loc (s '%298 (load-pointer '(y . 0) mem) loc))
    (loc (s '%299 (getelementptr-double (g '%298 loc) 1) loc))
    (loc (s '%300 (load-double (g '%299 loc) mem) loc))
    (loc (s '%301 (fsub-double #x8000000000000000 (g '%300 loc)) loc))
    (loc (s '%302 (load-pointer '(y . 0) mem) loc))
    (loc (s '%303 (getelementptr-double (g '%302 loc) 1) loc))
    (mem (store-double (g '%301 loc) (g '%303 loc) mem))
    (loc (s '%304 (load-i32 '(n . 0) mem) loc))
    (loc (s '%305 (sub-i32 0 (g '%304 loc)) loc))
    (mem (store-i32 (g '%305 loc) '(ret . 0) mem)))
  (mv '@__ieee754_rem_pio2-%308-bb mem loc)))

(defund @__ieee754_rem_pio2-%306-bb (mem loc)
  (b* (
    (loc (s '%307 (load-i32 '(n . 0) mem) loc))
    (mem (store-i32 (g '%307 loc) '(ret . 0) mem)))
  (mv '@__ieee754_rem_pio2-%308-bb mem loc)))

(defund @__ieee754_rem_pio2-%308-bb (mem loc)
  (b* (
    (loc (s '%309 (load-i32 '(ret . 0) mem) loc)))
  (mv 'ret mem loc)))

(defund @__ieee754_rem_pio2-step (label mem loc)
  (case label
    (%-0 (@__ieee754_rem_pio2-%0-bb mem loc))
    (%-11 (@__ieee754_rem_pio2-%11-bb mem loc))
    (%-17 (@__ieee754_rem_pio2-%17-bb mem loc))
    (%-20 (@__ieee754_rem_pio2-%20-bb mem loc))
    (%-23 (@__ieee754_rem_pio2-%23-bb mem loc))
    (%-28 (@__ieee754_rem_pio2-%28-bb mem loc))
    (%-41 (@__ieee754_rem_pio2-%41-bb mem loc))
    (%-56 (@__ieee754_rem_pio2-%56-bb mem loc))
    (%-57 (@__ieee754_rem_pio2-%57-bb mem loc))
    (%-62 (@__ieee754_rem_pio2-%62-bb mem loc))
    (%-75 (@__ieee754_rem_pio2-%75-bb mem loc))
    (%-90 (@__ieee754_rem_pio2-%90-bb mem loc))
    (%-91 (@__ieee754_rem_pio2-%91-bb mem loc))
    (%-94 (@__ieee754_rem_pio2-%94-bb mem loc))
    (%-111 (@__ieee754_rem_pio2-%111-bb mem loc))
    (%-119 (@__ieee754_rem_pio2-%119-bb mem loc))
    (%-125 (@__ieee754_rem_pio2-%125-bb mem loc))
    (%-144 (@__ieee754_rem_pio2-%144-bb mem loc))
    (%-175 (@__ieee754_rem_pio2-%175-bb mem loc))
    (%-195 (@__ieee754_rem_pio2-%195-bb mem loc))
    (%-196 (@__ieee754_rem_pio2-%196-bb mem loc))
    (%-197 (@__ieee754_rem_pio2-%197-bb mem loc))
    (%-209 (@__ieee754_rem_pio2-%209-bb mem loc))
    (%-224 (@__ieee754_rem_pio2-%224-bb mem loc))
    (%-226 (@__ieee754_rem_pio2-%226-bb mem loc))
    (%-229 (@__ieee754_rem_pio2-%229-bb mem loc))
    (%-237 (@__ieee754_rem_pio2-%237-bb mem loc))
    (%-250 (@__ieee754_rem_pio2-%250-bb mem loc))
    (%-253 (@__ieee754_rem_pio2-%253-bb mem loc))
    (%-267 (@__ieee754_rem_pio2-%267-bb mem loc))
    (%-270 (@__ieee754_rem_pio2-%270-bb mem loc))
    (%-273 (@__ieee754_rem_pio2-%273-bb mem loc))
    (%-280 (@__ieee754_rem_pio2-%280-bb mem loc))
    (%-283 (@__ieee754_rem_pio2-%283-bb mem loc))
    (%-291 (@__ieee754_rem_pio2-%291-bb mem loc))
    (%-306 (@__ieee754_rem_pio2-%306-bb mem loc))
    (%-308 (@__ieee754_rem_pio2-%308-bb mem loc))
    (otherwise (mv nil mem loc))))

(defund @__ieee754_rem_pio2-steps (label mem loc n)
  (declare (xargs :measure (nfix n)))
  (if (equal label 'ret)
      (g '%309 loc)
    (if (zp n) nil
      (mv-let
        (label mem loc)
        (@__ieee754_rem_pio2-step label mem loc)
        (@__ieee754_rem_pio2-steps label mem loc (1- n))))))

(defund @__ieee754_rem_pio2 (%x %y)
  (declare (ignore %x %y))
   nil)
