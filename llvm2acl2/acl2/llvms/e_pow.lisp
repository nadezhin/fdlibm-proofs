(in-package "ACL2")
(include-book "../llvm")
(include-book "w_sqrt")
(include-book "s_fabs")
(include-book "s_scalbn")

(defconst *__ieee754_pow-globals* '(
  (one #x00000000 #x3ff00000)
  (bp #x00000000 #x3ff00000 #x00000000 #x3ff80000)
  (dp_l #x00000000 #x00000000 #x43cfd006 #x3e4cfdeb)
  (dp_h #x00000000 #x00000000 #x40000000 #x3fe2b803)))

(defund @__ieee754_pow-%0-bb (mem loc)
  (b* (
    (mem (alloca-double 'ret 1 mem))
    (mem (alloca-double 'x 1 mem))
    (mem (alloca-double 'y 1 mem))
    (mem (alloca-double 'z 1 mem))
    (mem (alloca-double 'ax 1 mem))
    (mem (alloca-double 'z_h 1 mem))
    (mem (alloca-double 'z_l 1 mem))
    (mem (alloca-double 'p_h 1 mem))
    (mem (alloca-double 'p_l 1 mem))
    (mem (alloca-double 'y1 1 mem))
    (mem (alloca-double 't1 1 mem))
    (mem (alloca-double 't2 1 mem))
    (mem (alloca-double 'r 1 mem))
    (mem (alloca-double 's 1 mem))
    (mem (alloca-double 't 1 mem))
    (mem (alloca-double 'u 1 mem))
    (mem (alloca-double 'v 1 mem))
    (mem (alloca-double 'w 1 mem))
    (mem (alloca-i32 'i0 1 mem))
    (mem (alloca-i32 'i1 1 mem))
    (mem (alloca-i32 'i 1 mem))
    (mem (alloca-i32 'j 1 mem))
    (mem (alloca-i32 'k 1 mem))
    (mem (alloca-i32 'yisint 1 mem))
    (mem (alloca-i32 'n 1 mem))
    (mem (alloca-i32 'hx 1 mem))
    (mem (alloca-i32 'hy 1 mem))
    (mem (alloca-i32 'ix 1 mem))
    (mem (alloca-i32 'iy 1 mem))
    (mem (alloca-i32 'lx 1 mem))
    (mem (alloca-i32 'ly 1 mem))
    (mem (alloca-double 'ss 1 mem))
    (mem (alloca-double 's2 1 mem))
    (mem (alloca-double 's_h 1 mem))
    (mem (alloca-double 's_l 1 mem))
    (mem (alloca-double 't_h 1 mem))
    (mem (alloca-double 't_l 1 mem))
    (mem (store-double (g '%x loc) '(x . 0) mem))
    (mem (store-double (g '%y loc) '(y . 0) mem))
    (loc (s '%4 (load-i32 '(one . 0) mem) loc))
    (loc (s '%5 (ashr-i32 (g '%4 loc) 29) loc))
    (loc (s '%6 (xor-i32 (g '%5 loc) 1) loc))
    (mem (store-i32 (g '%6 loc) '(i0 . 0) mem))
    (loc (s '%7 (load-i32 '(i0 . 0) mem) loc))
    (loc (s '%8 (sub-i32 1 (g '%7 loc)) loc))
    (mem (store-i32 (g '%8 loc) '(i1 . 0) mem))
    (loc (s '%9 (bitcast-double*-to-i32* '(x . 0)) loc))
    (loc (s '%10 (getelementptr-i32 (g '%9 loc) 1) loc))
    (loc (s '%11 (load-i32 (g '%10 loc) mem) loc))
    (mem (store-i32 (g '%11 loc) '(hx . 0) mem))
    (loc (s '%12 (bitcast-double*-to-i32* '(x . 0)) loc))
    (loc (s '%13 (load-i32 (g '%12 loc) mem) loc))
    (mem (store-i32 (g '%13 loc) '(lx . 0) mem))
    (loc (s '%14 (bitcast-double*-to-i32* '(y . 0)) loc))
    (loc (s '%15 (getelementptr-i32 (g '%14 loc) 1) loc))
    (loc (s '%16 (load-i32 (g '%15 loc) mem) loc))
    (mem (store-i32 (g '%16 loc) '(hy . 0) mem))
    (loc (s '%17 (bitcast-double*-to-i32* '(y . 0)) loc))
    (loc (s '%18 (load-i32 (g '%17 loc) mem) loc))
    (mem (store-i32 (g '%18 loc) '(ly . 0) mem))
    (loc (s '%19 (load-i32 '(hx . 0) mem) loc))
    (loc (s '%20 (and-i32 (g '%19 loc) 2147483647) loc))
    (mem (store-i32 (g '%20 loc) '(ix . 0) mem))
    (loc (s '%21 (load-i32 '(hy . 0) mem) loc))
    (loc (s '%22 (and-i32 (g '%21 loc) 2147483647) loc))
    (mem (store-i32 (g '%22 loc) '(iy . 0) mem))
    (loc (s '%23 (load-i32 '(iy . 0) mem) loc))
    (loc (s '%24 (load-i32 '(ly . 0) mem) loc))
    (loc (s '%25 (or-i32 (g '%23 loc) (g '%24 loc)) loc))
    (loc (s '%26 (icmp-eq-i32 (g '%25 loc) 0) loc)))
  (case (g '%26 loc)
    (-1 (mv '@__ieee754_pow-%27-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%28-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%27-bb (mem loc)
  (b* (
    (mem (store-double #x3ff0000000000000 '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%28-bb (mem loc)
  (b* (
    (loc (s '%29 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%30 (icmp-sgt-i32 (g '%29 loc) 2146435072) loc)))
  (case (g '%30 loc)
    (-1 (mv '@__ieee754_pow-%46-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%31-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%31-bb (mem loc)
  (b* (
    (loc (s '%32 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%33 (icmp-eq-i32 (g '%32 loc) 2146435072) loc)))
  (case (g '%33 loc)
    (-1 (mv '@__ieee754_pow-%34-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%37-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%34-bb (mem loc)
  (b* (
    (loc (s '%35 (load-i32 '(lx . 0) mem) loc))
    (loc (s '%36 (icmp-ne-i32 (g '%35 loc) 0) loc)))
  (case (g '%36 loc)
    (-1 (mv '@__ieee754_pow-%46-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%37-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%37-bb (mem loc)
  (b* (
    (loc (s '%38 (load-i32 '(iy . 0) mem) loc))
    (loc (s '%39 (icmp-sgt-i32 (g '%38 loc) 2146435072) loc)))
  (case (g '%39 loc)
    (-1 (mv '@__ieee754_pow-%46-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%40-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%40-bb (mem loc)
  (b* (
    (loc (s '%41 (load-i32 '(iy . 0) mem) loc))
    (loc (s '%42 (icmp-eq-i32 (g '%41 loc) 2146435072) loc)))
  (case (g '%42 loc)
    (-1 (mv '@__ieee754_pow-%43-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%50-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%43-bb (mem loc)
  (b* (
    (loc (s '%44 (load-i32 '(ly . 0) mem) loc))
    (loc (s '%45 (icmp-ne-i32 (g '%44 loc) 0) loc)))
  (case (g '%45 loc)
    (-1 (mv '@__ieee754_pow-%46-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%50-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%46-bb (mem loc)
  (b* (
    (loc (s '%47 (load-double '(x . 0) mem) loc))
    (loc (s '%48 (load-double '(y . 0) mem) loc))
    (loc (s '%49 (fadd-double (g '%47 loc) (g '%48 loc)) loc))
    (mem (store-double (g '%49 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%50-bb (mem loc)
  (b* (
    (mem (store-i32 0 '(yisint . 0) mem))
    (loc (s '%51 (load-i32 '(hx . 0) mem) loc))
    (loc (s '%52 (icmp-slt-i32 (g '%51 loc) 0) loc)))
  (case (g '%52 loc)
    (-1 (mv '@__ieee754_pow-%53-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%105-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%53-bb (mem loc)
  (b* (
    (loc (s '%54 (load-i32 '(iy . 0) mem) loc))
    (loc (s '%55 (icmp-sge-i32 (g '%54 loc) 1128267776) loc)))
  (case (g '%55 loc)
    (-1 (mv '@__ieee754_pow-%56-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%57-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%56-bb (mem loc)
  (b* (
    (mem (store-i32 2 '(yisint . 0) mem)))
  (mv '@__ieee754_pow-%104-bb mem loc)))

(defund @__ieee754_pow-%57-bb (mem loc)
  (b* (
    (loc (s '%58 (load-i32 '(iy . 0) mem) loc))
    (loc (s '%59 (icmp-sge-i32 (g '%58 loc) 1072693248) loc)))
  (case (g '%59 loc)
    (-1 (mv '@__ieee754_pow-%60-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%103-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%60-bb (mem loc)
  (b* (
    (loc (s '%61 (load-i32 '(iy . 0) mem) loc))
    (loc (s '%62 (ashr-i32 (g '%61 loc) 20) loc))
    (loc (s '%63 (sub-i32 (g '%62 loc) 1023) loc))
    (mem (store-i32 (g '%63 loc) '(k . 0) mem))
    (loc (s '%64 (load-i32 '(k . 0) mem) loc))
    (loc (s '%65 (icmp-sgt-i32 (g '%64 loc) 20) loc)))
  (case (g '%65 loc)
    (-1 (mv '@__ieee754_pow-%66-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%82-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%66-bb (mem loc)
  (b* (
    (loc (s '%67 (load-i32 '(ly . 0) mem) loc))
    (loc (s '%68 (load-i32 '(k . 0) mem) loc))
    (loc (s '%69 (sub-i32 52 (g '%68 loc)) loc))
    (loc (s '%70 (lshr-i32 (g '%67 loc) (g '%69 loc)) loc))
    (mem (store-i32 (g '%70 loc) '(j . 0) mem))
    (loc (s '%71 (load-i32 '(j . 0) mem) loc))
    (loc (s '%72 (load-i32 '(k . 0) mem) loc))
    (loc (s '%73 (sub-i32 52 (g '%72 loc)) loc))
    (loc (s '%74 (shl-i32 (g '%71 loc) (g '%73 loc)) loc))
    (loc (s '%75 (load-i32 '(ly . 0) mem) loc))
    (loc (s '%76 (icmp-eq-i32 (g '%74 loc) (g '%75 loc)) loc)))
  (case (g '%76 loc)
    (-1 (mv '@__ieee754_pow-%77-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%81-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%77-bb (mem loc)
  (b* (
    (loc (s '%78 (load-i32 '(j . 0) mem) loc))
    (loc (s '%79 (and-i32 (g '%78 loc) 1) loc))
    (loc (s '%80 (sub-i32 2 (g '%79 loc)) loc))
    (mem (store-i32 (g '%80 loc) '(yisint . 0) mem)))
  (mv '@__ieee754_pow-%81-bb mem loc)))

(defund @__ieee754_pow-%81-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%102-bb mem loc)))

(defund @__ieee754_pow-%82-bb (mem loc)
  (b* (
    (loc (s '%83 (load-i32 '(ly . 0) mem) loc))
    (loc (s '%84 (icmp-eq-i32 (g '%83 loc) 0) loc)))
  (case (g '%84 loc)
    (-1 (mv '@__ieee754_pow-%85-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%101-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%85-bb (mem loc)
  (b* (
    (loc (s '%86 (load-i32 '(iy . 0) mem) loc))
    (loc (s '%87 (load-i32 '(k . 0) mem) loc))
    (loc (s '%88 (sub-i32 20 (g '%87 loc)) loc))
    (loc (s '%89 (ashr-i32 (g '%86 loc) (g '%88 loc)) loc))
    (mem (store-i32 (g '%89 loc) '(j . 0) mem))
    (loc (s '%90 (load-i32 '(j . 0) mem) loc))
    (loc (s '%91 (load-i32 '(k . 0) mem) loc))
    (loc (s '%92 (sub-i32 20 (g '%91 loc)) loc))
    (loc (s '%93 (shl-i32 (g '%90 loc) (g '%92 loc)) loc))
    (loc (s '%94 (load-i32 '(iy . 0) mem) loc))
    (loc (s '%95 (icmp-eq-i32 (g '%93 loc) (g '%94 loc)) loc)))
  (case (g '%95 loc)
    (-1 (mv '@__ieee754_pow-%96-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%100-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%96-bb (mem loc)
  (b* (
    (loc (s '%97 (load-i32 '(j . 0) mem) loc))
    (loc (s '%98 (and-i32 (g '%97 loc) 1) loc))
    (loc (s '%99 (sub-i32 2 (g '%98 loc)) loc))
    (mem (store-i32 (g '%99 loc) '(yisint . 0) mem)))
  (mv '@__ieee754_pow-%100-bb mem loc)))

(defund @__ieee754_pow-%100-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%101-bb mem loc)))

(defund @__ieee754_pow-%101-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%102-bb mem loc)))

(defund @__ieee754_pow-%102-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%103-bb mem loc)))

(defund @__ieee754_pow-%103-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%104-bb mem loc)))

(defund @__ieee754_pow-%104-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%105-bb mem loc)))

(defund @__ieee754_pow-%105-bb (mem loc)
  (b* (
    (loc (s '%106 (load-i32 '(ly . 0) mem) loc))
    (loc (s '%107 (icmp-eq-i32 (g '%106 loc) 0) loc)))
  (case (g '%107 loc)
    (-1 (mv '@__ieee754_pow-%108-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%170-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%108-bb (mem loc)
  (b* (
    (loc (s '%109 (load-i32 '(iy . 0) mem) loc))
    (loc (s '%110 (icmp-eq-i32 (g '%109 loc) 2146435072) loc)))
  (case (g '%110 loc)
    (-1 (mv '@__ieee754_pow-%111-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%141-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%111-bb (mem loc)
  (b* (
    (loc (s '%112 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%113 (sub-i32 (g '%112 loc) 1072693248) loc))
    (loc (s '%114 (load-i32 '(lx . 0) mem) loc))
    (loc (s '%115 (or-i32 (g '%113 loc) (g '%114 loc)) loc))
    (loc (s '%116 (icmp-eq-i32 (g '%115 loc) 0) loc)))
  (case (g '%116 loc)
    (-1 (mv '@__ieee754_pow-%117-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%121-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%117-bb (mem loc)
  (b* (
    (loc (s '%118 (load-double '(y . 0) mem) loc))
    (loc (s '%119 (load-double '(y . 0) mem) loc))
    (loc (s '%120 (fsub-double (g '%118 loc) (g '%119 loc)) loc))
    (mem (store-double (g '%120 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%121-bb (mem loc)
  (b* (
    (loc (s '%122 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%123 (icmp-sge-i32 (g '%122 loc) 1072693248) loc)))
  (case (g '%123 loc)
    (-1 (mv '@__ieee754_pow-%124-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%132-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%124-bb (mem loc)
  (b* (
    (loc (s '%125 (load-i32 '(hy . 0) mem) loc))
    (loc (s '%126 (icmp-sge-i32 (g '%125 loc) 0) loc)))
  (case (g '%126 loc)
    (-1 (mv '@__ieee754_pow-%127-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%129-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%127-bb (mem loc)
  (b* (
    (loc (s '%128 (load-double '(y . 0) mem) loc)))
  (let* ((loc (s '%131 (g '%128 loc) loc))) (mv '@__ieee754_pow-%130-bb mem loc))))

(defund @__ieee754_pow-%129-bb (mem loc)
  (b* ()
  (let* ((loc (s '%131 #x0000000000000000 loc))) (mv '@__ieee754_pow-%130-bb mem loc))))

(defund @__ieee754_pow-%130-bb (mem loc)
  ; %131 = phi double [ (g '%128 loc), %127 ], [ #x0000000000000000, %129 ]
  (b* (
    (mem (store-double (g '%131 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%132-bb (mem loc)
  (b* (
    (loc (s '%133 (load-i32 '(hy . 0) mem) loc))
    (loc (s '%134 (icmp-slt-i32 (g '%133 loc) 0) loc)))
  (case (g '%134 loc)
    (-1 (mv '@__ieee754_pow-%135-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%138-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%135-bb (mem loc)
  (b* (
    (loc (s '%136 (load-double '(y . 0) mem) loc))
    (loc (s '%137 (fsub-double #x8000000000000000 (g '%136 loc)) loc)))
  (let* ((loc (s '%140 (g '%137 loc) loc))) (mv '@__ieee754_pow-%139-bb mem loc))))

(defund @__ieee754_pow-%138-bb (mem loc)
  (b* ()
  (let* ((loc (s '%140 #x0000000000000000 loc))) (mv '@__ieee754_pow-%139-bb mem loc))))

(defund @__ieee754_pow-%139-bb (mem loc)
  ; %140 = phi double [ (g '%137 loc), %135 ], [ #x0000000000000000, %138 ]
  (b* (
    (mem (store-double (g '%140 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%141-bb (mem loc)
  (b* (
    (loc (s '%142 (load-i32 '(iy . 0) mem) loc))
    (loc (s '%143 (icmp-eq-i32 (g '%142 loc) 1072693248) loc)))
  (case (g '%143 loc)
    (-1 (mv '@__ieee754_pow-%144-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%152-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%144-bb (mem loc)
  (b* (
    (loc (s '%145 (load-i32 '(hy . 0) mem) loc))
    (loc (s '%146 (icmp-slt-i32 (g '%145 loc) 0) loc)))
  (case (g '%146 loc)
    (-1 (mv '@__ieee754_pow-%147-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%150-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%147-bb (mem loc)
  (b* (
    (loc (s '%148 (load-double '(x . 0) mem) loc))
    (loc (s '%149 (fdiv-double #x3ff0000000000000 (g '%148 loc)) loc))
    (mem (store-double (g '%149 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%150-bb (mem loc)
  (b* (
    (loc (s '%151 (load-double '(x . 0) mem) loc))
    (mem (store-double (g '%151 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%152-bb (mem loc)
  (b* (
    (loc (s '%153 (load-i32 '(hy . 0) mem) loc))
    (loc (s '%154 (icmp-eq-i32 (g '%153 loc) 1073741824) loc)))
  (case (g '%154 loc)
    (-1 (mv '@__ieee754_pow-%155-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%159-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%155-bb (mem loc)
  (b* (
    (loc (s '%156 (load-double '(x . 0) mem) loc))
    (loc (s '%157 (load-double '(x . 0) mem) loc))
    (loc (s '%158 (fmul-double (g '%156 loc) (g '%157 loc)) loc))
    (mem (store-double (g '%158 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%159-bb (mem loc)
  (b* (
    (loc (s '%160 (load-i32 '(hy . 0) mem) loc))
    (loc (s '%161 (icmp-eq-i32 (g '%160 loc) 1071644672) loc)))
  (case (g '%161 loc)
    (-1 (mv '@__ieee754_pow-%162-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%169-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%162-bb (mem loc)
  (b* (
    (loc (s '%163 (load-i32 '(hx . 0) mem) loc))
    (loc (s '%164 (icmp-sge-i32 (g '%163 loc) 0) loc)))
  (case (g '%164 loc)
    (-1 (mv '@__ieee754_pow-%165-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%168-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%165-bb (mem loc)
  (b* (
    (loc (s '%166 (load-double '(x . 0) mem) loc))
    (loc (s '%167 (@sqrt (g '%166 loc)) loc))
    (mem (store-double (g '%167 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%168-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%169-bb mem loc)))

(defund @__ieee754_pow-%169-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%170-bb mem loc)))

(defund @__ieee754_pow-%170-bb (mem loc)
  (b* (
    (loc (s '%171 (load-double '(x . 0) mem) loc))
    (loc (s '%172 (@fabs (g '%171 loc)) loc))
    (mem (store-double (g '%172 loc) '(ax . 0) mem))
    (loc (s '%173 (load-i32 '(lx . 0) mem) loc))
    (loc (s '%174 (icmp-eq-i32 (g '%173 loc) 0) loc)))
  (case (g '%174 loc)
    (-1 (mv '@__ieee754_pow-%175-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%219-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%175-bb (mem loc)
  (b* (
    (loc (s '%176 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%177 (icmp-eq-i32 (g '%176 loc) 2146435072) loc)))
  (case (g '%177 loc)
    (-1 (mv '@__ieee754_pow-%184-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%178-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%178-bb (mem loc)
  (b* (
    (loc (s '%179 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%180 (icmp-eq-i32 (g '%179 loc) 0) loc)))
  (case (g '%180 loc)
    (-1 (mv '@__ieee754_pow-%184-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%181-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%181-bb (mem loc)
  (b* (
    (loc (s '%182 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%183 (icmp-eq-i32 (g '%182 loc) 1072693248) loc)))
  (case (g '%183 loc)
    (-1 (mv '@__ieee754_pow-%184-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%218-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%184-bb (mem loc)
  (b* (
    (loc (s '%185 (load-double '(ax . 0) mem) loc))
    (mem (store-double (g '%185 loc) '(z . 0) mem))
    (loc (s '%186 (load-i32 '(hy . 0) mem) loc))
    (loc (s '%187 (icmp-slt-i32 (g '%186 loc) 0) loc)))
  (case (g '%187 loc)
    (-1 (mv '@__ieee754_pow-%188-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%191-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%188-bb (mem loc)
  (b* (
    (loc (s '%189 (load-double '(z . 0) mem) loc))
    (loc (s '%190 (fdiv-double #x3ff0000000000000 (g '%189 loc)) loc))
    (mem (store-double (g '%190 loc) '(z . 0) mem)))
  (mv '@__ieee754_pow-%191-bb mem loc)))

(defund @__ieee754_pow-%191-bb (mem loc)
  (b* (
    (loc (s '%192 (load-i32 '(hx . 0) mem) loc))
    (loc (s '%193 (icmp-slt-i32 (g '%192 loc) 0) loc)))
  (case (g '%193 loc)
    (-1 (mv '@__ieee754_pow-%194-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%216-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%194-bb (mem loc)
  (b* (
    (loc (s '%195 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%196 (sub-i32 (g '%195 loc) 1072693248) loc))
    (loc (s '%197 (load-i32 '(yisint . 0) mem) loc))
    (loc (s '%198 (or-i32 (g '%196 loc) (g '%197 loc)) loc))
    (loc (s '%199 (icmp-eq-i32 (g '%198 loc) 0) loc)))
  (case (g '%199 loc)
    (-1 (mv '@__ieee754_pow-%200-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%208-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%200-bb (mem loc)
  (b* (
    (loc (s '%201 (load-double '(z . 0) mem) loc))
    (loc (s '%202 (load-double '(z . 0) mem) loc))
    (loc (s '%203 (fsub-double (g '%201 loc) (g '%202 loc)) loc))
    (loc (s '%204 (load-double '(z . 0) mem) loc))
    (loc (s '%205 (load-double '(z . 0) mem) loc))
    (loc (s '%206 (fsub-double (g '%204 loc) (g '%205 loc)) loc))
    (loc (s '%207 (fdiv-double (g '%203 loc) (g '%206 loc)) loc))
    (mem (store-double (g '%207 loc) '(z . 0) mem)))
  (mv '@__ieee754_pow-%215-bb mem loc)))

(defund @__ieee754_pow-%208-bb (mem loc)
  (b* (
    (loc (s '%209 (load-i32 '(yisint . 0) mem) loc))
    (loc (s '%210 (icmp-eq-i32 (g '%209 loc) 1) loc)))
  (case (g '%210 loc)
    (-1 (mv '@__ieee754_pow-%211-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%214-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%211-bb (mem loc)
  (b* (
    (loc (s '%212 (load-double '(z . 0) mem) loc))
    (loc (s '%213 (fsub-double #x8000000000000000 (g '%212 loc)) loc))
    (mem (store-double (g '%213 loc) '(z . 0) mem)))
  (mv '@__ieee754_pow-%214-bb mem loc)))

(defund @__ieee754_pow-%214-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%215-bb mem loc)))

(defund @__ieee754_pow-%215-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%216-bb mem loc)))

(defund @__ieee754_pow-%216-bb (mem loc)
  (b* (
    (loc (s '%217 (load-double '(z . 0) mem) loc))
    (mem (store-double (g '%217 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%218-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%219-bb mem loc)))

(defund @__ieee754_pow-%219-bb (mem loc)
  (b* (
    (loc (s '%220 (load-i32 '(hx . 0) mem) loc))
    (loc (s '%221 (ashr-i32 (g '%220 loc) 31) loc))
    (loc (s '%222 (add-i32 (g '%221 loc) 1) loc))
    (mem (store-i32 (g '%222 loc) '(n . 0) mem))
    (loc (s '%223 (load-i32 '(n . 0) mem) loc))
    (loc (s '%224 (load-i32 '(yisint . 0) mem) loc))
    (loc (s '%225 (or-i32 (g '%223 loc) (g '%224 loc)) loc))
    (loc (s '%226 (icmp-eq-i32 (g '%225 loc) 0) loc)))
  (case (g '%226 loc)
    (-1 (mv '@__ieee754_pow-%227-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%235-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%227-bb (mem loc)
  (b* (
    (loc (s '%228 (load-double '(x . 0) mem) loc))
    (loc (s '%229 (load-double '(x . 0) mem) loc))
    (loc (s '%230 (fsub-double (g '%228 loc) (g '%229 loc)) loc))
    (loc (s '%231 (load-double '(x . 0) mem) loc))
    (loc (s '%232 (load-double '(x . 0) mem) loc))
    (loc (s '%233 (fsub-double (g '%231 loc) (g '%232 loc)) loc))
    (loc (s '%234 (fdiv-double (g '%230 loc) (g '%233 loc)) loc))
    (mem (store-double (g '%234 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%235-bb (mem loc)
  (b* (
    (mem (store-double #x3ff0000000000000 '(s . 0) mem))
    (loc (s '%236 (load-i32 '(n . 0) mem) loc))
    (loc (s '%237 (load-i32 '(yisint . 0) mem) loc))
    (loc (s '%238 (sub-i32 (g '%237 loc) 1) loc))
    (loc (s '%239 (or-i32 (g '%236 loc) (g '%238 loc)) loc))
    (loc (s '%240 (icmp-eq-i32 (g '%239 loc) 0) loc)))
  (case (g '%240 loc)
    (-1 (mv '@__ieee754_pow-%241-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%242-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%241-bb (mem loc)
  (b* (
    (mem (store-double #xbff0000000000000 '(s . 0) mem)))
  (mv '@__ieee754_pow-%242-bb mem loc)))

(defund @__ieee754_pow-%242-bb (mem loc)
  (b* (
    (loc (s '%243 (load-i32 '(iy . 0) mem) loc))
    (loc (s '%244 (icmp-sgt-i32 (g '%243 loc) 1105199104) loc)))
  (case (g '%244 loc)
    (-1 (mv '@__ieee754_pow-%245-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%324-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%245-bb (mem loc)
  (b* (
    (loc (s '%246 (load-i32 '(iy . 0) mem) loc))
    (loc (s '%247 (icmp-sgt-i32 (g '%246 loc) 1139802112) loc)))
  (case (g '%247 loc)
    (-1 (mv '@__ieee754_pow-%248-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%263-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%248-bb (mem loc)
  (b* (
    (loc (s '%249 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%250 (icmp-sle-i32 (g '%249 loc) 1072693247) loc)))
  (case (g '%250 loc)
    (-1 (mv '@__ieee754_pow-%251-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%255-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%251-bb (mem loc)
  (b* (
    (loc (s '%252 (load-i32 '(hy . 0) mem) loc))
    (loc (s '%253 (icmp-slt-i32 (g '%252 loc) 0) loc))
    (loc (s '%254 (select-double (g '%253 loc) #x7FF0000000000000 #x0000000000000000) loc))
    (mem (store-double (g '%254 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%255-bb (mem loc)
  (b* (
    (loc (s '%256 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%257 (icmp-sge-i32 (g '%256 loc) 1072693248) loc)))
  (case (g '%257 loc)
    (-1 (mv '@__ieee754_pow-%258-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%262-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%258-bb (mem loc)
  (b* (
    (loc (s '%259 (load-i32 '(hy . 0) mem) loc))
    (loc (s '%260 (icmp-sgt-i32 (g '%259 loc) 0) loc))
    (loc (s '%261 (select-double (g '%260 loc) #x7FF0000000000000 #x0000000000000000) loc))
    (mem (store-double (g '%261 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%262-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%263-bb mem loc)))

(defund @__ieee754_pow-%263-bb (mem loc)
  (b* (
    (loc (s '%264 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%265 (icmp-slt-i32 (g '%264 loc) 1072693247) loc)))
  (case (g '%265 loc)
    (-1 (mv '@__ieee754_pow-%266-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%279-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%266-bb (mem loc)
  (b* (
    (loc (s '%267 (load-i32 '(hy . 0) mem) loc))
    (loc (s '%268 (icmp-slt-i32 (g '%267 loc) 0) loc)))
  (case (g '%268 loc)
    (-1 (mv '@__ieee754_pow-%269-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%273-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%269-bb (mem loc)
  (b* (
    (loc (s '%270 (load-double '(s . 0) mem) loc))
    (loc (s '%271 (fmul-double (g '%270 loc) #x7e37e43c8800759c) loc))
    (loc (s '%272 (fmul-double (g '%271 loc) #x7e37e43c8800759c) loc)))
  (let* ((loc (s '%278 (g '%272 loc) loc))) (mv '@__ieee754_pow-%277-bb mem loc))))

(defund @__ieee754_pow-%273-bb (mem loc)
  (b* (
    (loc (s '%274 (load-double '(s . 0) mem) loc))
    (loc (s '%275 (fmul-double (g '%274 loc) #x01a56e1fc2f8f359) loc))
    (loc (s '%276 (fmul-double (g '%275 loc) #x01a56e1fc2f8f359) loc)))
  (let* ((loc (s '%278 (g '%276 loc) loc))) (mv '@__ieee754_pow-%277-bb mem loc))))

(defund @__ieee754_pow-%277-bb (mem loc)
  ; %278 = phi double [ (g '%272 loc), %269 ], [ (g '%276 loc), %273 ]
  (b* (
    (mem (store-double (g '%278 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%279-bb (mem loc)
  (b* (
    (loc (s '%280 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%281 (icmp-sgt-i32 (g '%280 loc) 1072693248) loc)))
  (case (g '%281 loc)
    (-1 (mv '@__ieee754_pow-%282-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%295-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%282-bb (mem loc)
  (b* (
    (loc (s '%283 (load-i32 '(hy . 0) mem) loc))
    (loc (s '%284 (icmp-sgt-i32 (g '%283 loc) 0) loc)))
  (case (g '%284 loc)
    (-1 (mv '@__ieee754_pow-%285-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%289-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%285-bb (mem loc)
  (b* (
    (loc (s '%286 (load-double '(s . 0) mem) loc))
    (loc (s '%287 (fmul-double (g '%286 loc) #x7e37e43c8800759c) loc))
    (loc (s '%288 (fmul-double (g '%287 loc) #x7e37e43c8800759c) loc)))
  (let* ((loc (s '%294 (g '%288 loc) loc))) (mv '@__ieee754_pow-%293-bb mem loc))))

(defund @__ieee754_pow-%289-bb (mem loc)
  (b* (
    (loc (s '%290 (load-double '(s . 0) mem) loc))
    (loc (s '%291 (fmul-double (g '%290 loc) #x01a56e1fc2f8f359) loc))
    (loc (s '%292 (fmul-double (g '%291 loc) #x01a56e1fc2f8f359) loc)))
  (let* ((loc (s '%294 (g '%292 loc) loc))) (mv '@__ieee754_pow-%293-bb mem loc))))

(defund @__ieee754_pow-%293-bb (mem loc)
  ; %294 = phi double [ (g '%288 loc), %285 ], [ (g '%292 loc), %289 ]
  (b* (
    (mem (store-double (g '%294 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%295-bb (mem loc)
  (b* (
    (loc (s '%296 (load-double '(ax . 0) mem) loc))
    (loc (s '%297 (fsub-double (g '%296 loc) #x3ff0000000000000) loc))
    (mem (store-double (g '%297 loc) '(t . 0) mem))
    (loc (s '%298 (load-double '(t . 0) mem) loc))
    (loc (s '%299 (load-double '(t . 0) mem) loc))
    (loc (s '%300 (fmul-double (g '%298 loc) (g '%299 loc)) loc))
    (loc (s '%301 (load-double '(t . 0) mem) loc))
    (loc (s '%302 (load-double '(t . 0) mem) loc))
    (loc (s '%303 (fmul-double (g '%302 loc) #x3fd0000000000000) loc))
    (loc (s '%304 (fsub-double #x3FD5555555555555 (g '%303 loc)) loc))
    (loc (s '%305 (fmul-double (g '%301 loc) (g '%304 loc)) loc))
    (loc (s '%306 (fsub-double #x3fe0000000000000 (g '%305 loc)) loc))
    (loc (s '%307 (fmul-double (g '%300 loc) (g '%306 loc)) loc))
    (mem (store-double (g '%307 loc) '(w . 0) mem))
    (loc (s '%308 (load-double '(t . 0) mem) loc))
    (loc (s '%309 (fmul-double #x3FF7154760000000 (g '%308 loc)) loc))
    (mem (store-double (g '%309 loc) '(u . 0) mem))
    (loc (s '%310 (load-double '(t . 0) mem) loc))
    (loc (s '%311 (fmul-double (g '%310 loc) #x3E54AE0BF85DDF44) loc))
    (loc (s '%312 (load-double '(w . 0) mem) loc))
    (loc (s '%313 (fmul-double (g '%312 loc) #x3FF71547652B82FE) loc))
    (loc (s '%314 (fsub-double (g '%311 loc) (g '%313 loc)) loc))
    (mem (store-double (g '%314 loc) '(v . 0) mem))
    (loc (s '%315 (load-double '(u . 0) mem) loc))
    (loc (s '%316 (load-double '(v . 0) mem) loc))
    (loc (s '%317 (fadd-double (g '%315 loc) (g '%316 loc)) loc))
    (mem (store-double (g '%317 loc) '(t1 . 0) mem))
    (loc (s '%318 (bitcast-double*-to-i32* '(t1 . 0)) loc))
    (mem (store-i32 0 (g '%318 loc) mem))
    (loc (s '%319 (load-double '(v . 0) mem) loc))
    (loc (s '%320 (load-double '(t1 . 0) mem) loc))
    (loc (s '%321 (load-double '(u . 0) mem) loc))
    (loc (s '%322 (fsub-double (g '%320 loc) (g '%321 loc)) loc))
    (loc (s '%323 (fsub-double (g '%319 loc) (g '%322 loc)) loc))
    (mem (store-double (g '%323 loc) '(t2 . 0) mem)))
  (mv '@__ieee754_pow-%507-bb mem loc)))

(defund @__ieee754_pow-%324-bb (mem loc)
  (b* (
    (mem (store-i32 0 '(n . 0) mem))
    (loc (s '%325 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%326 (icmp-slt-i32 (g '%325 loc) 1048576) loc)))
  (case (g '%326 loc)
    (-1 (mv '@__ieee754_pow-%327-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%335-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%327-bb (mem loc)
  (b* (
    (loc (s '%328 (load-double '(ax . 0) mem) loc))
    (loc (s '%329 (fmul-double (g '%328 loc) #x4340000000000000) loc))
    (mem (store-double (g '%329 loc) '(ax . 0) mem))
    (loc (s '%330 (load-i32 '(n . 0) mem) loc))
    (loc (s '%331 (sub-i32 (g '%330 loc) 53) loc))
    (mem (store-i32 (g '%331 loc) '(n . 0) mem))
    (loc (s '%332 (bitcast-double*-to-i32* '(ax . 0)) loc))
    (loc (s '%333 (getelementptr-i32 (g '%332 loc) 1) loc))
    (loc (s '%334 (load-i32 (g '%333 loc) mem) loc))
    (mem (store-i32 (g '%334 loc) '(ix . 0) mem)))
  (mv '@__ieee754_pow-%335-bb mem loc)))

(defund @__ieee754_pow-%335-bb (mem loc)
  (b* (
    (loc (s '%336 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%337 (ashr-i32 (g '%336 loc) 20) loc))
    (loc (s '%338 (sub-i32 (g '%337 loc) 1023) loc))
    (loc (s '%339 (load-i32 '(n . 0) mem) loc))
    (loc (s '%340 (add-i32 (g '%339 loc) (g '%338 loc)) loc))
    (mem (store-i32 (g '%340 loc) '(n . 0) mem))
    (loc (s '%341 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%342 (and-i32 (g '%341 loc) 1048575) loc))
    (mem (store-i32 (g '%342 loc) '(j . 0) mem))
    (loc (s '%343 (load-i32 '(j . 0) mem) loc))
    (loc (s '%344 (or-i32 (g '%343 loc) 1072693248) loc))
    (mem (store-i32 (g '%344 loc) '(ix . 0) mem))
    (loc (s '%345 (load-i32 '(j . 0) mem) loc))
    (loc (s '%346 (icmp-sle-i32 (g '%345 loc) 235662) loc)))
  (case (g '%346 loc)
    (-1 (mv '@__ieee754_pow-%347-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%348-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%347-bb (mem loc)
  (b* (
    (mem (store-i32 0 '(k . 0) mem)))
  (mv '@__ieee754_pow-%358-bb mem loc)))

(defund @__ieee754_pow-%348-bb (mem loc)
  (b* (
    (loc (s '%349 (load-i32 '(j . 0) mem) loc))
    (loc (s '%350 (icmp-slt-i32 (g '%349 loc) 767610) loc)))
  (case (g '%350 loc)
    (-1 (mv '@__ieee754_pow-%351-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%352-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%351-bb (mem loc)
  (b* (
    (mem (store-i32 1 '(k . 0) mem)))
  (mv '@__ieee754_pow-%357-bb mem loc)))

(defund @__ieee754_pow-%352-bb (mem loc)
  (b* (
    (mem (store-i32 0 '(k . 0) mem))
    (loc (s '%353 (load-i32 '(n . 0) mem) loc))
    (loc (s '%354 (add-i32 (g '%353 loc) 1) loc))
    (mem (store-i32 (g '%354 loc) '(n . 0) mem))
    (loc (s '%355 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%356 (sub-i32 (g '%355 loc) 1048576) loc))
    (mem (store-i32 (g '%356 loc) '(ix . 0) mem)))
  (mv '@__ieee754_pow-%357-bb mem loc)))

(defund @__ieee754_pow-%357-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%358-bb mem loc)))

(defund @__ieee754_pow-%358-bb (mem loc)
  (b* (
    (loc (s '%359 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%360 (bitcast-double*-to-i32* '(ax . 0)) loc))
    (loc (s '%361 (getelementptr-i32 (g '%360 loc) 1) loc))
    (mem (store-i32 (g '%359 loc) (g '%361 loc) mem))
    (loc (s '%362 (load-double '(ax . 0) mem) loc))
    (loc (s '%363 (load-i32 '(k . 0) mem) loc))
    (loc (s '%364 (sext-i32-to-i64 (g '%363 loc)) loc))
    (loc (s '%365 (getelementptr-double '(bp . 0) (g '%364 loc)) loc))
    (loc (s '%366 (load-double (g '%365 loc) mem) loc))
    (loc (s '%367 (fsub-double (g '%362 loc) (g '%366 loc)) loc))
    (mem (store-double (g '%367 loc) '(u . 0) mem))
    (loc (s '%368 (load-double '(ax . 0) mem) loc))
    (loc (s '%369 (load-i32 '(k . 0) mem) loc))
    (loc (s '%370 (sext-i32-to-i64 (g '%369 loc)) loc))
    (loc (s '%371 (getelementptr-double '(bp . 0) (g '%370 loc)) loc))
    (loc (s '%372 (load-double (g '%371 loc) mem) loc))
    (loc (s '%373 (fadd-double (g '%368 loc) (g '%372 loc)) loc))
    (loc (s '%374 (fdiv-double #x3ff0000000000000 (g '%373 loc)) loc))
    (mem (store-double (g '%374 loc) '(v . 0) mem))
    (loc (s '%375 (load-double '(u . 0) mem) loc))
    (loc (s '%376 (load-double '(v . 0) mem) loc))
    (loc (s '%377 (fmul-double (g '%375 loc) (g '%376 loc)) loc))
    (mem (store-double (g '%377 loc) '(ss . 0) mem))
    (loc (s '%378 (load-double '(ss . 0) mem) loc))
    (mem (store-double (g '%378 loc) '(s_h . 0) mem))
    (loc (s '%379 (bitcast-double*-to-i32* '(s_h . 0)) loc))
    (mem (store-i32 0 (g '%379 loc) mem))
    (mem (store-double #x0000000000000000 '(t_h . 0) mem))
    (loc (s '%380 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%381 (ashr-i32 (g '%380 loc) 1) loc))
    (loc (s '%382 (or-i32 (g '%381 loc) 536870912) loc))
    (loc (s '%383 (add-i32 (g '%382 loc) 524288) loc))
    (loc (s '%384 (load-i32 '(k . 0) mem) loc))
    (loc (s '%385 (shl-i32 (g '%384 loc) 18) loc))
    (loc (s '%386 (add-i32 (g '%383 loc) (g '%385 loc)) loc))
    (loc (s '%387 (bitcast-double*-to-i32* '(t_h . 0)) loc))
    (loc (s '%388 (getelementptr-i32 (g '%387 loc) 1) loc))
    (mem (store-i32 (g '%386 loc) (g '%388 loc) mem))
    (loc (s '%389 (load-double '(ax . 0) mem) loc))
    (loc (s '%390 (load-double '(t_h . 0) mem) loc))
    (loc (s '%391 (load-i32 '(k . 0) mem) loc))
    (loc (s '%392 (sext-i32-to-i64 (g '%391 loc)) loc))
    (loc (s '%393 (getelementptr-double '(bp . 0) (g '%392 loc)) loc))
    (loc (s '%394 (load-double (g '%393 loc) mem) loc))
    (loc (s '%395 (fsub-double (g '%390 loc) (g '%394 loc)) loc))
    (loc (s '%396 (fsub-double (g '%389 loc) (g '%395 loc)) loc))
    (mem (store-double (g '%396 loc) '(t_l . 0) mem))
    (loc (s '%397 (load-double '(v . 0) mem) loc))
    (loc (s '%398 (load-double '(u . 0) mem) loc))
    (loc (s '%399 (load-double '(s_h . 0) mem) loc))
    (loc (s '%400 (load-double '(t_h . 0) mem) loc))
    (loc (s '%401 (fmul-double (g '%399 loc) (g '%400 loc)) loc))
    (loc (s '%402 (fsub-double (g '%398 loc) (g '%401 loc)) loc))
    (loc (s '%403 (load-double '(s_h . 0) mem) loc))
    (loc (s '%404 (load-double '(t_l . 0) mem) loc))
    (loc (s '%405 (fmul-double (g '%403 loc) (g '%404 loc)) loc))
    (loc (s '%406 (fsub-double (g '%402 loc) (g '%405 loc)) loc))
    (loc (s '%407 (fmul-double (g '%397 loc) (g '%406 loc)) loc))
    (mem (store-double (g '%407 loc) '(s_l . 0) mem))
    (loc (s '%408 (load-double '(ss . 0) mem) loc))
    (loc (s '%409 (load-double '(ss . 0) mem) loc))
    (loc (s '%410 (fmul-double (g '%408 loc) (g '%409 loc)) loc))
    (mem (store-double (g '%410 loc) '(s2 . 0) mem))
    (loc (s '%411 (load-double '(s2 . 0) mem) loc))
    (loc (s '%412 (load-double '(s2 . 0) mem) loc))
    (loc (s '%413 (fmul-double (g '%411 loc) (g '%412 loc)) loc))
    (loc (s '%414 (load-double '(s2 . 0) mem) loc))
    (loc (s '%415 (load-double '(s2 . 0) mem) loc))
    (loc (s '%416 (load-double '(s2 . 0) mem) loc))
    (loc (s '%417 (load-double '(s2 . 0) mem) loc))
    (loc (s '%418 (load-double '(s2 . 0) mem) loc))
    (loc (s '%419 (fmul-double (g '%418 loc) #x3FCA7E284A454EEF) loc))
    (loc (s '%420 (fadd-double #x3FCD864A93C9DB65 (g '%419 loc)) loc))
    (loc (s '%421 (fmul-double (g '%417 loc) (g '%420 loc)) loc))
    (loc (s '%422 (fadd-double #x3FD17460A91D4101 (g '%421 loc)) loc))
    (loc (s '%423 (fmul-double (g '%416 loc) (g '%422 loc)) loc))
    (loc (s '%424 (fadd-double #x3FD55555518F264D (g '%423 loc)) loc))
    (loc (s '%425 (fmul-double (g '%415 loc) (g '%424 loc)) loc))
    (loc (s '%426 (fadd-double #x3FDB6DB6DB6FABFF (g '%425 loc)) loc))
    (loc (s '%427 (fmul-double (g '%414 loc) (g '%426 loc)) loc))
    (loc (s '%428 (fadd-double #x3FE3333333333303 (g '%427 loc)) loc))
    (loc (s '%429 (fmul-double (g '%413 loc) (g '%428 loc)) loc))
    (mem (store-double (g '%429 loc) '(r . 0) mem))
    (loc (s '%430 (load-double '(s_l . 0) mem) loc))
    (loc (s '%431 (load-double '(s_h . 0) mem) loc))
    (loc (s '%432 (load-double '(ss . 0) mem) loc))
    (loc (s '%433 (fadd-double (g '%431 loc) (g '%432 loc)) loc))
    (loc (s '%434 (fmul-double (g '%430 loc) (g '%433 loc)) loc))
    (loc (s '%435 (load-double '(r . 0) mem) loc))
    (loc (s '%436 (fadd-double (g '%435 loc) (g '%434 loc)) loc))
    (mem (store-double (g '%436 loc) '(r . 0) mem))
    (loc (s '%437 (load-double '(s_h . 0) mem) loc))
    (loc (s '%438 (load-double '(s_h . 0) mem) loc))
    (loc (s '%439 (fmul-double (g '%437 loc) (g '%438 loc)) loc))
    (mem (store-double (g '%439 loc) '(s2 . 0) mem))
    (loc (s '%440 (load-double '(s2 . 0) mem) loc))
    (loc (s '%441 (fadd-double #x4008000000000000 (g '%440 loc)) loc))
    (loc (s '%442 (load-double '(r . 0) mem) loc))
    (loc (s '%443 (fadd-double (g '%441 loc) (g '%442 loc)) loc))
    (mem (store-double (g '%443 loc) '(t_h . 0) mem))
    (loc (s '%444 (bitcast-double*-to-i32* '(t_h . 0)) loc))
    (mem (store-i32 0 (g '%444 loc) mem))
    (loc (s '%445 (load-double '(r . 0) mem) loc))
    (loc (s '%446 (load-double '(t_h . 0) mem) loc))
    (loc (s '%447 (fsub-double (g '%446 loc) #x4008000000000000) loc))
    (loc (s '%448 (load-double '(s2 . 0) mem) loc))
    (loc (s '%449 (fsub-double (g '%447 loc) (g '%448 loc)) loc))
    (loc (s '%450 (fsub-double (g '%445 loc) (g '%449 loc)) loc))
    (mem (store-double (g '%450 loc) '(t_l . 0) mem))
    (loc (s '%451 (load-double '(s_h . 0) mem) loc))
    (loc (s '%452 (load-double '(t_h . 0) mem) loc))
    (loc (s '%453 (fmul-double (g '%451 loc) (g '%452 loc)) loc))
    (mem (store-double (g '%453 loc) '(u . 0) mem))
    (loc (s '%454 (load-double '(s_l . 0) mem) loc))
    (loc (s '%455 (load-double '(t_h . 0) mem) loc))
    (loc (s '%456 (fmul-double (g '%454 loc) (g '%455 loc)) loc))
    (loc (s '%457 (load-double '(t_l . 0) mem) loc))
    (loc (s '%458 (load-double '(ss . 0) mem) loc))
    (loc (s '%459 (fmul-double (g '%457 loc) (g '%458 loc)) loc))
    (loc (s '%460 (fadd-double (g '%456 loc) (g '%459 loc)) loc))
    (mem (store-double (g '%460 loc) '(v . 0) mem))
    (loc (s '%461 (load-double '(u . 0) mem) loc))
    (loc (s '%462 (load-double '(v . 0) mem) loc))
    (loc (s '%463 (fadd-double (g '%461 loc) (g '%462 loc)) loc))
    (mem (store-double (g '%463 loc) '(p_h . 0) mem))
    (loc (s '%464 (bitcast-double*-to-i32* '(p_h . 0)) loc))
    (mem (store-i32 0 (g '%464 loc) mem))
    (loc (s '%465 (load-double '(v . 0) mem) loc))
    (loc (s '%466 (load-double '(p_h . 0) mem) loc))
    (loc (s '%467 (load-double '(u . 0) mem) loc))
    (loc (s '%468 (fsub-double (g '%466 loc) (g '%467 loc)) loc))
    (loc (s '%469 (fsub-double (g '%465 loc) (g '%468 loc)) loc))
    (mem (store-double (g '%469 loc) '(p_l . 0) mem))
    (loc (s '%470 (load-double '(p_h . 0) mem) loc))
    (loc (s '%471 (fmul-double #x3FEEC709E0000000 (g '%470 loc)) loc))
    (mem (store-double (g '%471 loc) '(z_h . 0) mem))
    (loc (s '%472 (load-double '(p_h . 0) mem) loc))
    (loc (s '%473 (fmul-double #xBE3E2FE0145B01F5 (g '%472 loc)) loc))
    (loc (s '%474 (load-double '(p_l . 0) mem) loc))
    (loc (s '%475 (fmul-double (g '%474 loc) #x3FEEC709DC3A03FD) loc))
    (loc (s '%476 (fadd-double (g '%473 loc) (g '%475 loc)) loc))
    (loc (s '%477 (load-i32 '(k . 0) mem) loc))
    (loc (s '%478 (sext-i32-to-i64 (g '%477 loc)) loc))
    (loc (s '%479 (getelementptr-double '(dp_l . 0) (g '%478 loc)) loc))
    (loc (s '%480 (load-double (g '%479 loc) mem) loc))
    (loc (s '%481 (fadd-double (g '%476 loc) (g '%480 loc)) loc))
    (mem (store-double (g '%481 loc) '(z_l . 0) mem))
    (loc (s '%482 (load-i32 '(n . 0) mem) loc))
    (loc (s '%483 (sitofp-i32-to-double (g '%482 loc)) loc))
    (mem (store-double (g '%483 loc) '(t . 0) mem))
    (loc (s '%484 (load-double '(z_h . 0) mem) loc))
    (loc (s '%485 (load-double '(z_l . 0) mem) loc))
    (loc (s '%486 (fadd-double (g '%484 loc) (g '%485 loc)) loc))
    (loc (s '%487 (load-i32 '(k . 0) mem) loc))
    (loc (s '%488 (sext-i32-to-i64 (g '%487 loc)) loc))
    (loc (s '%489 (getelementptr-double '(dp_h . 0) (g '%488 loc)) loc))
    (loc (s '%490 (load-double (g '%489 loc) mem) loc))
    (loc (s '%491 (fadd-double (g '%486 loc) (g '%490 loc)) loc))
    (loc (s '%492 (load-double '(t . 0) mem) loc))
    (loc (s '%493 (fadd-double (g '%491 loc) (g '%492 loc)) loc))
    (mem (store-double (g '%493 loc) '(t1 . 0) mem))
    (loc (s '%494 (bitcast-double*-to-i32* '(t1 . 0)) loc))
    (mem (store-i32 0 (g '%494 loc) mem))
    (loc (s '%495 (load-double '(z_l . 0) mem) loc))
    (loc (s '%496 (load-double '(t1 . 0) mem) loc))
    (loc (s '%497 (load-double '(t . 0) mem) loc))
    (loc (s '%498 (fsub-double (g '%496 loc) (g '%497 loc)) loc))
    (loc (s '%499 (load-i32 '(k . 0) mem) loc))
    (loc (s '%500 (sext-i32-to-i64 (g '%499 loc)) loc))
    (loc (s '%501 (getelementptr-double '(dp_h . 0) (g '%500 loc)) loc))
    (loc (s '%502 (load-double (g '%501 loc) mem) loc))
    (loc (s '%503 (fsub-double (g '%498 loc) (g '%502 loc)) loc))
    (loc (s '%504 (load-double '(z_h . 0) mem) loc))
    (loc (s '%505 (fsub-double (g '%503 loc) (g '%504 loc)) loc))
    (loc (s '%506 (fsub-double (g '%495 loc) (g '%505 loc)) loc))
    (mem (store-double (g '%506 loc) '(t2 . 0) mem)))
  (mv '@__ieee754_pow-%507-bb mem loc)))

(defund @__ieee754_pow-%507-bb (mem loc)
  (b* (
    (loc (s '%508 (load-double '(y . 0) mem) loc))
    (mem (store-double (g '%508 loc) '(y1 . 0) mem))
    (loc (s '%509 (bitcast-double*-to-i32* '(y1 . 0)) loc))
    (mem (store-i32 0 (g '%509 loc) mem))
    (loc (s '%510 (load-double '(y . 0) mem) loc))
    (loc (s '%511 (load-double '(y1 . 0) mem) loc))
    (loc (s '%512 (fsub-double (g '%510 loc) (g '%511 loc)) loc))
    (loc (s '%513 (load-double '(t1 . 0) mem) loc))
    (loc (s '%514 (fmul-double (g '%512 loc) (g '%513 loc)) loc))
    (loc (s '%515 (load-double '(y . 0) mem) loc))
    (loc (s '%516 (load-double '(t2 . 0) mem) loc))
    (loc (s '%517 (fmul-double (g '%515 loc) (g '%516 loc)) loc))
    (loc (s '%518 (fadd-double (g '%514 loc) (g '%517 loc)) loc))
    (mem (store-double (g '%518 loc) '(p_l . 0) mem))
    (loc (s '%519 (load-double '(y1 . 0) mem) loc))
    (loc (s '%520 (load-double '(t1 . 0) mem) loc))
    (loc (s '%521 (fmul-double (g '%519 loc) (g '%520 loc)) loc))
    (mem (store-double (g '%521 loc) '(p_h . 0) mem))
    (loc (s '%522 (load-double '(p_l . 0) mem) loc))
    (loc (s '%523 (load-double '(p_h . 0) mem) loc))
    (loc (s '%524 (fadd-double (g '%522 loc) (g '%523 loc)) loc))
    (mem (store-double (g '%524 loc) '(z . 0) mem))
    (loc (s '%525 (bitcast-double*-to-i32* '(z . 0)) loc))
    (loc (s '%526 (getelementptr-i32 (g '%525 loc) 1) loc))
    (loc (s '%527 (load-i32 (g '%526 loc) mem) loc))
    (mem (store-i32 (g '%527 loc) '(j . 0) mem))
    (loc (s '%528 (bitcast-double*-to-i32* '(z . 0)) loc))
    (loc (s '%529 (load-i32 (g '%528 loc) mem) loc))
    (mem (store-i32 (g '%529 loc) '(i . 0) mem))
    (loc (s '%530 (load-i32 '(j . 0) mem) loc))
    (loc (s '%531 (icmp-sge-i32 (g '%530 loc) 1083179008) loc)))
  (case (g '%531 loc)
    (-1 (mv '@__ieee754_pow-%532-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%555-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%532-bb (mem loc)
  (b* (
    (loc (s '%533 (load-i32 '(j . 0) mem) loc))
    (loc (s '%534 (sub-i32 (g '%533 loc) 1083179008) loc))
    (loc (s '%535 (load-i32 '(i . 0) mem) loc))
    (loc (s '%536 (or-i32 (g '%534 loc) (g '%535 loc)) loc))
    (loc (s '%537 (icmp-ne-i32 (g '%536 loc) 0) loc)))
  (case (g '%537 loc)
    (-1 (mv '@__ieee754_pow-%538-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%542-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%538-bb (mem loc)
  (b* (
    (loc (s '%539 (load-double '(s . 0) mem) loc))
    (loc (s '%540 (fmul-double (g '%539 loc) #x7e37e43c8800759c) loc))
    (loc (s '%541 (fmul-double (g '%540 loc) #x7e37e43c8800759c) loc))
    (mem (store-double (g '%541 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%542-bb (mem loc)
  (b* (
    (loc (s '%543 (load-double '(p_l . 0) mem) loc))
    (loc (s '%544 (fadd-double (g '%543 loc) #x3C971547652B82FE) loc))
    (loc (s '%545 (load-double '(z . 0) mem) loc))
    (loc (s '%546 (load-double '(p_h . 0) mem) loc))
    (loc (s '%547 (fsub-double (g '%545 loc) (g '%546 loc)) loc))
    (loc (s '%548 (fcmp-ogt-double (g '%544 loc) (g '%547 loc)) loc)))
  (case (g '%548 loc)
    (-1 (mv '@__ieee754_pow-%549-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%553-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%549-bb (mem loc)
  (b* (
    (loc (s '%550 (load-double '(s . 0) mem) loc))
    (loc (s '%551 (fmul-double (g '%550 loc) #x7e37e43c8800759c) loc))
    (loc (s '%552 (fmul-double (g '%551 loc) #x7e37e43c8800759c) loc))
    (mem (store-double (g '%552 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%553-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%554-bb mem loc)))

(defund @__ieee754_pow-%554-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%582-bb mem loc)))

(defund @__ieee754_pow-%555-bb (mem loc)
  (b* (
    (loc (s '%556 (load-i32 '(j . 0) mem) loc))
    (loc (s '%557 (and-i32 (g '%556 loc) 2147483647) loc))
    (loc (s '%558 (icmp-sge-i32 (g '%557 loc) 1083231232) loc)))
  (case (g '%558 loc)
    (-1 (mv '@__ieee754_pow-%559-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%581-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%559-bb (mem loc)
  (b* (
    (loc (s '%560 (load-i32 '(j . 0) mem) loc))
    (loc (s '%561 (sub-i32 (g '%560 loc) -1064252416) loc))
    (loc (s '%562 (load-i32 '(i . 0) mem) loc))
    (loc (s '%563 (or-i32 (g '%561 loc) (g '%562 loc)) loc))
    (loc (s '%564 (icmp-ne-i32 (g '%563 loc) 0) loc)))
  (case (g '%564 loc)
    (-1 (mv '@__ieee754_pow-%565-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%569-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%565-bb (mem loc)
  (b* (
    (loc (s '%566 (load-double '(s . 0) mem) loc))
    (loc (s '%567 (fmul-double (g '%566 loc) #x01a56e1fc2f8f359) loc))
    (loc (s '%568 (fmul-double (g '%567 loc) #x01a56e1fc2f8f359) loc))
    (mem (store-double (g '%568 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%569-bb (mem loc)
  (b* (
    (loc (s '%570 (load-double '(p_l . 0) mem) loc))
    (loc (s '%571 (load-double '(z . 0) mem) loc))
    (loc (s '%572 (load-double '(p_h . 0) mem) loc))
    (loc (s '%573 (fsub-double (g '%571 loc) (g '%572 loc)) loc))
    (loc (s '%574 (fcmp-ole-double (g '%570 loc) (g '%573 loc)) loc)))
  (case (g '%574 loc)
    (-1 (mv '@__ieee754_pow-%575-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%579-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%575-bb (mem loc)
  (b* (
    (loc (s '%576 (load-double '(s . 0) mem) loc))
    (loc (s '%577 (fmul-double (g '%576 loc) #x01a56e1fc2f8f359) loc))
    (loc (s '%578 (fmul-double (g '%577 loc) #x01a56e1fc2f8f359) loc))
    (mem (store-double (g '%578 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%579-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%580-bb mem loc)))

(defund @__ieee754_pow-%580-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%581-bb mem loc)))

(defund @__ieee754_pow-%581-bb (mem loc)
  (b* ()
  (mv '@__ieee754_pow-%582-bb mem loc)))

(defund @__ieee754_pow-%582-bb (mem loc)
  (b* (
    (loc (s '%583 (load-i32 '(j . 0) mem) loc))
    (loc (s '%584 (and-i32 (g '%583 loc) 2147483647) loc))
    (mem (store-i32 (g '%584 loc) '(i . 0) mem))
    (loc (s '%585 (load-i32 '(i . 0) mem) loc))
    (loc (s '%586 (ashr-i32 (g '%585 loc) 20) loc))
    (loc (s '%587 (sub-i32 (g '%586 loc) 1023) loc))
    (mem (store-i32 (g '%587 loc) '(k . 0) mem))
    (mem (store-i32 0 '(n . 0) mem))
    (loc (s '%588 (load-i32 '(i . 0) mem) loc))
    (loc (s '%589 (icmp-sgt-i32 (g '%588 loc) 1071644672) loc)))
  (case (g '%589 loc)
    (-1 (mv '@__ieee754_pow-%590-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%622-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%590-bb (mem loc)
  (b* (
    (loc (s '%591 (load-i32 '(j . 0) mem) loc))
    (loc (s '%592 (load-i32 '(k . 0) mem) loc))
    (loc (s '%593 (add-i32 (g '%592 loc) 1) loc))
    (loc (s '%594 (ashr-i32 1048576 (g '%593 loc)) loc))
    (loc (s '%595 (add-i32 (g '%591 loc) (g '%594 loc)) loc))
    (mem (store-i32 (g '%595 loc) '(n . 0) mem))
    (loc (s '%596 (load-i32 '(n . 0) mem) loc))
    (loc (s '%597 (and-i32 (g '%596 loc) 2147483647) loc))
    (loc (s '%598 (ashr-i32 (g '%597 loc) 20) loc))
    (loc (s '%599 (sub-i32 (g '%598 loc) 1023) loc))
    (mem (store-i32 (g '%599 loc) '(k . 0) mem))
    (mem (store-double #x0000000000000000 '(t . 0) mem))
    (loc (s '%600 (load-i32 '(n . 0) mem) loc))
    (loc (s '%601 (load-i32 '(k . 0) mem) loc))
    (loc (s '%602 (ashr-i32 1048575 (g '%601 loc)) loc))
    (loc (s '%603 (xor-i32 (g '%602 loc) -1) loc))
    (loc (s '%604 (and-i32 (g '%600 loc) (g '%603 loc)) loc))
    (loc (s '%605 (bitcast-double*-to-i32* '(t . 0)) loc))
    (loc (s '%606 (getelementptr-i32 (g '%605 loc) 1) loc))
    (mem (store-i32 (g '%604 loc) (g '%606 loc) mem))
    (loc (s '%607 (load-i32 '(n . 0) mem) loc))
    (loc (s '%608 (and-i32 (g '%607 loc) 1048575) loc))
    (loc (s '%609 (or-i32 (g '%608 loc) 1048576) loc))
    (loc (s '%610 (load-i32 '(k . 0) mem) loc))
    (loc (s '%611 (sub-i32 20 (g '%610 loc)) loc))
    (loc (s '%612 (ashr-i32 (g '%609 loc) (g '%611 loc)) loc))
    (mem (store-i32 (g '%612 loc) '(n . 0) mem))
    (loc (s '%613 (load-i32 '(j . 0) mem) loc))
    (loc (s '%614 (icmp-slt-i32 (g '%613 loc) 0) loc)))
  (case (g '%614 loc)
    (-1 (mv '@__ieee754_pow-%615-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%618-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%615-bb (mem loc)
  (b* (
    (loc (s '%616 (load-i32 '(n . 0) mem) loc))
    (loc (s '%617 (sub-i32 0 (g '%616 loc)) loc))
    (mem (store-i32 (g '%617 loc) '(n . 0) mem)))
  (mv '@__ieee754_pow-%618-bb mem loc)))

(defund @__ieee754_pow-%618-bb (mem loc)
  (b* (
    (loc (s '%619 (load-double '(t . 0) mem) loc))
    (loc (s '%620 (load-double '(p_h . 0) mem) loc))
    (loc (s '%621 (fsub-double (g '%620 loc) (g '%619 loc)) loc))
    (mem (store-double (g '%621 loc) '(p_h . 0) mem)))
  (mv '@__ieee754_pow-%622-bb mem loc)))

(defund @__ieee754_pow-%622-bb (mem loc)
  (b* (
    (loc (s '%623 (load-double '(p_l . 0) mem) loc))
    (loc (s '%624 (load-double '(p_h . 0) mem) loc))
    (loc (s '%625 (fadd-double (g '%623 loc) (g '%624 loc)) loc))
    (mem (store-double (g '%625 loc) '(t . 0) mem))
    (loc (s '%626 (bitcast-double*-to-i32* '(t . 0)) loc))
    (mem (store-i32 0 (g '%626 loc) mem))
    (loc (s '%627 (load-double '(t . 0) mem) loc))
    (loc (s '%628 (fmul-double (g '%627 loc) #x3FE62E4300000000) loc))
    (mem (store-double (g '%628 loc) '(u . 0) mem))
    (loc (s '%629 (load-double '(p_l . 0) mem) loc))
    (loc (s '%630 (load-double '(t . 0) mem) loc))
    (loc (s '%631 (load-double '(p_h . 0) mem) loc))
    (loc (s '%632 (fsub-double (g '%630 loc) (g '%631 loc)) loc))
    (loc (s '%633 (fsub-double (g '%629 loc) (g '%632 loc)) loc))
    (loc (s '%634 (fmul-double (g '%633 loc) #x3FE62E42FEFA39EF) loc))
    (loc (s '%635 (load-double '(t . 0) mem) loc))
    (loc (s '%636 (fmul-double (g '%635 loc) #xBE205C610CA86C39) loc))
    (loc (s '%637 (fadd-double (g '%634 loc) (g '%636 loc)) loc))
    (mem (store-double (g '%637 loc) '(v . 0) mem))
    (loc (s '%638 (load-double '(u . 0) mem) loc))
    (loc (s '%639 (load-double '(v . 0) mem) loc))
    (loc (s '%640 (fadd-double (g '%638 loc) (g '%639 loc)) loc))
    (mem (store-double (g '%640 loc) '(z . 0) mem))
    (loc (s '%641 (load-double '(v . 0) mem) loc))
    (loc (s '%642 (load-double '(z . 0) mem) loc))
    (loc (s '%643 (load-double '(u . 0) mem) loc))
    (loc (s '%644 (fsub-double (g '%642 loc) (g '%643 loc)) loc))
    (loc (s '%645 (fsub-double (g '%641 loc) (g '%644 loc)) loc))
    (mem (store-double (g '%645 loc) '(w . 0) mem))
    (loc (s '%646 (load-double '(z . 0) mem) loc))
    (loc (s '%647 (load-double '(z . 0) mem) loc))
    (loc (s '%648 (fmul-double (g '%646 loc) (g '%647 loc)) loc))
    (mem (store-double (g '%648 loc) '(t . 0) mem))
    (loc (s '%649 (load-double '(z . 0) mem) loc))
    (loc (s '%650 (load-double '(t . 0) mem) loc))
    (loc (s '%651 (load-double '(t . 0) mem) loc))
    (loc (s '%652 (load-double '(t . 0) mem) loc))
    (loc (s '%653 (load-double '(t . 0) mem) loc))
    (loc (s '%654 (load-double '(t . 0) mem) loc))
    (loc (s '%655 (fmul-double (g '%654 loc) #x3E66376972BEA4D0) loc))
    (loc (s '%656 (fadd-double #xBEBBBD41C5D26BF1 (g '%655 loc)) loc))
    (loc (s '%657 (fmul-double (g '%653 loc) (g '%656 loc)) loc))
    (loc (s '%658 (fadd-double #x3F11566AAF25DE2C (g '%657 loc)) loc))
    (loc (s '%659 (fmul-double (g '%652 loc) (g '%658 loc)) loc))
    (loc (s '%660 (fadd-double #xBF66C16C16BEBD93 (g '%659 loc)) loc))
    (loc (s '%661 (fmul-double (g '%651 loc) (g '%660 loc)) loc))
    (loc (s '%662 (fadd-double #x3FC555555555553E (g '%661 loc)) loc))
    (loc (s '%663 (fmul-double (g '%650 loc) (g '%662 loc)) loc))
    (loc (s '%664 (fsub-double (g '%649 loc) (g '%663 loc)) loc))
    (mem (store-double (g '%664 loc) '(t1 . 0) mem))
    (loc (s '%665 (load-double '(z . 0) mem) loc))
    (loc (s '%666 (load-double '(t1 . 0) mem) loc))
    (loc (s '%667 (fmul-double (g '%665 loc) (g '%666 loc)) loc))
    (loc (s '%668 (load-double '(t1 . 0) mem) loc))
    (loc (s '%669 (fsub-double (g '%668 loc) #x4000000000000000) loc))
    (loc (s '%670 (fdiv-double (g '%667 loc) (g '%669 loc)) loc))
    (loc (s '%671 (load-double '(w . 0) mem) loc))
    (loc (s '%672 (load-double '(z . 0) mem) loc))
    (loc (s '%673 (load-double '(w . 0) mem) loc))
    (loc (s '%674 (fmul-double (g '%672 loc) (g '%673 loc)) loc))
    (loc (s '%675 (fadd-double (g '%671 loc) (g '%674 loc)) loc))
    (loc (s '%676 (fsub-double (g '%670 loc) (g '%675 loc)) loc))
    (mem (store-double (g '%676 loc) '(r . 0) mem))
    (loc (s '%677 (load-double '(r . 0) mem) loc))
    (loc (s '%678 (load-double '(z . 0) mem) loc))
    (loc (s '%679 (fsub-double (g '%677 loc) (g '%678 loc)) loc))
    (loc (s '%680 (fsub-double #x3ff0000000000000 (g '%679 loc)) loc))
    (mem (store-double (g '%680 loc) '(z . 0) mem))
    (loc (s '%681 (bitcast-double*-to-i32* '(z . 0)) loc))
    (loc (s '%682 (getelementptr-i32 (g '%681 loc) 1) loc))
    (loc (s '%683 (load-i32 (g '%682 loc) mem) loc))
    (mem (store-i32 (g '%683 loc) '(j . 0) mem))
    (loc (s '%684 (load-i32 '(n . 0) mem) loc))
    (loc (s '%685 (shl-i32 (g '%684 loc) 20) loc))
    (loc (s '%686 (load-i32 '(j . 0) mem) loc))
    (loc (s '%687 (add-i32 (g '%686 loc) (g '%685 loc)) loc))
    (mem (store-i32 (g '%687 loc) '(j . 0) mem))
    (loc (s '%688 (load-i32 '(j . 0) mem) loc))
    (loc (s '%689 (ashr-i32 (g '%688 loc) 20) loc))
    (loc (s '%690 (icmp-sle-i32 (g '%689 loc) 0) loc)))
  (case (g '%690 loc)
    (-1 (mv '@__ieee754_pow-%691-bb mem loc))
    ( 0 (mv '@__ieee754_pow-%695-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_pow-%691-bb (mem loc)
  (b* (
    (loc (s '%692 (load-double '(z . 0) mem) loc))
    (loc (s '%693 (load-i32 '(n . 0) mem) loc))
    (loc (s '%694 (@scalbn (g '%692 loc) (g '%693 loc)) loc))
    (mem (store-double (g '%694 loc) '(z . 0) mem)))
  (mv '@__ieee754_pow-%702-bb mem loc)))

(defund @__ieee754_pow-%695-bb (mem loc)
  (b* (
    (loc (s '%696 (load-i32 '(n . 0) mem) loc))
    (loc (s '%697 (shl-i32 (g '%696 loc) 20) loc))
    (loc (s '%698 (bitcast-double*-to-i32* '(z . 0)) loc))
    (loc (s '%699 (getelementptr-i32 (g '%698 loc) 1) loc))
    (loc (s '%700 (load-i32 (g '%699 loc) mem) loc))
    (loc (s '%701 (add-i32 (g '%700 loc) (g '%697 loc)) loc))
    (mem (store-i32 (g '%701 loc) (g '%699 loc) mem)))
  (mv '@__ieee754_pow-%702-bb mem loc)))

(defund @__ieee754_pow-%702-bb (mem loc)
  (b* (
    (loc (s '%703 (load-double '(s . 0) mem) loc))
    (loc (s '%704 (load-double '(z . 0) mem) loc))
    (loc (s '%705 (fmul-double (g '%703 loc) (g '%704 loc)) loc))
    (mem (store-double (g '%705 loc) '(ret . 0) mem)))
  (mv '@__ieee754_pow-%706-bb mem loc)))

(defund @__ieee754_pow-%706-bb (mem loc)
  (b* (
    (loc (s '%707 (load-double '(ret . 0) mem) loc)))
  (mv 'ret mem loc)))

(defund @__ieee754_pow-step (label mem loc)
  (case label
    (%-0 (@__ieee754_pow-%0-bb mem loc))
    (%-27 (@__ieee754_pow-%27-bb mem loc))
    (%-28 (@__ieee754_pow-%28-bb mem loc))
    (%-31 (@__ieee754_pow-%31-bb mem loc))
    (%-34 (@__ieee754_pow-%34-bb mem loc))
    (%-37 (@__ieee754_pow-%37-bb mem loc))
    (%-40 (@__ieee754_pow-%40-bb mem loc))
    (%-43 (@__ieee754_pow-%43-bb mem loc))
    (%-46 (@__ieee754_pow-%46-bb mem loc))
    (%-50 (@__ieee754_pow-%50-bb mem loc))
    (%-53 (@__ieee754_pow-%53-bb mem loc))
    (%-56 (@__ieee754_pow-%56-bb mem loc))
    (%-57 (@__ieee754_pow-%57-bb mem loc))
    (%-60 (@__ieee754_pow-%60-bb mem loc))
    (%-66 (@__ieee754_pow-%66-bb mem loc))
    (%-77 (@__ieee754_pow-%77-bb mem loc))
    (%-81 (@__ieee754_pow-%81-bb mem loc))
    (%-82 (@__ieee754_pow-%82-bb mem loc))
    (%-85 (@__ieee754_pow-%85-bb mem loc))
    (%-96 (@__ieee754_pow-%96-bb mem loc))
    (%-100 (@__ieee754_pow-%100-bb mem loc))
    (%-101 (@__ieee754_pow-%101-bb mem loc))
    (%-102 (@__ieee754_pow-%102-bb mem loc))
    (%-103 (@__ieee754_pow-%103-bb mem loc))
    (%-104 (@__ieee754_pow-%104-bb mem loc))
    (%-105 (@__ieee754_pow-%105-bb mem loc))
    (%-108 (@__ieee754_pow-%108-bb mem loc))
    (%-111 (@__ieee754_pow-%111-bb mem loc))
    (%-117 (@__ieee754_pow-%117-bb mem loc))
    (%-121 (@__ieee754_pow-%121-bb mem loc))
    (%-124 (@__ieee754_pow-%124-bb mem loc))
    (%-127 (@__ieee754_pow-%127-bb mem loc))
    (%-129 (@__ieee754_pow-%129-bb mem loc))
    (%-130 (@__ieee754_pow-%130-bb mem loc))
    (%-132 (@__ieee754_pow-%132-bb mem loc))
    (%-135 (@__ieee754_pow-%135-bb mem loc))
    (%-138 (@__ieee754_pow-%138-bb mem loc))
    (%-139 (@__ieee754_pow-%139-bb mem loc))
    (%-141 (@__ieee754_pow-%141-bb mem loc))
    (%-144 (@__ieee754_pow-%144-bb mem loc))
    (%-147 (@__ieee754_pow-%147-bb mem loc))
    (%-150 (@__ieee754_pow-%150-bb mem loc))
    (%-152 (@__ieee754_pow-%152-bb mem loc))
    (%-155 (@__ieee754_pow-%155-bb mem loc))
    (%-159 (@__ieee754_pow-%159-bb mem loc))
    (%-162 (@__ieee754_pow-%162-bb mem loc))
    (%-165 (@__ieee754_pow-%165-bb mem loc))
    (%-168 (@__ieee754_pow-%168-bb mem loc))
    (%-169 (@__ieee754_pow-%169-bb mem loc))
    (%-170 (@__ieee754_pow-%170-bb mem loc))
    (%-175 (@__ieee754_pow-%175-bb mem loc))
    (%-178 (@__ieee754_pow-%178-bb mem loc))
    (%-181 (@__ieee754_pow-%181-bb mem loc))
    (%-184 (@__ieee754_pow-%184-bb mem loc))
    (%-188 (@__ieee754_pow-%188-bb mem loc))
    (%-191 (@__ieee754_pow-%191-bb mem loc))
    (%-194 (@__ieee754_pow-%194-bb mem loc))
    (%-200 (@__ieee754_pow-%200-bb mem loc))
    (%-208 (@__ieee754_pow-%208-bb mem loc))
    (%-211 (@__ieee754_pow-%211-bb mem loc))
    (%-214 (@__ieee754_pow-%214-bb mem loc))
    (%-215 (@__ieee754_pow-%215-bb mem loc))
    (%-216 (@__ieee754_pow-%216-bb mem loc))
    (%-218 (@__ieee754_pow-%218-bb mem loc))
    (%-219 (@__ieee754_pow-%219-bb mem loc))
    (%-227 (@__ieee754_pow-%227-bb mem loc))
    (%-235 (@__ieee754_pow-%235-bb mem loc))
    (%-241 (@__ieee754_pow-%241-bb mem loc))
    (%-242 (@__ieee754_pow-%242-bb mem loc))
    (%-245 (@__ieee754_pow-%245-bb mem loc))
    (%-248 (@__ieee754_pow-%248-bb mem loc))
    (%-251 (@__ieee754_pow-%251-bb mem loc))
    (%-255 (@__ieee754_pow-%255-bb mem loc))
    (%-258 (@__ieee754_pow-%258-bb mem loc))
    (%-262 (@__ieee754_pow-%262-bb mem loc))
    (%-263 (@__ieee754_pow-%263-bb mem loc))
    (%-266 (@__ieee754_pow-%266-bb mem loc))
    (%-269 (@__ieee754_pow-%269-bb mem loc))
    (%-273 (@__ieee754_pow-%273-bb mem loc))
    (%-277 (@__ieee754_pow-%277-bb mem loc))
    (%-279 (@__ieee754_pow-%279-bb mem loc))
    (%-282 (@__ieee754_pow-%282-bb mem loc))
    (%-285 (@__ieee754_pow-%285-bb mem loc))
    (%-289 (@__ieee754_pow-%289-bb mem loc))
    (%-293 (@__ieee754_pow-%293-bb mem loc))
    (%-295 (@__ieee754_pow-%295-bb mem loc))
    (%-324 (@__ieee754_pow-%324-bb mem loc))
    (%-327 (@__ieee754_pow-%327-bb mem loc))
    (%-335 (@__ieee754_pow-%335-bb mem loc))
    (%-347 (@__ieee754_pow-%347-bb mem loc))
    (%-348 (@__ieee754_pow-%348-bb mem loc))
    (%-351 (@__ieee754_pow-%351-bb mem loc))
    (%-352 (@__ieee754_pow-%352-bb mem loc))
    (%-357 (@__ieee754_pow-%357-bb mem loc))
    (%-358 (@__ieee754_pow-%358-bb mem loc))
    (%-507 (@__ieee754_pow-%507-bb mem loc))
    (%-532 (@__ieee754_pow-%532-bb mem loc))
    (%-538 (@__ieee754_pow-%538-bb mem loc))
    (%-542 (@__ieee754_pow-%542-bb mem loc))
    (%-549 (@__ieee754_pow-%549-bb mem loc))
    (%-553 (@__ieee754_pow-%553-bb mem loc))
    (%-554 (@__ieee754_pow-%554-bb mem loc))
    (%-555 (@__ieee754_pow-%555-bb mem loc))
    (%-559 (@__ieee754_pow-%559-bb mem loc))
    (%-565 (@__ieee754_pow-%565-bb mem loc))
    (%-569 (@__ieee754_pow-%569-bb mem loc))
    (%-575 (@__ieee754_pow-%575-bb mem loc))
    (%-579 (@__ieee754_pow-%579-bb mem loc))
    (%-580 (@__ieee754_pow-%580-bb mem loc))
    (%-581 (@__ieee754_pow-%581-bb mem loc))
    (%-582 (@__ieee754_pow-%582-bb mem loc))
    (%-590 (@__ieee754_pow-%590-bb mem loc))
    (%-615 (@__ieee754_pow-%615-bb mem loc))
    (%-618 (@__ieee754_pow-%618-bb mem loc))
    (%-622 (@__ieee754_pow-%622-bb mem loc))
    (%-691 (@__ieee754_pow-%691-bb mem loc))
    (%-695 (@__ieee754_pow-%695-bb mem loc))
    (%-702 (@__ieee754_pow-%702-bb mem loc))
    (%-706 (@__ieee754_pow-%706-bb mem loc))
    (otherwise (mv nil mem loc))))

(defund @__ieee754_pow-steps (label mem loc n)
  (declare (xargs :measure (nfix n)))
  (if (equal label 'ret)
      (g '%707 loc)
    (if (zp n) nil
      (mv-let
        (label mem loc)
        (@__ieee754_pow-step label mem loc)
        (@__ieee754_pow-steps label mem loc (1- n))))))

(defund @__ieee754_pow (%x %y)
  (declare (ignore %x %y))
   nil)
