(in-package "ACL2")
(include-book "../llvm")
(include-book "s_fabs")
(include-book "w_sqrt")

(defconst *__ieee754_asin-globals* '())

(defund @__ieee754_asin-%0-bb (mem loc)
  (b* (
    (mem (alloca-double 'ret 1 mem))
    (mem (alloca-double 'x 1 mem))
    (mem (alloca-double 't 1 mem))
    (mem (alloca-double 'w 1 mem))
    (mem (alloca-double 'p 1 mem))
    (mem (alloca-double 'q 1 mem))
    (mem (alloca-double 'c 1 mem))
    (mem (alloca-double 'r 1 mem))
    (mem (alloca-double 's 1 mem))
    (mem (alloca-i32 'hx 1 mem))
    (mem (alloca-i32 'ix 1 mem))
    (mem (store-double (g '%x loc) '(x . 0) mem))
    (loc (s '%3 (bitcast-double*-to-i32* '(x . 0)) loc))
    (loc (s '%4 (getelementptr-i32 (g '%3 loc) 1) loc))
    (loc (s '%5 (load-i32 (g '%4 loc) mem) loc))
    (mem (store-i32 (g '%5 loc) '(hx . 0) mem))
    (loc (s '%6 (load-i32 '(hx . 0) mem) loc))
    (loc (s '%7 (and-i32 (g '%6 loc) 2147483647) loc))
    (mem (store-i32 (g '%7 loc) '(ix . 0) mem))
    (loc (s '%8 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%9 (icmp-sge-i32 (g '%8 loc) 1072693248) loc)))
  (case (g '%9 loc)
    (-1 (mv '@__ieee754_asin-%10-bb mem loc))
    ( 0 (mv '@__ieee754_asin-%31-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_asin-%10-bb (mem loc)
  (b* (
    (loc (s '%11 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%12 (sub-i32 (g '%11 loc) 1072693248) loc))
    (loc (s '%13 (bitcast-double*-to-i32* '(x . 0)) loc))
    (loc (s '%14 (load-i32 (g '%13 loc) mem) loc))
    (loc (s '%15 (or-i32 (g '%12 loc) (g '%14 loc)) loc))
    (loc (s '%16 (icmp-eq-i32 (g '%15 loc) 0) loc)))
  (case (g '%16 loc)
    (-1 (mv '@__ieee754_asin-%17-bb mem loc))
    ( 0 (mv '@__ieee754_asin-%23-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_asin-%17-bb (mem loc)
  (b* (
    (loc (s '%18 (load-double '(x . 0) mem) loc))
    (loc (s '%19 (fmul-double (g '%18 loc) #x3FF921FB54442D18) loc))
    (loc (s '%20 (load-double '(x . 0) mem) loc))
    (loc (s '%21 (fmul-double (g '%20 loc) #x3C91A62633145C07) loc))
    (loc (s '%22 (fadd-double (g '%19 loc) (g '%21 loc)) loc))
    (mem (store-double (g '%22 loc) '(ret . 0) mem)))
  (mv '@__ieee754_asin-%176-bb mem loc)))

(defund @__ieee754_asin-%23-bb (mem loc)
  (b* (
    (loc (s '%24 (load-double '(x . 0) mem) loc))
    (loc (s '%25 (load-double '(x . 0) mem) loc))
    (loc (s '%26 (fsub-double (g '%24 loc) (g '%25 loc)) loc))
    (loc (s '%27 (load-double '(x . 0) mem) loc))
    (loc (s '%28 (load-double '(x . 0) mem) loc))
    (loc (s '%29 (fsub-double (g '%27 loc) (g '%28 loc)) loc))
    (loc (s '%30 (fdiv-double (g '%26 loc) (g '%29 loc)) loc))
    (mem (store-double (g '%30 loc) '(ret . 0) mem)))
  (mv '@__ieee754_asin-%176-bb mem loc)))

(defund @__ieee754_asin-%31-bb (mem loc)
  (b* (
    (loc (s '%32 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%33 (icmp-slt-i32 (g '%32 loc) 1071644672) loc)))
  (case (g '%33 loc)
    (-1 (mv '@__ieee754_asin-%34-bb mem loc))
    ( 0 (mv '@__ieee754_asin-%86-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_asin-%34-bb (mem loc)
  (b* (
    (loc (s '%35 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%36 (icmp-slt-i32 (g '%35 loc) 1044381696) loc)))
  (case (g '%36 loc)
    (-1 (mv '@__ieee754_asin-%37-bb mem loc))
    ( 0 (mv '@__ieee754_asin-%44-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_asin-%37-bb (mem loc)
  (b* (
    (loc (s '%38 (load-double '(x . 0) mem) loc))
    (loc (s '%39 (fadd-double #x7e37e43c8800759c (g '%38 loc)) loc))
    (loc (s '%40 (fcmp-ogt-double (g '%39 loc) #x3ff0000000000000) loc)))
  (case (g '%40 loc)
    (-1 (mv '@__ieee754_asin-%41-bb mem loc))
    ( 0 (mv '@__ieee754_asin-%43-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_asin-%41-bb (mem loc)
  (b* (
    (loc (s '%42 (load-double '(x . 0) mem) loc))
    (mem (store-double (g '%42 loc) '(ret . 0) mem)))
  (mv '@__ieee754_asin-%176-bb mem loc)))

(defund @__ieee754_asin-%43-bb (mem loc)
  (b* ()
  (mv '@__ieee754_asin-%48-bb mem loc)))

(defund @__ieee754_asin-%44-bb (mem loc)
  (b* (
    (loc (s '%45 (load-double '(x . 0) mem) loc))
    (loc (s '%46 (load-double '(x . 0) mem) loc))
    (loc (s '%47 (fmul-double (g '%45 loc) (g '%46 loc)) loc))
    (mem (store-double (g '%47 loc) '(t . 0) mem)))
  (mv '@__ieee754_asin-%48-bb mem loc)))

(defund @__ieee754_asin-%48-bb (mem loc)
  (b* (
    (loc (s '%49 (load-double '(t . 0) mem) loc))
    (loc (s '%50 (load-double '(t . 0) mem) loc))
    (loc (s '%51 (load-double '(t . 0) mem) loc))
    (loc (s '%52 (load-double '(t . 0) mem) loc))
    (loc (s '%53 (load-double '(t . 0) mem) loc))
    (loc (s '%54 (load-double '(t . 0) mem) loc))
    (loc (s '%55 (fmul-double (g '%54 loc) #x3F023DE10DFDF709) loc))
    (loc (s '%56 (fadd-double #x3F49EFE07501B288 (g '%55 loc)) loc))
    (loc (s '%57 (fmul-double (g '%53 loc) (g '%56 loc)) loc))
    (loc (s '%58 (fadd-double #xBFA48228B5688F3B (g '%57 loc)) loc))
    (loc (s '%59 (fmul-double (g '%52 loc) (g '%58 loc)) loc))
    (loc (s '%60 (fadd-double #x3FC9C1550E884455 (g '%59 loc)) loc))
    (loc (s '%61 (fmul-double (g '%51 loc) (g '%60 loc)) loc))
    (loc (s '%62 (fadd-double #xBFD4D61203EB6F7D (g '%61 loc)) loc))
    (loc (s '%63 (fmul-double (g '%50 loc) (g '%62 loc)) loc))
    (loc (s '%64 (fadd-double #x3FC5555555555555 (g '%63 loc)) loc))
    (loc (s '%65 (fmul-double (g '%49 loc) (g '%64 loc)) loc))
    (mem (store-double (g '%65 loc) '(p . 0) mem))
    (loc (s '%66 (load-double '(t . 0) mem) loc))
    (loc (s '%67 (load-double '(t . 0) mem) loc))
    (loc (s '%68 (load-double '(t . 0) mem) loc))
    (loc (s '%69 (load-double '(t . 0) mem) loc))
    (loc (s '%70 (fmul-double (g '%69 loc) #x3FB3B8C5B12E9282) loc))
    (loc (s '%71 (fadd-double #xBFE6066C1B8D0159 (g '%70 loc)) loc))
    (loc (s '%72 (fmul-double (g '%68 loc) (g '%71 loc)) loc))
    (loc (s '%73 (fadd-double #x40002AE59C598AC8 (g '%72 loc)) loc))
    (loc (s '%74 (fmul-double (g '%67 loc) (g '%73 loc)) loc))
    (loc (s '%75 (fadd-double #xC0033A271C8A2D4B (g '%74 loc)) loc))
    (loc (s '%76 (fmul-double (g '%66 loc) (g '%75 loc)) loc))
    (loc (s '%77 (fadd-double #x3ff0000000000000 (g '%76 loc)) loc))
    (mem (store-double (g '%77 loc) '(q . 0) mem))
    (loc (s '%78 (load-double '(p . 0) mem) loc))
    (loc (s '%79 (load-double '(q . 0) mem) loc))
    (loc (s '%80 (fdiv-double (g '%78 loc) (g '%79 loc)) loc))
    (mem (store-double (g '%80 loc) '(w . 0) mem))
    (loc (s '%81 (load-double '(x . 0) mem) loc))
    (loc (s '%82 (load-double '(x . 0) mem) loc))
    (loc (s '%83 (load-double '(w . 0) mem) loc))
    (loc (s '%84 (fmul-double (g '%82 loc) (g '%83 loc)) loc))
    (loc (s '%85 (fadd-double (g '%81 loc) (g '%84 loc)) loc))
    (mem (store-double (g '%85 loc) '(ret . 0) mem)))
  (mv '@__ieee754_asin-%176-bb mem loc)))

(defund @__ieee754_asin-%86-bb (mem loc)
  (b* ()
  (mv '@__ieee754_asin-%87-bb mem loc)))

(defund @__ieee754_asin-%87-bb (mem loc)
  (b* (
    (loc (s '%88 (load-double '(x . 0) mem) loc))
    (loc (s '%89 (@fabs (g '%88 loc)) loc))
    (loc (s '%90 (fsub-double #x3ff0000000000000 (g '%89 loc)) loc))
    (mem (store-double (g '%90 loc) '(w . 0) mem))
    (loc (s '%91 (load-double '(w . 0) mem) loc))
    (loc (s '%92 (fmul-double (g '%91 loc) #x3fe0000000000000) loc))
    (mem (store-double (g '%92 loc) '(t . 0) mem))
    (loc (s '%93 (load-double '(t . 0) mem) loc))
    (loc (s '%94 (load-double '(t . 0) mem) loc))
    (loc (s '%95 (load-double '(t . 0) mem) loc))
    (loc (s '%96 (load-double '(t . 0) mem) loc))
    (loc (s '%97 (load-double '(t . 0) mem) loc))
    (loc (s '%98 (load-double '(t . 0) mem) loc))
    (loc (s '%99 (fmul-double (g '%98 loc) #x3F023DE10DFDF709) loc))
    (loc (s '%100 (fadd-double #x3F49EFE07501B288 (g '%99 loc)) loc))
    (loc (s '%101 (fmul-double (g '%97 loc) (g '%100 loc)) loc))
    (loc (s '%102 (fadd-double #xBFA48228B5688F3B (g '%101 loc)) loc))
    (loc (s '%103 (fmul-double (g '%96 loc) (g '%102 loc)) loc))
    (loc (s '%104 (fadd-double #x3FC9C1550E884455 (g '%103 loc)) loc))
    (loc (s '%105 (fmul-double (g '%95 loc) (g '%104 loc)) loc))
    (loc (s '%106 (fadd-double #xBFD4D61203EB6F7D (g '%105 loc)) loc))
    (loc (s '%107 (fmul-double (g '%94 loc) (g '%106 loc)) loc))
    (loc (s '%108 (fadd-double #x3FC5555555555555 (g '%107 loc)) loc))
    (loc (s '%109 (fmul-double (g '%93 loc) (g '%108 loc)) loc))
    (mem (store-double (g '%109 loc) '(p . 0) mem))
    (loc (s '%110 (load-double '(t . 0) mem) loc))
    (loc (s '%111 (load-double '(t . 0) mem) loc))
    (loc (s '%112 (load-double '(t . 0) mem) loc))
    (loc (s '%113 (load-double '(t . 0) mem) loc))
    (loc (s '%114 (fmul-double (g '%113 loc) #x3FB3B8C5B12E9282) loc))
    (loc (s '%115 (fadd-double #xBFE6066C1B8D0159 (g '%114 loc)) loc))
    (loc (s '%116 (fmul-double (g '%112 loc) (g '%115 loc)) loc))
    (loc (s '%117 (fadd-double #x40002AE59C598AC8 (g '%116 loc)) loc))
    (loc (s '%118 (fmul-double (g '%111 loc) (g '%117 loc)) loc))
    (loc (s '%119 (fadd-double #xC0033A271C8A2D4B (g '%118 loc)) loc))
    (loc (s '%120 (fmul-double (g '%110 loc) (g '%119 loc)) loc))
    (loc (s '%121 (fadd-double #x3ff0000000000000 (g '%120 loc)) loc))
    (mem (store-double (g '%121 loc) '(q . 0) mem))
    (loc (s '%122 (load-double '(t . 0) mem) loc))
    (loc (s '%123 (@sqrt (g '%122 loc)) loc))
    (mem (store-double (g '%123 loc) '(s . 0) mem))
    (loc (s '%124 (load-i32 '(ix . 0) mem) loc))
    (loc (s '%125 (icmp-sge-i32 (g '%124 loc) 1072640819) loc)))
  (case (g '%125 loc)
    (-1 (mv '@__ieee754_asin-%126-bb mem loc))
    ( 0 (mv '@__ieee754_asin-%138-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_asin-%126-bb (mem loc)
  (b* (
    (loc (s '%127 (load-double '(p . 0) mem) loc))
    (loc (s '%128 (load-double '(q . 0) mem) loc))
    (loc (s '%129 (fdiv-double (g '%127 loc) (g '%128 loc)) loc))
    (mem (store-double (g '%129 loc) '(w . 0) mem))
    (loc (s '%130 (load-double '(s . 0) mem) loc))
    (loc (s '%131 (load-double '(s . 0) mem) loc))
    (loc (s '%132 (load-double '(w . 0) mem) loc))
    (loc (s '%133 (fmul-double (g '%131 loc) (g '%132 loc)) loc))
    (loc (s '%134 (fadd-double (g '%130 loc) (g '%133 loc)) loc))
    (loc (s '%135 (fmul-double #x4000000000000000 (g '%134 loc)) loc))
    (loc (s '%136 (fsub-double (g '%135 loc) #x3C91A62633145C07) loc))
    (loc (s '%137 (fsub-double #x3FF921FB54442D18 (g '%136 loc)) loc))
    (mem (store-double (g '%137 loc) '(t . 0) mem)))
  (mv '@__ieee754_asin-%168-bb mem loc)))

(defund @__ieee754_asin-%138-bb (mem loc)
  (b* (
    (loc (s '%139 (load-double '(s . 0) mem) loc))
    (mem (store-double (g '%139 loc) '(w . 0) mem))
    (loc (s '%140 (bitcast-double*-to-i32* '(w . 0)) loc))
    (mem (store-i32 0 (g '%140 loc) mem))
    (loc (s '%141 (load-double '(t . 0) mem) loc))
    (loc (s '%142 (load-double '(w . 0) mem) loc))
    (loc (s '%143 (load-double '(w . 0) mem) loc))
    (loc (s '%144 (fmul-double (g '%142 loc) (g '%143 loc)) loc))
    (loc (s '%145 (fsub-double (g '%141 loc) (g '%144 loc)) loc))
    (loc (s '%146 (load-double '(s . 0) mem) loc))
    (loc (s '%147 (load-double '(w . 0) mem) loc))
    (loc (s '%148 (fadd-double (g '%146 loc) (g '%147 loc)) loc))
    (loc (s '%149 (fdiv-double (g '%145 loc) (g '%148 loc)) loc))
    (mem (store-double (g '%149 loc) '(c . 0) mem))
    (loc (s '%150 (load-double '(p . 0) mem) loc))
    (loc (s '%151 (load-double '(q . 0) mem) loc))
    (loc (s '%152 (fdiv-double (g '%150 loc) (g '%151 loc)) loc))
    (mem (store-double (g '%152 loc) '(r . 0) mem))
    (loc (s '%153 (load-double '(s . 0) mem) loc))
    (loc (s '%154 (fmul-double #x4000000000000000 (g '%153 loc)) loc))
    (loc (s '%155 (load-double '(r . 0) mem) loc))
    (loc (s '%156 (fmul-double (g '%154 loc) (g '%155 loc)) loc))
    (loc (s '%157 (load-double '(c . 0) mem) loc))
    (loc (s '%158 (fmul-double #x4000000000000000 (g '%157 loc)) loc))
    (loc (s '%159 (fsub-double #x3C91A62633145C07 (g '%158 loc)) loc))
    (loc (s '%160 (fsub-double (g '%156 loc) (g '%159 loc)) loc))
    (mem (store-double (g '%160 loc) '(p . 0) mem))
    (loc (s '%161 (load-double '(w . 0) mem) loc))
    (loc (s '%162 (fmul-double #x4000000000000000 (g '%161 loc)) loc))
    (loc (s '%163 (fsub-double #x3FE921FB54442D18 (g '%162 loc)) loc))
    (mem (store-double (g '%163 loc) '(q . 0) mem))
    (loc (s '%164 (load-double '(p . 0) mem) loc))
    (loc (s '%165 (load-double '(q . 0) mem) loc))
    (loc (s '%166 (fsub-double (g '%164 loc) (g '%165 loc)) loc))
    (loc (s '%167 (fsub-double #x3FE921FB54442D18 (g '%166 loc)) loc))
    (mem (store-double (g '%167 loc) '(t . 0) mem)))
  (mv '@__ieee754_asin-%168-bb mem loc)))

(defund @__ieee754_asin-%168-bb (mem loc)
  (b* (
    (loc (s '%169 (load-i32 '(hx . 0) mem) loc))
    (loc (s '%170 (icmp-sgt-i32 (g '%169 loc) 0) loc)))
  (case (g '%170 loc)
    (-1 (mv '@__ieee754_asin-%171-bb mem loc))
    ( 0 (mv '@__ieee754_asin-%173-bb mem loc))
    (otherwise (mv nil mem loc)))))

(defund @__ieee754_asin-%171-bb (mem loc)
  (b* (
    (loc (s '%172 (load-double '(t . 0) mem) loc))
    (mem (store-double (g '%172 loc) '(ret . 0) mem)))
  (mv '@__ieee754_asin-%176-bb mem loc)))

(defund @__ieee754_asin-%173-bb (mem loc)
  (b* (
    (loc (s '%174 (load-double '(t . 0) mem) loc))
    (loc (s '%175 (fsub-double #x8000000000000000 (g '%174 loc)) loc))
    (mem (store-double (g '%175 loc) '(ret . 0) mem)))
  (mv '@__ieee754_asin-%176-bb mem loc)))

(defund @__ieee754_asin-%176-bb (mem loc)
  (b* (
    (loc (s '%177 (load-double '(ret . 0) mem) loc)))
  (mv 'ret mem loc)))

(defund @__ieee754_asin-step (label mem loc)
  (case label
    (%-0 (@__ieee754_asin-%0-bb mem loc))
    (%-10 (@__ieee754_asin-%10-bb mem loc))
    (%-17 (@__ieee754_asin-%17-bb mem loc))
    (%-23 (@__ieee754_asin-%23-bb mem loc))
    (%-31 (@__ieee754_asin-%31-bb mem loc))
    (%-34 (@__ieee754_asin-%34-bb mem loc))
    (%-37 (@__ieee754_asin-%37-bb mem loc))
    (%-41 (@__ieee754_asin-%41-bb mem loc))
    (%-43 (@__ieee754_asin-%43-bb mem loc))
    (%-44 (@__ieee754_asin-%44-bb mem loc))
    (%-48 (@__ieee754_asin-%48-bb mem loc))
    (%-86 (@__ieee754_asin-%86-bb mem loc))
    (%-87 (@__ieee754_asin-%87-bb mem loc))
    (%-126 (@__ieee754_asin-%126-bb mem loc))
    (%-138 (@__ieee754_asin-%138-bb mem loc))
    (%-168 (@__ieee754_asin-%168-bb mem loc))
    (%-171 (@__ieee754_asin-%171-bb mem loc))
    (%-173 (@__ieee754_asin-%173-bb mem loc))
    (%-176 (@__ieee754_asin-%176-bb mem loc))
    (otherwise (mv nil mem loc))))

(defund @__ieee754_asin-steps (label mem loc n)
  (declare (xargs :measure (nfix n)))
  (if (equal label 'ret)
      (g '%177 loc)
    (if (zp n) nil
      (mv-let
        (label mem loc)
        (@__ieee754_asin-step label mem loc)
        (@__ieee754_asin-steps label mem loc (1- n))))))

(defund @__ieee754_asin (%x)
  (declare (ignore %x))
   nil)
