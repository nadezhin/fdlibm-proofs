; ModuleID = '../jdk8/src/s_cbrt.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: nounwind uwtable
define double @jcbrt(double %x) #0 {
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %hx = alloca i32, align 4
  %r = alloca double, align 8
  %s = alloca double, align 8
  %t = alloca double, align 8
  %w = alloca double, align 8
  %sign = alloca i32, align 4
  store double %x, double* %2, align 8
  store double 0.000000e+00, double* %t, align 8
  %3 = bitcast double* %2 to i32*
  %4 = getelementptr inbounds i32, i32* %3, i64 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %hx, align 4
  %6 = load i32, i32* %hx, align 4
  %7 = and i32 %6, -2147483648
  store i32 %7, i32* %sign, align 4
  %8 = load i32, i32* %sign, align 4
  %9 = load i32, i32* %hx, align 4
  %10 = xor i32 %9, %8
  store i32 %10, i32* %hx, align 4
  %11 = load i32, i32* %hx, align 4
  %12 = icmp sge i32 %11, 2146435072
  br i1 %12, label %13, label %17

; <label>:13                                      ; preds = %0
  %14 = load double, double* %2, align 8
  %15 = load double, double* %2, align 8
  %16 = fadd double %14, %15
  store double %16, double* %1
  br label %101

; <label>:17                                      ; preds = %0
  %18 = load i32, i32* %hx, align 4
  %19 = bitcast double* %2 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = or i32 %18, %20
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

; <label>:23                                      ; preds = %17
  %24 = load double, double* %2, align 8
  store double %24, double* %1
  br label %101

; <label>:25                                      ; preds = %17
  %26 = load i32, i32* %hx, align 4
  %27 = bitcast double* %2 to i32*
  %28 = getelementptr inbounds i32, i32* %27, i64 1
  store i32 %26, i32* %28, align 4
  %29 = load i32, i32* %hx, align 4
  %30 = icmp slt i32 %29, 1048576
  br i1 %30, label %31, label %44

; <label>:31                                      ; preds = %25
  %32 = bitcast double* %t to i32*
  %33 = getelementptr inbounds i32, i32* %32, i64 1
  store i32 1129316352, i32* %33, align 4
  %34 = load double, double* %2, align 8
  %35 = load double, double* %t, align 8
  %36 = fmul double %35, %34
  store double %36, double* %t, align 8
  %37 = bitcast double* %t to i32*
  %38 = getelementptr inbounds i32, i32* %37, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = sdiv i32 %39, 3
  %41 = add i32 %40, 696219795
  %42 = bitcast double* %t to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 1
  store i32 %41, i32* %43, align 4
  br label %50

; <label>:44                                      ; preds = %25
  %45 = load i32, i32* %hx, align 4
  %46 = sdiv i32 %45, 3
  %47 = add i32 %46, 715094163
  %48 = bitcast double* %t to i32*
  %49 = getelementptr inbounds i32, i32* %48, i64 1
  store i32 %47, i32* %49, align 4
  br label %50

; <label>:50                                      ; preds = %44, %31
  %51 = load double, double* %t, align 8
  %52 = load double, double* %t, align 8
  %53 = fmul double %51, %52
  %54 = load double, double* %2, align 8
  %55 = fdiv double %53, %54
  store double %55, double* %r, align 8
  %56 = load double, double* %r, align 8
  %57 = load double, double* %t, align 8
  %58 = fmul double %56, %57
  %59 = fadd double 0x3FE15F15F15F15F1, %58
  store double %59, double* %s, align 8
  %60 = load double, double* %s, align 8
  %61 = fadd double %60, 0x3FF6A0EA0EA0EA0F
  %62 = load double, double* %s, align 8
  %63 = fdiv double 0xBFE691DE2532C834, %62
  %64 = fadd double %61, %63
  %65 = fdiv double 0x3FF9B6DB6DB6DB6E, %64
  %66 = fadd double 0x3FD6DB6DB6DB6DB7, %65
  %67 = load double, double* %t, align 8
  %68 = fmul double %67, %66
  store double %68, double* %t, align 8
  %69 = bitcast double* %t to i32*
  store i32 0, i32* %69, align 4
  %70 = bitcast double* %t to i32*
  %71 = getelementptr inbounds i32, i32* %70, i64 1
  %72 = load i32, i32* %71, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %71, align 4
  %74 = load double, double* %t, align 8
  %75 = load double, double* %t, align 8
  %76 = fmul double %74, %75
  store double %76, double* %s, align 8
  %77 = load double, double* %2, align 8
  %78 = load double, double* %s, align 8
  %79 = fdiv double %77, %78
  store double %79, double* %r, align 8
  %80 = load double, double* %t, align 8
  %81 = load double, double* %t, align 8
  %82 = fadd double %80, %81
  store double %82, double* %w, align 8
  %83 = load double, double* %r, align 8
  %84 = load double, double* %t, align 8
  %85 = fsub double %83, %84
  %86 = load double, double* %w, align 8
  %87 = load double, double* %r, align 8
  %88 = fadd double %86, %87
  %89 = fdiv double %85, %88
  store double %89, double* %r, align 8
  %90 = load double, double* %t, align 8
  %91 = load double, double* %t, align 8
  %92 = load double, double* %r, align 8
  %93 = fmul double %91, %92
  %94 = fadd double %90, %93
  store double %94, double* %t, align 8
  %95 = load i32, i32* %sign, align 4
  %96 = bitcast double* %t to i32*
  %97 = getelementptr inbounds i32, i32* %96, i64 1
  %98 = load i32, i32* %97, align 4
  %99 = or i32 %98, %95
  store i32 %99, i32* %97, align 4
  %100 = load double, double* %t, align 8
  store double %100, double* %1
  br label %101

; <label>:101                                     ; preds = %50, %23, %13
  %102 = load double, double* %1
  ret double %102
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.7.0-2ubuntu1 (tags/RELEASE_370/final) (based on LLVM 3.7.0)"}
