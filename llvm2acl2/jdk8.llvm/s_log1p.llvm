; ModuleID = '../jdk8/src/s_log1p.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@zero = internal global double 0.000000e+00, align 8

; Function Attrs: nounwind uwtable
define double @jlog1p(double %x) #0 {
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %hfsq = alloca double, align 8
  %f = alloca double, align 8
  %c = alloca double, align 8
  %s = alloca double, align 8
  %z = alloca double, align 8
  %R = alloca double, align 8
  %u = alloca double, align 8
  %k = alloca i32, align 4
  %hx = alloca i32, align 4
  %hu = alloca i32, align 4
  %ax = alloca i32, align 4
  store double %x, double* %2, align 8
  store double 0.000000e+00, double* %f, align 8
  store double 0.000000e+00, double* %c, align 8
  store i32 0, i32* %hu, align 4
  %3 = bitcast double* %2 to i32*
  %4 = getelementptr inbounds i32, i32* %3, i64 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %hx, align 4
  %6 = load i32, i32* %hx, align 4
  %7 = and i32 %6, 2147483647
  store i32 %7, i32* %ax, align 4
  store i32 1, i32* %k, align 4
  %8 = load i32, i32* %hx, align 4
  %9 = icmp slt i32 %8, 1071284858
  br i1 %9, label %10, label %59

; <label>:10                                      ; preds = %0
  %11 = load i32, i32* %ax, align 4
  %12 = icmp sge i32 %11, 1072693248
  br i1 %12, label %13, label %30

; <label>:13                                      ; preds = %10
  %14 = load double, double* %2, align 8
  %15 = fcmp oeq double %14, -1.000000e+00
  br i1 %15, label %16, label %22

; <label>:16                                      ; preds = %13
  %17 = load i32, i32* %hx, align 4
  %18 = icmp eq i32 %17, -1074790400
  br i1 %18, label %19, label %22

; <label>:19                                      ; preds = %16
  %20 = load double, double* @zero, align 8
  %21 = fdiv double 0xC350000000000000, %20
  store double %21, double* %1
  br label %242

; <label>:22                                      ; preds = %16, %13
  %23 = load double, double* %2, align 8
  %24 = load double, double* %2, align 8
  %25 = fsub double %23, %24
  %26 = load double, double* %2, align 8
  %27 = load double, double* %2, align 8
  %28 = fsub double %26, %27
  %29 = fdiv double %25, %28
  store double %29, double* %1
  br label %242

; <label>:30                                      ; preds = %10
  %31 = load i32, i32* %ax, align 4
  %32 = icmp slt i32 %31, 1042284544
  br i1 %32, label %33, label %50

; <label>:33                                      ; preds = %30
  %34 = load double, double* %2, align 8
  %35 = fadd double 0x4350000000000000, %34
  %36 = load double, double* @zero, align 8
  %37 = fcmp ogt double %35, %36
  br i1 %37, label %38, label %43

; <label>:38                                      ; preds = %33
  %39 = load i32, i32* %ax, align 4
  %40 = icmp slt i32 %39, 1016070144
  br i1 %40, label %41, label %43

; <label>:41                                      ; preds = %38
  %42 = load double, double* %2, align 8
  store double %42, double* %1
  br label %242

; <label>:43                                      ; preds = %38, %33
  %44 = load double, double* %2, align 8
  %45 = load double, double* %2, align 8
  %46 = load double, double* %2, align 8
  %47 = fmul double %45, %46
  %48 = fmul double %47, 5.000000e-01
  %49 = fsub double %44, %48
  store double %49, double* %1
  br label %242

; <label>:50                                      ; preds = %30
  %51 = load i32, i32* %hx, align 4
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %56, label %53

; <label>:53                                      ; preds = %50
  %54 = load i32, i32* %hx, align 4
  %55 = icmp sle i32 %54, -1076707645
  br i1 %55, label %56, label %58

; <label>:56                                      ; preds = %53, %50
  store i32 0, i32* %k, align 4
  %57 = load double, double* %2, align 8
  store double %57, double* %f, align 8
  store i32 1, i32* %hu, align 4
  br label %58

; <label>:58                                      ; preds = %56, %53
  br label %59

; <label>:59                                      ; preds = %58, %0
  %60 = load i32, i32* %hx, align 4
  %61 = icmp sge i32 %60, 2146435072
  br i1 %61, label %62, label %66

; <label>:62                                      ; preds = %59
  %63 = load double, double* %2, align 8
  %64 = load double, double* %2, align 8
  %65 = fadd double %63, %64
  store double %65, double* %1
  br label %242

; <label>:66                                      ; preds = %59
  %67 = load i32, i32* %k, align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %129

; <label>:69                                      ; preds = %66
  %70 = load i32, i32* %hx, align 4
  %71 = icmp slt i32 %70, 1128267776
  br i1 %71, label %72, label %98

; <label>:72                                      ; preds = %69
  %73 = load double, double* %2, align 8
  %74 = fadd double 1.000000e+00, %73
  store double %74, double* %u, align 8
  %75 = bitcast double* %u to i32*
  %76 = getelementptr inbounds i32, i32* %75, i64 1
  %77 = load i32, i32* %76, align 4
  store i32 %77, i32* %hu, align 4
  %78 = load i32, i32* %hu, align 4
  %79 = ashr i32 %78, 20
  %80 = sub nsw i32 %79, 1023
  store i32 %80, i32* %k, align 4
  %81 = load i32, i32* %k, align 4
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %88

; <label>:83                                      ; preds = %72
  %84 = load double, double* %u, align 8
  %85 = load double, double* %2, align 8
  %86 = fsub double %84, %85
  %87 = fsub double 1.000000e+00, %86
  br label %93

; <label>:88                                      ; preds = %72
  %89 = load double, double* %2, align 8
  %90 = load double, double* %u, align 8
  %91 = fsub double %90, 1.000000e+00
  %92 = fsub double %89, %91
  br label %93

; <label>:93                                      ; preds = %88, %83
  %94 = phi double [ %87, %83 ], [ %92, %88 ]
  store double %94, double* %c, align 8
  %95 = load double, double* %u, align 8
  %96 = load double, double* %c, align 8
  %97 = fdiv double %96, %95
  store double %97, double* %c, align 8
  br label %106

; <label>:98                                      ; preds = %69
  %99 = load double, double* %2, align 8
  store double %99, double* %u, align 8
  %100 = bitcast double* %u to i32*
  %101 = getelementptr inbounds i32, i32* %100, i64 1
  %102 = load i32, i32* %101, align 4
  store i32 %102, i32* %hu, align 4
  %103 = load i32, i32* %hu, align 4
  %104 = ashr i32 %103, 20
  %105 = sub nsw i32 %104, 1023
  store i32 %105, i32* %k, align 4
  store double 0.000000e+00, double* %c, align 8
  br label %106

; <label>:106                                     ; preds = %98, %93
  %107 = load i32, i32* %hu, align 4
  %108 = and i32 %107, 1048575
  store i32 %108, i32* %hu, align 4
  %109 = load i32, i32* %hu, align 4
  %110 = icmp slt i32 %109, 434334
  br i1 %110, label %111, label %116

; <label>:111                                     ; preds = %106
  %112 = load i32, i32* %hu, align 4
  %113 = or i32 %112, 1072693248
  %114 = bitcast double* %u to i32*
  %115 = getelementptr inbounds i32, i32* %114, i64 1
  store i32 %113, i32* %115, align 4
  br label %126

; <label>:116                                     ; preds = %106
  %117 = load i32, i32* %k, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %k, align 4
  %119 = load i32, i32* %hu, align 4
  %120 = or i32 %119, 1071644672
  %121 = bitcast double* %u to i32*
  %122 = getelementptr inbounds i32, i32* %121, i64 1
  store i32 %120, i32* %122, align 4
  %123 = load i32, i32* %hu, align 4
  %124 = sub nsw i32 1048576, %123
  %125 = ashr i32 %124, 2
  store i32 %125, i32* %hu, align 4
  br label %126

; <label>:126                                     ; preds = %116, %111
  %127 = load double, double* %u, align 8
  %128 = fsub double %127, 1.000000e+00
  store double %128, double* %f, align 8
  br label %129

; <label>:129                                     ; preds = %126, %66
  %130 = load double, double* %f, align 8
  %131 = fmul double 5.000000e-01, %130
  %132 = load double, double* %f, align 8
  %133 = fmul double %131, %132
  store double %133, double* %hfsq, align 8
  %134 = load i32, i32* %hu, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %182

; <label>:136                                     ; preds = %129
  %137 = load double, double* %f, align 8
  %138 = load double, double* @zero, align 8
  %139 = fcmp oeq double %137, %138
  br i1 %139, label %140, label %156

; <label>:140                                     ; preds = %136
  %141 = load i32, i32* %k, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %145

; <label>:143                                     ; preds = %140
  %144 = load double, double* @zero, align 8
  store double %144, double* %1
  br label %242

; <label>:145                                     ; preds = %140
  %146 = load i32, i32* %k, align 4
  %147 = sitofp i32 %146 to double
  %148 = fmul double %147, 0x3DEA39EF35793C76
  %149 = load double, double* %c, align 8
  %150 = fadd double %149, %148
  store double %150, double* %c, align 8
  %151 = load i32, i32* %k, align 4
  %152 = sitofp i32 %151 to double
  %153 = fmul double %152, 0x3FE62E42FEE00000
  %154 = load double, double* %c, align 8
  %155 = fadd double %153, %154
  store double %155, double* %1
  br label %242

; <label>:156                                     ; preds = %136
  %157 = load double, double* %hfsq, align 8
  %158 = load double, double* %f, align 8
  %159 = fmul double 0x3FE5555555555555, %158
  %160 = fsub double 1.000000e+00, %159
  %161 = fmul double %157, %160
  store double %161, double* %R, align 8
  %162 = load i32, i32* %k, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %168

; <label>:164                                     ; preds = %156
  %165 = load double, double* %f, align 8
  %166 = load double, double* %R, align 8
  %167 = fsub double %165, %166
  store double %167, double* %1
  br label %242

; <label>:168                                     ; preds = %156
  %169 = load i32, i32* %k, align 4
  %170 = sitofp i32 %169 to double
  %171 = fmul double %170, 0x3FE62E42FEE00000
  %172 = load double, double* %R, align 8
  %173 = load i32, i32* %k, align 4
  %174 = sitofp i32 %173 to double
  %175 = fmul double %174, 0x3DEA39EF35793C76
  %176 = load double, double* %c, align 8
  %177 = fadd double %175, %176
  %178 = fsub double %172, %177
  %179 = load double, double* %f, align 8
  %180 = fsub double %178, %179
  %181 = fsub double %171, %180
  store double %181, double* %1
  br label %242

; <label>:182                                     ; preds = %129
  %183 = load double, double* %f, align 8
  %184 = load double, double* %f, align 8
  %185 = fadd double 2.000000e+00, %184
  %186 = fdiv double %183, %185
  store double %186, double* %s, align 8
  %187 = load double, double* %s, align 8
  %188 = load double, double* %s, align 8
  %189 = fmul double %187, %188
  store double %189, double* %z, align 8
  %190 = load double, double* %z, align 8
  %191 = load double, double* %z, align 8
  %192 = load double, double* %z, align 8
  %193 = load double, double* %z, align 8
  %194 = load double, double* %z, align 8
  %195 = load double, double* %z, align 8
  %196 = load double, double* %z, align 8
  %197 = fmul double %196, 0x3FC2F112DF3E5244
  %198 = fadd double 0x3FC39A09D078C69F, %197
  %199 = fmul double %195, %198
  %200 = fadd double 0x3FC7466496CB03DE, %199
  %201 = fmul double %194, %200
  %202 = fadd double 0x3FCC71C51D8E78AF, %201
  %203 = fmul double %193, %202
  %204 = fadd double 0x3FD2492494229359, %203
  %205 = fmul double %192, %204
  %206 = fadd double 0x3FD999999997FA04, %205
  %207 = fmul double %191, %206
  %208 = fadd double 0x3FE5555555555593, %207
  %209 = fmul double %190, %208
  store double %209, double* %R, align 8
  %210 = load i32, i32* %k, align 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %222

; <label>:212                                     ; preds = %182
  %213 = load double, double* %f, align 8
  %214 = load double, double* %hfsq, align 8
  %215 = load double, double* %s, align 8
  %216 = load double, double* %hfsq, align 8
  %217 = load double, double* %R, align 8
  %218 = fadd double %216, %217
  %219 = fmul double %215, %218
  %220 = fsub double %214, %219
  %221 = fsub double %213, %220
  store double %221, double* %1
  br label %242

; <label>:222                                     ; preds = %182
  %223 = load i32, i32* %k, align 4
  %224 = sitofp i32 %223 to double
  %225 = fmul double %224, 0x3FE62E42FEE00000
  %226 = load double, double* %hfsq, align 8
  %227 = load double, double* %s, align 8
  %228 = load double, double* %hfsq, align 8
  %229 = load double, double* %R, align 8
  %230 = fadd double %228, %229
  %231 = fmul double %227, %230
  %232 = load i32, i32* %k, align 4
  %233 = sitofp i32 %232 to double
  %234 = fmul double %233, 0x3DEA39EF35793C76
  %235 = load double, double* %c, align 8
  %236 = fadd double %234, %235
  %237 = fadd double %231, %236
  %238 = fsub double %226, %237
  %239 = load double, double* %f, align 8
  %240 = fsub double %238, %239
  %241 = fsub double %225, %240
  store double %241, double* %1
  br label %242

; <label>:242                                     ; preds = %222, %212, %168, %164, %145, %143, %62, %43, %41, %22, %19
  %243 = load double, double* %1
  ret double %243
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.7.0-2ubuntu1 (tags/RELEASE_370/final) (based on LLVM 3.7.0)"}
