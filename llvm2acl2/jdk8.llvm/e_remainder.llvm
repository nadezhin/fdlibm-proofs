; ModuleID = '../jdk8/src/e_remainder.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: nounwind uwtable
define double @__j__ieee754_remainder(double %x, double %p) #0 {
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %3 = alloca double, align 8
  %hx = alloca i32, align 4
  %hp = alloca i32, align 4
  %sx = alloca i32, align 4
  %lx = alloca i32, align 4
  %lp = alloca i32, align 4
  %p_half = alloca double, align 8
  store double %x, double* %2, align 8
  store double %p, double* %3, align 8
  %4 = bitcast double* %2 to i32*
  %5 = getelementptr inbounds i32, i32* %4, i64 1
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %hx, align 4
  %7 = bitcast double* %2 to i32*
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %lx, align 4
  %9 = bitcast double* %3 to i32*
  %10 = getelementptr inbounds i32, i32* %9, i64 1
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %hp, align 4
  %12 = bitcast double* %3 to i32*
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %lp, align 4
  %14 = load i32, i32* %hx, align 4
  %15 = and i32 %14, -2147483648
  store i32 %15, i32* %sx, align 4
  %16 = load i32, i32* %hp, align 4
  %17 = and i32 %16, 2147483647
  store i32 %17, i32* %hp, align 4
  %18 = load i32, i32* %hx, align 4
  %19 = and i32 %18, 2147483647
  store i32 %19, i32* %hx, align 4
  %20 = load i32, i32* %hp, align 4
  %21 = load i32, i32* %lp, align 4
  %22 = or i32 %20, %21
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %32

; <label>:24                                      ; preds = %0
  %25 = load double, double* %2, align 8
  %26 = load double, double* %3, align 8
  %27 = fmul double %25, %26
  %28 = load double, double* %2, align 8
  %29 = load double, double* %3, align 8
  %30 = fmul double %28, %29
  %31 = fdiv double %27, %30
  store double %31, double* %1
  br label %127

; <label>:32                                      ; preds = %0
  %33 = load i32, i32* %hx, align 4
  %34 = icmp sge i32 %33, 2146435072
  br i1 %34, label %44, label %35

; <label>:35                                      ; preds = %32
  %36 = load i32, i32* %hp, align 4
  %37 = icmp sge i32 %36, 2146435072
  br i1 %37, label %38, label %52

; <label>:38                                      ; preds = %35
  %39 = load i32, i32* %hp, align 4
  %40 = sub nsw i32 %39, 2146435072
  %41 = load i32, i32* %lp, align 4
  %42 = or i32 %40, %41
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %52

; <label>:44                                      ; preds = %38, %32
  %45 = load double, double* %2, align 8
  %46 = load double, double* %3, align 8
  %47 = fmul double %45, %46
  %48 = load double, double* %2, align 8
  %49 = load double, double* %3, align 8
  %50 = fmul double %48, %49
  %51 = fdiv double %47, %50
  store double %51, double* %1
  br label %127

; <label>:52                                      ; preds = %38, %35
  %53 = load i32, i32* %hp, align 4
  %54 = icmp sle i32 %53, 2145386495
  br i1 %54, label %55, label %61

; <label>:55                                      ; preds = %52
  %56 = load double, double* %2, align 8
  %57 = load double, double* %3, align 8
  %58 = load double, double* %3, align 8
  %59 = fadd double %57, %58
  %60 = call double @__j__ieee754_fmod(double %56, double %59)
  store double %60, double* %2, align 8
  br label %61

; <label>:61                                      ; preds = %55, %52
  %62 = load i32, i32* %hx, align 4
  %63 = load i32, i32* %hp, align 4
  %64 = sub nsw i32 %62, %63
  %65 = load i32, i32* %lx, align 4
  %66 = load i32, i32* %lp, align 4
  %67 = sub i32 %65, %66
  %68 = or i32 %64, %67
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %73

; <label>:70                                      ; preds = %61
  %71 = load double, double* %2, align 8
  %72 = fmul double 0.000000e+00, %71
  store double %72, double* %1
  br label %127

; <label>:73                                      ; preds = %61
  %74 = load double, double* %2, align 8
  %75 = call double @jfabs(double %74)
  store double %75, double* %2, align 8
  %76 = load double, double* %3, align 8
  %77 = call double @jfabs(double %76)
  store double %77, double* %3, align 8
  %78 = load i32, i32* %hp, align 4
  %79 = icmp slt i32 %78, 2097152
  br i1 %79, label %80, label %101

; <label>:80                                      ; preds = %73
  %81 = load double, double* %2, align 8
  %82 = load double, double* %2, align 8
  %83 = fadd double %81, %82
  %84 = load double, double* %3, align 8
  %85 = fcmp ogt double %83, %84
  br i1 %85, label %86, label %100

; <label>:86                                      ; preds = %80
  %87 = load double, double* %3, align 8
  %88 = load double, double* %2, align 8
  %89 = fsub double %88, %87
  store double %89, double* %2, align 8
  %90 = load double, double* %2, align 8
  %91 = load double, double* %2, align 8
  %92 = fadd double %90, %91
  %93 = load double, double* %3, align 8
  %94 = fcmp oge double %92, %93
  br i1 %94, label %95, label %99

; <label>:95                                      ; preds = %86
  %96 = load double, double* %3, align 8
  %97 = load double, double* %2, align 8
  %98 = fsub double %97, %96
  store double %98, double* %2, align 8
  br label %99

; <label>:99                                      ; preds = %95, %86
  br label %100

; <label>:100                                     ; preds = %99, %80
  br label %120

; <label>:101                                     ; preds = %73
  %102 = load double, double* %3, align 8
  %103 = fmul double 5.000000e-01, %102
  store double %103, double* %p_half, align 8
  %104 = load double, double* %2, align 8
  %105 = load double, double* %p_half, align 8
  %106 = fcmp ogt double %104, %105
  br i1 %106, label %107, label %119

; <label>:107                                     ; preds = %101
  %108 = load double, double* %3, align 8
  %109 = load double, double* %2, align 8
  %110 = fsub double %109, %108
  store double %110, double* %2, align 8
  %111 = load double, double* %2, align 8
  %112 = load double, double* %p_half, align 8
  %113 = fcmp oge double %111, %112
  br i1 %113, label %114, label %118

; <label>:114                                     ; preds = %107
  %115 = load double, double* %3, align 8
  %116 = load double, double* %2, align 8
  %117 = fsub double %116, %115
  store double %117, double* %2, align 8
  br label %118

; <label>:118                                     ; preds = %114, %107
  br label %119

; <label>:119                                     ; preds = %118, %101
  br label %120

; <label>:120                                     ; preds = %119, %100
  %121 = load i32, i32* %sx, align 4
  %122 = bitcast double* %2 to i32*
  %123 = getelementptr inbounds i32, i32* %122, i64 1
  %124 = load i32, i32* %123, align 4
  %125 = xor i32 %124, %121
  store i32 %125, i32* %123, align 4
  %126 = load double, double* %2, align 8
  store double %126, double* %1
  br label %127

; <label>:127                                     ; preds = %120, %70, %44, %24
  %128 = load double, double* %1
  ret double %128
}

declare double @__j__ieee754_fmod(double, double) #1

declare double @jfabs(double) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.7.0-2ubuntu1 (tags/RELEASE_370/final) (based on LLVM 3.7.0)"}
