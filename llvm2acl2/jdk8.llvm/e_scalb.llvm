; ModuleID = '../jdk8/src/e_scalb.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: nounwind uwtable
define double @__j__ieee754_scalb(double %x, double %fn) #0 {
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %3 = alloca double, align 8
  store double %x, double* %2, align 8
  store double %fn, double* %3, align 8
  %4 = load double, double* %2, align 8
  %5 = call i32 @isnan(double %4)
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %11, label %7

; <label>:7                                       ; preds = %0
  %8 = load double, double* %3, align 8
  %9 = call i32 @isnan(double %8)
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %15

; <label>:11                                      ; preds = %7, %0
  %12 = load double, double* %2, align 8
  %13 = load double, double* %3, align 8
  %14 = fmul double %12, %13
  store double %14, double* %1
  br label %62

; <label>:15                                      ; preds = %7
  %16 = load double, double* %3, align 8
  %17 = call i32 @finite(double %16)
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %31, label %19

; <label>:19                                      ; preds = %15
  %20 = load double, double* %3, align 8
  %21 = fcmp ogt double %20, 0.000000e+00
  br i1 %21, label %22, label %26

; <label>:22                                      ; preds = %19
  %23 = load double, double* %2, align 8
  %24 = load double, double* %3, align 8
  %25 = fmul double %23, %24
  store double %25, double* %1
  br label %62

; <label>:26                                      ; preds = %19
  %27 = load double, double* %2, align 8
  %28 = load double, double* %3, align 8
  %29 = fsub double -0.000000e+00, %28
  %30 = fdiv double %27, %29
  store double %30, double* %1
  br label %62

; <label>:31                                      ; preds = %15
  %32 = load double, double* %3, align 8
  %33 = call double @rint(double %32) #4
  %34 = load double, double* %3, align 8
  %35 = fcmp une double %33, %34
  br i1 %35, label %36, label %44

; <label>:36                                      ; preds = %31
  %37 = load double, double* %3, align 8
  %38 = load double, double* %3, align 8
  %39 = fsub double %37, %38
  %40 = load double, double* %3, align 8
  %41 = load double, double* %3, align 8
  %42 = fsub double %40, %41
  %43 = fdiv double %39, %42
  store double %43, double* %1
  br label %62

; <label>:44                                      ; preds = %31
  %45 = load double, double* %3, align 8
  %46 = fcmp ogt double %45, 6.500000e+04
  br i1 %46, label %47, label %50

; <label>:47                                      ; preds = %44
  %48 = load double, double* %2, align 8
  %49 = call double @scalbn(double %48, i32 65000) #5
  store double %49, double* %1
  br label %62

; <label>:50                                      ; preds = %44
  %51 = load double, double* %3, align 8
  %52 = fsub double -0.000000e+00, %51
  %53 = fcmp ogt double %52, 6.500000e+04
  br i1 %53, label %54, label %57

; <label>:54                                      ; preds = %50
  %55 = load double, double* %2, align 8
  %56 = call double @scalbn(double %55, i32 -65000) #5
  store double %56, double* %1
  br label %62

; <label>:57                                      ; preds = %50
  %58 = load double, double* %2, align 8
  %59 = load double, double* %3, align 8
  %60 = fptosi double %59 to i32
  %61 = call double @scalbn(double %58, i32 %60) #5
  store double %61, double* %1
  br label %62

; <label>:62                                      ; preds = %57, %54, %47, %36, %26, %22, %11
  %63 = load double, double* %1
  ret double %63
}

declare i32 @isnan(double) #1

declare i32 @finite(double) #1

; Function Attrs: nounwind readnone
declare double @rint(double) #2

; Function Attrs: nounwind
declare double @scalbn(double, i32) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.7.0-2ubuntu1 (tags/RELEASE_370/final) (based on LLVM 3.7.0)"}
