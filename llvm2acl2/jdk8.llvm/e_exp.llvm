; ModuleID = '../jdk8/src/e_exp.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@ln2HI = internal constant [2 x double] [double 0x3FE62E42FEE00000, double 0xBFE62E42FEE00000], align 16
@ln2LO = internal constant [2 x double] [double 0x3DEA39EF35793C76, double 0xBDEA39EF35793C76], align 16
@halF = internal constant [2 x double] [double 5.000000e-01, double -5.000000e-01], align 16

; Function Attrs: nounwind uwtable
define double @__j__ieee754_exp(double %x) #0 {
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %y = alloca double, align 8
  %hi = alloca double, align 8
  %lo = alloca double, align 8
  %c = alloca double, align 8
  %t = alloca double, align 8
  %k = alloca i32, align 4
  %xsb = alloca i32, align 4
  %hx = alloca i32, align 4
  store double %x, double* %2, align 8
  store double 0.000000e+00, double* %hi, align 8
  store double 0.000000e+00, double* %lo, align 8
  store i32 0, i32* %k, align 4
  %3 = bitcast double* %2 to i32*
  %4 = getelementptr inbounds i32, i32* %3, i64 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %hx, align 4
  %6 = load i32, i32* %hx, align 4
  %7 = lshr i32 %6, 31
  %8 = and i32 %7, 1
  store i32 %8, i32* %xsb, align 4
  %9 = load i32, i32* %hx, align 4
  %10 = and i32 %9, 2147483647
  store i32 %10, i32* %hx, align 4
  %11 = load i32, i32* %hx, align 4
  %12 = icmp uge i32 %11, 1082535490
  br i1 %12, label %13, label %44

; <label>:13                                      ; preds = %0
  %14 = load i32, i32* %hx, align 4
  %15 = icmp uge i32 %14, 2146435072
  br i1 %15, label %16, label %35

; <label>:16                                      ; preds = %13
  %17 = load i32, i32* %hx, align 4
  %18 = and i32 %17, 1048575
  %19 = bitcast double* %2 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = or i32 %18, %20
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %27

; <label>:23                                      ; preds = %16
  %24 = load double, double* %2, align 8
  %25 = load double, double* %2, align 8
  %26 = fadd double %24, %25
  store double %26, double* %1
  br label %166

; <label>:27                                      ; preds = %16
  %28 = load i32, i32* %xsb, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

; <label>:30                                      ; preds = %27
  %31 = load double, double* %2, align 8
  br label %33

; <label>:32                                      ; preds = %27
  br label %33

; <label>:33                                      ; preds = %32, %30
  %34 = phi double [ %31, %30 ], [ 0.000000e+00, %32 ]
  store double %34, double* %1
  br label %166

; <label>:35                                      ; preds = %13
  %36 = load double, double* %2, align 8
  %37 = fcmp ogt double %36, 0x40862E42FEFA39EF
  br i1 %37, label %38, label %39

; <label>:38                                      ; preds = %35
  store double 0x7FF0000000000000, double* %1
  br label %166

; <label>:39                                      ; preds = %35
  %40 = load double, double* %2, align 8
  %41 = fcmp olt double %40, 0xC0874910D52D3051
  br i1 %41, label %42, label %43

; <label>:42                                      ; preds = %39
  store double 0.000000e+00, double* %1
  br label %166

; <label>:43                                      ; preds = %39
  br label %44

; <label>:44                                      ; preds = %43, %0
  %45 = load i32, i32* %hx, align 4
  %46 = icmp ugt i32 %45, 1071001154
  br i1 %46, label %47, label %88

; <label>:47                                      ; preds = %44
  %48 = load i32, i32* %hx, align 4
  %49 = icmp ult i32 %48, 1072734898
  br i1 %49, label %50, label %65

; <label>:50                                      ; preds = %47
  %51 = load double, double* %2, align 8
  %52 = load i32, i32* %xsb, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [2 x double], [2 x double]* @ln2HI, i32 0, i64 %53
  %55 = load double, double* %54, align 8
  %56 = fsub double %51, %55
  store double %56, double* %hi, align 8
  %57 = load i32, i32* %xsb, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [2 x double], [2 x double]* @ln2LO, i32 0, i64 %58
  %60 = load double, double* %59, align 8
  store double %60, double* %lo, align 8
  %61 = load i32, i32* %xsb, align 4
  %62 = sub nsw i32 1, %61
  %63 = load i32, i32* %xsb, align 4
  %64 = sub nsw i32 %62, %63
  store i32 %64, i32* %k, align 4
  br label %84

; <label>:65                                      ; preds = %47
  %66 = load double, double* %2, align 8
  %67 = fmul double 0x3FF71547652B82FE, %66
  %68 = load i32, i32* %xsb, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [2 x double], [2 x double]* @halF, i32 0, i64 %69
  %71 = load double, double* %70, align 8
  %72 = fadd double %67, %71
  %73 = fptosi double %72 to i32
  store i32 %73, i32* %k, align 4
  %74 = load i32, i32* %k, align 4
  %75 = sitofp i32 %74 to double
  store double %75, double* %t, align 8
  %76 = load double, double* %2, align 8
  %77 = load double, double* %t, align 8
  %78 = load double, double* getelementptr inbounds ([2 x double], [2 x double]* @ln2HI, i32 0, i64 0), align 8
  %79 = fmul double %77, %78
  %80 = fsub double %76, %79
  store double %80, double* %hi, align 8
  %81 = load double, double* %t, align 8
  %82 = load double, double* getelementptr inbounds ([2 x double], [2 x double]* @ln2LO, i32 0, i64 0), align 8
  %83 = fmul double %81, %82
  store double %83, double* %lo, align 8
  br label %84

; <label>:84                                      ; preds = %65, %50
  %85 = load double, double* %hi, align 8
  %86 = load double, double* %lo, align 8
  %87 = fsub double %85, %86
  store double %87, double* %2, align 8
  br label %101

; <label>:88                                      ; preds = %44
  %89 = load i32, i32* %hx, align 4
  %90 = icmp ult i32 %89, 1043333120
  br i1 %90, label %91, label %99

; <label>:91                                      ; preds = %88
  %92 = load double, double* %2, align 8
  %93 = fadd double 1.000000e+300, %92
  %94 = fcmp ogt double %93, 1.000000e+00
  br i1 %94, label %95, label %98

; <label>:95                                      ; preds = %91
  %96 = load double, double* %2, align 8
  %97 = fadd double 1.000000e+00, %96
  store double %97, double* %1
  br label %166

; <label>:98                                      ; preds = %91
  br label %100

; <label>:99                                      ; preds = %88
  store i32 0, i32* %k, align 4
  br label %100

; <label>:100                                     ; preds = %99, %98
  br label %101

; <label>:101                                     ; preds = %100, %84
  %102 = load double, double* %2, align 8
  %103 = load double, double* %2, align 8
  %104 = fmul double %102, %103
  store double %104, double* %t, align 8
  %105 = load double, double* %2, align 8
  %106 = load double, double* %t, align 8
  %107 = load double, double* %t, align 8
  %108 = load double, double* %t, align 8
  %109 = load double, double* %t, align 8
  %110 = load double, double* %t, align 8
  %111 = fmul double %110, 0x3E66376972BEA4D0
  %112 = fadd double 0xBEBBBD41C5D26BF1, %111
  %113 = fmul double %109, %112
  %114 = fadd double 0x3F11566AAF25DE2C, %113
  %115 = fmul double %108, %114
  %116 = fadd double 0xBF66C16C16BEBD93, %115
  %117 = fmul double %107, %116
  %118 = fadd double 0x3FC555555555553E, %117
  %119 = fmul double %106, %118
  %120 = fsub double %105, %119
  store double %120, double* %c, align 8
  %121 = load i32, i32* %k, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %133

; <label>:123                                     ; preds = %101
  %124 = load double, double* %2, align 8
  %125 = load double, double* %c, align 8
  %126 = fmul double %124, %125
  %127 = load double, double* %c, align 8
  %128 = fsub double %127, 2.000000e+00
  %129 = fdiv double %126, %128
  %130 = load double, double* %2, align 8
  %131 = fsub double %129, %130
  %132 = fsub double 1.000000e+00, %131
  store double %132, double* %1
  br label %166

; <label>:133                                     ; preds = %101
  %134 = load double, double* %lo, align 8
  %135 = load double, double* %2, align 8
  %136 = load double, double* %c, align 8
  %137 = fmul double %135, %136
  %138 = load double, double* %c, align 8
  %139 = fsub double 2.000000e+00, %138
  %140 = fdiv double %137, %139
  %141 = fsub double %134, %140
  %142 = load double, double* %hi, align 8
  %143 = fsub double %141, %142
  %144 = fsub double 1.000000e+00, %143
  store double %144, double* %y, align 8
  br label %145

; <label>:145                                     ; preds = %133
  %146 = load i32, i32* %k, align 4
  %147 = icmp sge i32 %146, -1021
  br i1 %147, label %148, label %156

; <label>:148                                     ; preds = %145
  %149 = load i32, i32* %k, align 4
  %150 = shl i32 %149, 20
  %151 = bitcast double* %y to i32*
  %152 = getelementptr inbounds i32, i32* %151, i64 1
  %153 = load i32, i32* %152, align 4
  %154 = add nsw i32 %153, %150
  store i32 %154, i32* %152, align 4
  %155 = load double, double* %y, align 8
  store double %155, double* %1
  br label %166

; <label>:156                                     ; preds = %145
  %157 = load i32, i32* %k, align 4
  %158 = add nsw i32 %157, 1000
  %159 = shl i32 %158, 20
  %160 = bitcast double* %y to i32*
  %161 = getelementptr inbounds i32, i32* %160, i64 1
  %162 = load i32, i32* %161, align 4
  %163 = add nsw i32 %162, %159
  store i32 %163, i32* %161, align 4
  %164 = load double, double* %y, align 8
  %165 = fmul double %164, 0x170000000000000
  store double %165, double* %1
  br label %166

; <label>:166                                     ; preds = %156, %148, %123, %95, %42, %38, %33, %23
  %167 = load double, double* %1
  ret double %167
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.7.0-2ubuntu1 (tags/RELEASE_370/final) (based on LLVM 3.7.0)"}
