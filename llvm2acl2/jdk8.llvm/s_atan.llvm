; ModuleID = '../jdk8/src/s_atan.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@atanhi = internal constant [4 x double] [double 0x3FDDAC670561BB4F, double 0x3FE921FB54442D18, double 0x3FEF730BD281F69B, double 0x3FF921FB54442D18], align 16
@atanlo = internal constant [4 x double] [double 0x3C7A2B7F222F65E2, double 0x3C81A62633145C07, double 0x3C7007887AF0CBBD, double 0x3C91A62633145C07], align 16
@aT = internal constant [11 x double] [double 0x3FD555555555550D, double 0xBFC999999998EBC4, double 0x3FC24924920083FF, double 0xBFBC71C6FE231671, double 0x3FB745CDC54C206E, double 0xBFB3B0F2AF749A6D, double 0x3FB10D66A0D03D51, double 0xBFADDE2D52DEFD9A, double 0x3FA97B4B24760DEB, double 0xBFA2B4442C6A6C2F, double 0x3F90AD3AE322DA11], align 16

; Function Attrs: nounwind uwtable
define double @jatan(double %x) #0 {
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %w = alloca double, align 8
  %s1 = alloca double, align 8
  %s2 = alloca double, align 8
  %z = alloca double, align 8
  %ix = alloca i32, align 4
  %hx = alloca i32, align 4
  %id = alloca i32, align 4
  store double %x, double* %2, align 8
  %3 = bitcast double* %2 to i32*
  %4 = getelementptr inbounds i32, i32* %3, i64 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %hx, align 4
  %6 = load i32, i32* %hx, align 4
  %7 = and i32 %6, 2147483647
  store i32 %7, i32* %ix, align 4
  %8 = load i32, i32* %ix, align 4
  %9 = icmp sge i32 %8, 1141899264
  br i1 %9, label %10, label %36

; <label>:10                                      ; preds = %0
  %11 = load i32, i32* %ix, align 4
  %12 = icmp sgt i32 %11, 2146435072
  br i1 %12, label %20, label %13

; <label>:13                                      ; preds = %10
  %14 = load i32, i32* %ix, align 4
  %15 = icmp eq i32 %14, 2146435072
  br i1 %15, label %16, label %24

; <label>:16                                      ; preds = %13
  %17 = bitcast double* %2 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %24

; <label>:20                                      ; preds = %16, %10
  %21 = load double, double* %2, align 8
  %22 = load double, double* %2, align 8
  %23 = fadd double %21, %22
  store double %23, double* %1
  br label %173

; <label>:24                                      ; preds = %16, %13
  %25 = load i32, i32* %hx, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %31

; <label>:27                                      ; preds = %24
  %28 = load double, double* getelementptr inbounds ([4 x double], [4 x double]* @atanhi, i32 0, i64 3), align 8
  %29 = load double, double* getelementptr inbounds ([4 x double], [4 x double]* @atanlo, i32 0, i64 3), align 8
  %30 = fadd double %28, %29
  store double %30, double* %1
  br label %173

; <label>:31                                      ; preds = %24
  %32 = load double, double* getelementptr inbounds ([4 x double], [4 x double]* @atanhi, i32 0, i64 3), align 8
  %33 = fsub double -0.000000e+00, %32
  %34 = load double, double* getelementptr inbounds ([4 x double], [4 x double]* @atanlo, i32 0, i64 3), align 8
  %35 = fsub double %33, %34
  store double %35, double* %1
  br label %173

; <label>:36                                      ; preds = %0
  %37 = load i32, i32* %ix, align 4
  %38 = icmp slt i32 %37, 1071382528
  br i1 %38, label %39, label %50

; <label>:39                                      ; preds = %36
  %40 = load i32, i32* %ix, align 4
  %41 = icmp slt i32 %40, 1042284544
  br i1 %41, label %42, label %49

; <label>:42                                      ; preds = %39
  %43 = load double, double* %2, align 8
  %44 = fadd double 1.000000e+300, %43
  %45 = fcmp ogt double %44, 1.000000e+00
  br i1 %45, label %46, label %48

; <label>:46                                      ; preds = %42
  %47 = load double, double* %2, align 8
  store double %47, double* %1
  br label %173

; <label>:48                                      ; preds = %42
  br label %49

; <label>:49                                      ; preds = %48, %39
  store i32 -1, i32* %id, align 4
  br label %87

; <label>:50                                      ; preds = %36
  %51 = load double, double* %2, align 8
  %52 = call double @jfabs(double %51)
  store double %52, double* %2, align 8
  %53 = load i32, i32* %ix, align 4
  %54 = icmp slt i32 %53, 1072889856
  br i1 %54, label %55, label %72

; <label>:55                                      ; preds = %50
  %56 = load i32, i32* %ix, align 4
  %57 = icmp slt i32 %56, 1072037888
  br i1 %57, label %58, label %65

; <label>:58                                      ; preds = %55
  store i32 0, i32* %id, align 4
  %59 = load double, double* %2, align 8
  %60 = fmul double 2.000000e+00, %59
  %61 = fsub double %60, 1.000000e+00
  %62 = load double, double* %2, align 8
  %63 = fadd double 2.000000e+00, %62
  %64 = fdiv double %61, %63
  store double %64, double* %2, align 8
  br label %71

; <label>:65                                      ; preds = %55
  store i32 1, i32* %id, align 4
  %66 = load double, double* %2, align 8
  %67 = fsub double %66, 1.000000e+00
  %68 = load double, double* %2, align 8
  %69 = fadd double %68, 1.000000e+00
  %70 = fdiv double %67, %69
  store double %70, double* %2, align 8
  br label %71

; <label>:71                                      ; preds = %65, %58
  br label %86

; <label>:72                                      ; preds = %50
  %73 = load i32, i32* %ix, align 4
  %74 = icmp slt i32 %73, 1073971200
  br i1 %74, label %75, label %82

; <label>:75                                      ; preds = %72
  store i32 2, i32* %id, align 4
  %76 = load double, double* %2, align 8
  %77 = fsub double %76, 1.500000e+00
  %78 = load double, double* %2, align 8
  %79 = fmul double 1.500000e+00, %78
  %80 = fadd double 1.000000e+00, %79
  %81 = fdiv double %77, %80
  store double %81, double* %2, align 8
  br label %85

; <label>:82                                      ; preds = %72
  store i32 3, i32* %id, align 4
  %83 = load double, double* %2, align 8
  %84 = fdiv double -1.000000e+00, %83
  store double %84, double* %2, align 8
  br label %85

; <label>:85                                      ; preds = %82, %75
  br label %86

; <label>:86                                      ; preds = %85, %71
  br label %87

; <label>:87                                      ; preds = %86, %49
  %88 = load double, double* %2, align 8
  %89 = load double, double* %2, align 8
  %90 = fmul double %88, %89
  store double %90, double* %z, align 8
  %91 = load double, double* %z, align 8
  %92 = load double, double* %z, align 8
  %93 = fmul double %91, %92
  store double %93, double* %w, align 8
  %94 = load double, double* %z, align 8
  %95 = load double, double* getelementptr inbounds ([11 x double], [11 x double]* @aT, i32 0, i64 0), align 8
  %96 = load double, double* %w, align 8
  %97 = load double, double* getelementptr inbounds ([11 x double], [11 x double]* @aT, i32 0, i64 2), align 8
  %98 = load double, double* %w, align 8
  %99 = load double, double* getelementptr inbounds ([11 x double], [11 x double]* @aT, i32 0, i64 4), align 8
  %100 = load double, double* %w, align 8
  %101 = load double, double* getelementptr inbounds ([11 x double], [11 x double]* @aT, i32 0, i64 6), align 8
  %102 = load double, double* %w, align 8
  %103 = load double, double* getelementptr inbounds ([11 x double], [11 x double]* @aT, i32 0, i64 8), align 8
  %104 = load double, double* %w, align 8
  %105 = load double, double* getelementptr inbounds ([11 x double], [11 x double]* @aT, i32 0, i64 10), align 8
  %106 = fmul double %104, %105
  %107 = fadd double %103, %106
  %108 = fmul double %102, %107
  %109 = fadd double %101, %108
  %110 = fmul double %100, %109
  %111 = fadd double %99, %110
  %112 = fmul double %98, %111
  %113 = fadd double %97, %112
  %114 = fmul double %96, %113
  %115 = fadd double %95, %114
  %116 = fmul double %94, %115
  store double %116, double* %s1, align 8
  %117 = load double, double* %w, align 8
  %118 = load double, double* getelementptr inbounds ([11 x double], [11 x double]* @aT, i32 0, i64 1), align 8
  %119 = load double, double* %w, align 8
  %120 = load double, double* getelementptr inbounds ([11 x double], [11 x double]* @aT, i32 0, i64 3), align 8
  %121 = load double, double* %w, align 8
  %122 = load double, double* getelementptr inbounds ([11 x double], [11 x double]* @aT, i32 0, i64 5), align 8
  %123 = load double, double* %w, align 8
  %124 = load double, double* getelementptr inbounds ([11 x double], [11 x double]* @aT, i32 0, i64 7), align 8
  %125 = load double, double* %w, align 8
  %126 = load double, double* getelementptr inbounds ([11 x double], [11 x double]* @aT, i32 0, i64 9), align 8
  %127 = fmul double %125, %126
  %128 = fadd double %124, %127
  %129 = fmul double %123, %128
  %130 = fadd double %122, %129
  %131 = fmul double %121, %130
  %132 = fadd double %120, %131
  %133 = fmul double %119, %132
  %134 = fadd double %118, %133
  %135 = fmul double %117, %134
  store double %135, double* %s2, align 8
  %136 = load i32, i32* %id, align 4
  %137 = icmp slt i32 %136, 0
  br i1 %137, label %138, label %146

; <label>:138                                     ; preds = %87
  %139 = load double, double* %2, align 8
  %140 = load double, double* %2, align 8
  %141 = load double, double* %s1, align 8
  %142 = load double, double* %s2, align 8
  %143 = fadd double %141, %142
  %144 = fmul double %140, %143
  %145 = fsub double %139, %144
  store double %145, double* %1
  br label %173

; <label>:146                                     ; preds = %87
  %147 = load i32, i32* %id, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds [4 x double], [4 x double]* @atanhi, i32 0, i64 %148
  %150 = load double, double* %149, align 8
  %151 = load double, double* %2, align 8
  %152 = load double, double* %s1, align 8
  %153 = load double, double* %s2, align 8
  %154 = fadd double %152, %153
  %155 = fmul double %151, %154
  %156 = load i32, i32* %id, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [4 x double], [4 x double]* @atanlo, i32 0, i64 %157
  %159 = load double, double* %158, align 8
  %160 = fsub double %155, %159
  %161 = load double, double* %2, align 8
  %162 = fsub double %160, %161
  %163 = fsub double %150, %162
  store double %163, double* %z, align 8
  %164 = load i32, i32* %hx, align 4
  %165 = icmp slt i32 %164, 0
  br i1 %165, label %166, label %169

; <label>:166                                     ; preds = %146
  %167 = load double, double* %z, align 8
  %168 = fsub double -0.000000e+00, %167
  br label %171

; <label>:169                                     ; preds = %146
  %170 = load double, double* %z, align 8
  br label %171

; <label>:171                                     ; preds = %169, %166
  %172 = phi double [ %168, %166 ], [ %170, %169 ]
  store double %172, double* %1
  br label %173

; <label>:173                                     ; preds = %171, %138, %46, %31, %27, %20
  %174 = load double, double* %1
  ret double %174
}

declare double @jfabs(double) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.7.0-2ubuntu1 (tags/RELEASE_370/final) (based on LLVM 3.7.0)"}
