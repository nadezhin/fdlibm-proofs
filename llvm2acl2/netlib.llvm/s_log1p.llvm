; ModuleID = '../netlib/s_log1p.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@zero = internal global double 0.000000e+00, align 8

; Function Attrs: nounwind uwtable
define double @log1p(double %x) #0 {
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %hfsq = alloca double, align 8
  %f = alloca double, align 8
  %c = alloca double, align 8
  %s = alloca double, align 8
  %z = alloca double, align 8
  %R = alloca double, align 8
  %u = alloca double, align 8
  %k = alloca i32, align 4
  %hx = alloca i32, align 4
  %hu = alloca i32, align 4
  %ax = alloca i32, align 4
  store double %x, double* %2, align 8
  %3 = bitcast double* %2 to i32*
  %4 = getelementptr inbounds i32, i32* %3, i64 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %hx, align 4
  %6 = load i32, i32* %hx, align 4
  %7 = and i32 %6, 2147483647
  store i32 %7, i32* %ax, align 4
  store i32 1, i32* %k, align 4
  %8 = load i32, i32* %hx, align 4
  %9 = icmp slt i32 %8, 1071284858
  br i1 %9, label %10, label %56

; <label>:10                                      ; preds = %0
  %11 = load i32, i32* %ax, align 4
  %12 = icmp sge i32 %11, 1072693248
  br i1 %12, label %13, label %27

; <label>:13                                      ; preds = %10
  %14 = load double, double* %2, align 8
  %15 = fcmp oeq double %14, -1.000000e+00
  br i1 %15, label %16, label %19

; <label>:16                                      ; preds = %13
  %17 = load double, double* @zero, align 8
  %18 = fdiv double 0xC350000000000000, %17
  store double %18, double* %1
  br label %239

; <label>:19                                      ; preds = %13
  %20 = load double, double* %2, align 8
  %21 = load double, double* %2, align 8
  %22 = fsub double %20, %21
  %23 = load double, double* %2, align 8
  %24 = load double, double* %2, align 8
  %25 = fsub double %23, %24
  %26 = fdiv double %22, %25
  store double %26, double* %1
  br label %239

; <label>:27                                      ; preds = %10
  %28 = load i32, i32* %ax, align 4
  %29 = icmp slt i32 %28, 1042284544
  br i1 %29, label %30, label %47

; <label>:30                                      ; preds = %27
  %31 = load double, double* %2, align 8
  %32 = fadd double 0x4350000000000000, %31
  %33 = load double, double* @zero, align 8
  %34 = fcmp ogt double %32, %33
  br i1 %34, label %35, label %40

; <label>:35                                      ; preds = %30
  %36 = load i32, i32* %ax, align 4
  %37 = icmp slt i32 %36, 1016070144
  br i1 %37, label %38, label %40

; <label>:38                                      ; preds = %35
  %39 = load double, double* %2, align 8
  store double %39, double* %1
  br label %239

; <label>:40                                      ; preds = %35, %30
  %41 = load double, double* %2, align 8
  %42 = load double, double* %2, align 8
  %43 = load double, double* %2, align 8
  %44 = fmul double %42, %43
  %45 = fmul double %44, 5.000000e-01
  %46 = fsub double %41, %45
  store double %46, double* %1
  br label %239

; <label>:47                                      ; preds = %27
  %48 = load i32, i32* %hx, align 4
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %53, label %50

; <label>:50                                      ; preds = %47
  %51 = load i32, i32* %hx, align 4
  %52 = icmp sle i32 %51, -1076707645
  br i1 %52, label %53, label %55

; <label>:53                                      ; preds = %50, %47
  store i32 0, i32* %k, align 4
  %54 = load double, double* %2, align 8
  store double %54, double* %f, align 8
  store i32 1, i32* %hu, align 4
  br label %55

; <label>:55                                      ; preds = %53, %50
  br label %56

; <label>:56                                      ; preds = %55, %0
  %57 = load i32, i32* %hx, align 4
  %58 = icmp sge i32 %57, 2146435072
  br i1 %58, label %59, label %63

; <label>:59                                      ; preds = %56
  %60 = load double, double* %2, align 8
  %61 = load double, double* %2, align 8
  %62 = fadd double %60, %61
  store double %62, double* %1
  br label %239

; <label>:63                                      ; preds = %56
  %64 = load i32, i32* %k, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %126

; <label>:66                                      ; preds = %63
  %67 = load i32, i32* %hx, align 4
  %68 = icmp slt i32 %67, 1128267776
  br i1 %68, label %69, label %95

; <label>:69                                      ; preds = %66
  %70 = load double, double* %2, align 8
  %71 = fadd double 1.000000e+00, %70
  store double %71, double* %u, align 8
  %72 = bitcast double* %u to i32*
  %73 = getelementptr inbounds i32, i32* %72, i64 1
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %hu, align 4
  %75 = load i32, i32* %hu, align 4
  %76 = ashr i32 %75, 20
  %77 = sub nsw i32 %76, 1023
  store i32 %77, i32* %k, align 4
  %78 = load i32, i32* %k, align 4
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %80, label %85

; <label>:80                                      ; preds = %69
  %81 = load double, double* %u, align 8
  %82 = load double, double* %2, align 8
  %83 = fsub double %81, %82
  %84 = fsub double 1.000000e+00, %83
  br label %90

; <label>:85                                      ; preds = %69
  %86 = load double, double* %2, align 8
  %87 = load double, double* %u, align 8
  %88 = fsub double %87, 1.000000e+00
  %89 = fsub double %86, %88
  br label %90

; <label>:90                                      ; preds = %85, %80
  %91 = phi double [ %84, %80 ], [ %89, %85 ]
  store double %91, double* %c, align 8
  %92 = load double, double* %u, align 8
  %93 = load double, double* %c, align 8
  %94 = fdiv double %93, %92
  store double %94, double* %c, align 8
  br label %103

; <label>:95                                      ; preds = %66
  %96 = load double, double* %2, align 8
  store double %96, double* %u, align 8
  %97 = bitcast double* %u to i32*
  %98 = getelementptr inbounds i32, i32* %97, i64 1
  %99 = load i32, i32* %98, align 4
  store i32 %99, i32* %hu, align 4
  %100 = load i32, i32* %hu, align 4
  %101 = ashr i32 %100, 20
  %102 = sub nsw i32 %101, 1023
  store i32 %102, i32* %k, align 4
  store double 0.000000e+00, double* %c, align 8
  br label %103

; <label>:103                                     ; preds = %95, %90
  %104 = load i32, i32* %hu, align 4
  %105 = and i32 %104, 1048575
  store i32 %105, i32* %hu, align 4
  %106 = load i32, i32* %hu, align 4
  %107 = icmp slt i32 %106, 434334
  br i1 %107, label %108, label %113

; <label>:108                                     ; preds = %103
  %109 = load i32, i32* %hu, align 4
  %110 = or i32 %109, 1072693248
  %111 = bitcast double* %u to i32*
  %112 = getelementptr inbounds i32, i32* %111, i64 1
  store i32 %110, i32* %112, align 4
  br label %123

; <label>:113                                     ; preds = %103
  %114 = load i32, i32* %k, align 4
  %115 = add nsw i32 %114, 1
  store i32 %115, i32* %k, align 4
  %116 = load i32, i32* %hu, align 4
  %117 = or i32 %116, 1071644672
  %118 = bitcast double* %u to i32*
  %119 = getelementptr inbounds i32, i32* %118, i64 1
  store i32 %117, i32* %119, align 4
  %120 = load i32, i32* %hu, align 4
  %121 = sub nsw i32 1048576, %120
  %122 = ashr i32 %121, 2
  store i32 %122, i32* %hu, align 4
  br label %123

; <label>:123                                     ; preds = %113, %108
  %124 = load double, double* %u, align 8
  %125 = fsub double %124, 1.000000e+00
  store double %125, double* %f, align 8
  br label %126

; <label>:126                                     ; preds = %123, %63
  %127 = load double, double* %f, align 8
  %128 = fmul double 5.000000e-01, %127
  %129 = load double, double* %f, align 8
  %130 = fmul double %128, %129
  store double %130, double* %hfsq, align 8
  %131 = load i32, i32* %hu, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %179

; <label>:133                                     ; preds = %126
  %134 = load double, double* %f, align 8
  %135 = load double, double* @zero, align 8
  %136 = fcmp oeq double %134, %135
  br i1 %136, label %137, label %153

; <label>:137                                     ; preds = %133
  %138 = load i32, i32* %k, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %142

; <label>:140                                     ; preds = %137
  %141 = load double, double* @zero, align 8
  store double %141, double* %1
  br label %239

; <label>:142                                     ; preds = %137
  %143 = load i32, i32* %k, align 4
  %144 = sitofp i32 %143 to double
  %145 = fmul double %144, 0x3DEA39EF35793C76
  %146 = load double, double* %c, align 8
  %147 = fadd double %146, %145
  store double %147, double* %c, align 8
  %148 = load i32, i32* %k, align 4
  %149 = sitofp i32 %148 to double
  %150 = fmul double %149, 0x3FE62E42FEE00000
  %151 = load double, double* %c, align 8
  %152 = fadd double %150, %151
  store double %152, double* %1
  br label %239

; <label>:153                                     ; preds = %133
  %154 = load double, double* %hfsq, align 8
  %155 = load double, double* %f, align 8
  %156 = fmul double 0x3FE5555555555555, %155
  %157 = fsub double 1.000000e+00, %156
  %158 = fmul double %154, %157
  store double %158, double* %R, align 8
  %159 = load i32, i32* %k, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %165

; <label>:161                                     ; preds = %153
  %162 = load double, double* %f, align 8
  %163 = load double, double* %R, align 8
  %164 = fsub double %162, %163
  store double %164, double* %1
  br label %239

; <label>:165                                     ; preds = %153
  %166 = load i32, i32* %k, align 4
  %167 = sitofp i32 %166 to double
  %168 = fmul double %167, 0x3FE62E42FEE00000
  %169 = load double, double* %R, align 8
  %170 = load i32, i32* %k, align 4
  %171 = sitofp i32 %170 to double
  %172 = fmul double %171, 0x3DEA39EF35793C76
  %173 = load double, double* %c, align 8
  %174 = fadd double %172, %173
  %175 = fsub double %169, %174
  %176 = load double, double* %f, align 8
  %177 = fsub double %175, %176
  %178 = fsub double %168, %177
  store double %178, double* %1
  br label %239

; <label>:179                                     ; preds = %126
  %180 = load double, double* %f, align 8
  %181 = load double, double* %f, align 8
  %182 = fadd double 2.000000e+00, %181
  %183 = fdiv double %180, %182
  store double %183, double* %s, align 8
  %184 = load double, double* %s, align 8
  %185 = load double, double* %s, align 8
  %186 = fmul double %184, %185
  store double %186, double* %z, align 8
  %187 = load double, double* %z, align 8
  %188 = load double, double* %z, align 8
  %189 = load double, double* %z, align 8
  %190 = load double, double* %z, align 8
  %191 = load double, double* %z, align 8
  %192 = load double, double* %z, align 8
  %193 = load double, double* %z, align 8
  %194 = fmul double %193, 0x3FC2F112DF3E5244
  %195 = fadd double 0x3FC39A09D078C69F, %194
  %196 = fmul double %192, %195
  %197 = fadd double 0x3FC7466496CB03DE, %196
  %198 = fmul double %191, %197
  %199 = fadd double 0x3FCC71C51D8E78AF, %198
  %200 = fmul double %190, %199
  %201 = fadd double 0x3FD2492494229359, %200
  %202 = fmul double %189, %201
  %203 = fadd double 0x3FD999999997FA04, %202
  %204 = fmul double %188, %203
  %205 = fadd double 0x3FE5555555555593, %204
  %206 = fmul double %187, %205
  store double %206, double* %R, align 8
  %207 = load i32, i32* %k, align 4
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %219

; <label>:209                                     ; preds = %179
  %210 = load double, double* %f, align 8
  %211 = load double, double* %hfsq, align 8
  %212 = load double, double* %s, align 8
  %213 = load double, double* %hfsq, align 8
  %214 = load double, double* %R, align 8
  %215 = fadd double %213, %214
  %216 = fmul double %212, %215
  %217 = fsub double %211, %216
  %218 = fsub double %210, %217
  store double %218, double* %1
  br label %239

; <label>:219                                     ; preds = %179
  %220 = load i32, i32* %k, align 4
  %221 = sitofp i32 %220 to double
  %222 = fmul double %221, 0x3FE62E42FEE00000
  %223 = load double, double* %hfsq, align 8
  %224 = load double, double* %s, align 8
  %225 = load double, double* %hfsq, align 8
  %226 = load double, double* %R, align 8
  %227 = fadd double %225, %226
  %228 = fmul double %224, %227
  %229 = load i32, i32* %k, align 4
  %230 = sitofp i32 %229 to double
  %231 = fmul double %230, 0x3DEA39EF35793C76
  %232 = load double, double* %c, align 8
  %233 = fadd double %231, %232
  %234 = fadd double %228, %233
  %235 = fsub double %223, %234
  %236 = load double, double* %f, align 8
  %237 = fsub double %235, %236
  %238 = fsub double %222, %237
  store double %238, double* %1
  br label %239

; <label>:239                                     ; preds = %219, %209, %165, %161, %142, %140, %59, %40, %38, %19, %16
  %240 = load double, double* %1
  ret double %240
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.7.0-2ubuntu1 (tags/RELEASE_370/final) (based on LLVM 3.7.0)"}
