; ModuleID = '../netlib/s_tan.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: nounwind uwtable
define double @tan(double %x) #0 {
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %y = alloca [2 x double], align 16
  %z = alloca double, align 8
  %n = alloca i32, align 4
  %ix = alloca i32, align 4
  store double %x, double* %2, align 8
  store double 0.000000e+00, double* %z, align 8
  %3 = bitcast double* %2 to i32*
  %4 = getelementptr inbounds i32, i32* %3, i64 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ix, align 4
  %6 = load i32, i32* %ix, align 4
  %7 = and i32 %6, 2147483647
  store i32 %7, i32* %ix, align 4
  %8 = load i32, i32* %ix, align 4
  %9 = icmp sle i32 %8, 1072243195
  br i1 %9, label %10, label %14

; <label>:10                                      ; preds = %0
  %11 = load double, double* %2, align 8
  %12 = load double, double* %z, align 8
  %13 = call double @__kernel_tan(double %11, double %12, i32 1)
  store double %13, double* %1
  br label %34

; <label>:14                                      ; preds = %0
  %15 = load i32, i32* %ix, align 4
  %16 = icmp sge i32 %15, 2146435072
  br i1 %16, label %17, label %21

; <label>:17                                      ; preds = %14
  %18 = load double, double* %2, align 8
  %19 = load double, double* %2, align 8
  %20 = fsub double %18, %19
  store double %20, double* %1
  br label %34

; <label>:21                                      ; preds = %14
  %22 = load double, double* %2, align 8
  %23 = getelementptr inbounds [2 x double], [2 x double]* %y, i32 0, i32 0
  %24 = call i32 @__ieee754_rem_pio2(double %22, double* %23)
  store i32 %24, i32* %n, align 4
  %25 = getelementptr inbounds [2 x double], [2 x double]* %y, i32 0, i64 0
  %26 = load double, double* %25, align 8
  %27 = getelementptr inbounds [2 x double], [2 x double]* %y, i32 0, i64 1
  %28 = load double, double* %27, align 8
  %29 = load i32, i32* %n, align 4
  %30 = and i32 %29, 1
  %31 = shl i32 %30, 1
  %32 = sub nsw i32 1, %31
  %33 = call double @__kernel_tan(double %26, double %28, i32 %32)
  store double %33, double* %1
  br label %34

; <label>:34                                      ; preds = %21, %17, %10
  %35 = load double, double* %1
  ret double %35
}

declare double @__kernel_tan(double, double, i32) #1

declare i32 @__ieee754_rem_pio2(double, double*) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.7.0-2ubuntu1 (tags/RELEASE_370/final) (based on LLVM 3.7.0)"}
