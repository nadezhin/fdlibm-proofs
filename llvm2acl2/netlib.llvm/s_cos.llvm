; ModuleID = '../netlib/s_cos.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: nounwind uwtable
define double @cos(double %x) #0 {
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %y = alloca [2 x double], align 16
  %z = alloca double, align 8
  %n = alloca i32, align 4
  %ix = alloca i32, align 4
  store double %x, double* %2, align 8
  store double 0.000000e+00, double* %z, align 8
  %3 = bitcast double* %2 to i32*
  %4 = getelementptr inbounds i32, i32* %3, i64 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ix, align 4
  %6 = load i32, i32* %ix, align 4
  %7 = and i32 %6, 2147483647
  store i32 %7, i32* %ix, align 4
  %8 = load i32, i32* %ix, align 4
  %9 = icmp sle i32 %8, 1072243195
  br i1 %9, label %10, label %14

; <label>:10                                      ; preds = %0
  %11 = load double, double* %2, align 8
  %12 = load double, double* %z, align 8
  %13 = call double @__kernel_cos(double %11, double %12)
  store double %13, double* %1
  br label %53

; <label>:14                                      ; preds = %0
  %15 = load i32, i32* %ix, align 4
  %16 = icmp sge i32 %15, 2146435072
  br i1 %16, label %17, label %21

; <label>:17                                      ; preds = %14
  %18 = load double, double* %2, align 8
  %19 = load double, double* %2, align 8
  %20 = fsub double %18, %19
  store double %20, double* %1
  br label %53

; <label>:21                                      ; preds = %14
  %22 = load double, double* %2, align 8
  %23 = getelementptr inbounds [2 x double], [2 x double]* %y, i32 0, i32 0
  %24 = call i32 @__ieee754_rem_pio2(double %22, double* %23)
  store i32 %24, i32* %n, align 4
  %25 = load i32, i32* %n, align 4
  %26 = and i32 %25, 3
  switch i32 %26, label %47 [
    i32 0, label %27
    i32 1, label %33
    i32 2, label %40
  ]

; <label>:27                                      ; preds = %21
  %28 = getelementptr inbounds [2 x double], [2 x double]* %y, i32 0, i64 0
  %29 = load double, double* %28, align 8
  %30 = getelementptr inbounds [2 x double], [2 x double]* %y, i32 0, i64 1
  %31 = load double, double* %30, align 8
  %32 = call double @__kernel_cos(double %29, double %31)
  store double %32, double* %1
  br label %53

; <label>:33                                      ; preds = %21
  %34 = getelementptr inbounds [2 x double], [2 x double]* %y, i32 0, i64 0
  %35 = load double, double* %34, align 8
  %36 = getelementptr inbounds [2 x double], [2 x double]* %y, i32 0, i64 1
  %37 = load double, double* %36, align 8
  %38 = call double @__kernel_sin(double %35, double %37, i32 1)
  %39 = fsub double -0.000000e+00, %38
  store double %39, double* %1
  br label %53

; <label>:40                                      ; preds = %21
  %41 = getelementptr inbounds [2 x double], [2 x double]* %y, i32 0, i64 0
  %42 = load double, double* %41, align 8
  %43 = getelementptr inbounds [2 x double], [2 x double]* %y, i32 0, i64 1
  %44 = load double, double* %43, align 8
  %45 = call double @__kernel_cos(double %42, double %44)
  %46 = fsub double -0.000000e+00, %45
  store double %46, double* %1
  br label %53

; <label>:47                                      ; preds = %21
  %48 = getelementptr inbounds [2 x double], [2 x double]* %y, i32 0, i64 0
  %49 = load double, double* %48, align 8
  %50 = getelementptr inbounds [2 x double], [2 x double]* %y, i32 0, i64 1
  %51 = load double, double* %50, align 8
  %52 = call double @__kernel_sin(double %49, double %51, i32 1)
  store double %52, double* %1
  br label %53

; <label>:53                                      ; preds = %47, %40, %33, %27, %17, %10
  %54 = load double, double* %1
  ret double %54
}

declare double @__kernel_cos(double, double) #1

declare i32 @__ieee754_rem_pio2(double, double*) #1

declare double @__kernel_sin(double, double, i32) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.7.0-2ubuntu1 (tags/RELEASE_370/final) (based on LLVM 3.7.0)"}
