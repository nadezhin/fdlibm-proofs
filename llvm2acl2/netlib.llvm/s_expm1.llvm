; ModuleID = '../netlib/s_expm1.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: nounwind uwtable
define double @expm1(double %x) #0 {
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %y = alloca double, align 8
  %hi = alloca double, align 8
  %lo = alloca double, align 8
  %c = alloca double, align 8
  %t = alloca double, align 8
  %e = alloca double, align 8
  %hxs = alloca double, align 8
  %hfx = alloca double, align 8
  %r1 = alloca double, align 8
  %k = alloca i32, align 4
  %xsb = alloca i32, align 4
  %hx = alloca i32, align 4
  store double %x, double* %2, align 8
  %3 = bitcast double* %2 to i32*
  %4 = getelementptr inbounds i32, i32* %3, i64 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %hx, align 4
  %6 = load i32, i32* %hx, align 4
  %7 = and i32 %6, -2147483648
  store i32 %7, i32* %xsb, align 4
  %8 = load i32, i32* %xsb, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

; <label>:10                                      ; preds = %0
  %11 = load double, double* %2, align 8
  store double %11, double* %y, align 8
  br label %15

; <label>:12                                      ; preds = %0
  %13 = load double, double* %2, align 8
  %14 = fsub double -0.000000e+00, %13
  store double %14, double* %y, align 8
  br label %15

; <label>:15                                      ; preds = %12, %10
  %16 = load i32, i32* %hx, align 4
  %17 = and i32 %16, 2147483647
  store i32 %17, i32* %hx, align 4
  %18 = load i32, i32* %hx, align 4
  %19 = icmp uge i32 %18, 1078159482
  br i1 %19, label %20, label %60

; <label>:20                                      ; preds = %15
  %21 = load i32, i32* %hx, align 4
  %22 = icmp uge i32 %21, 1082535490
  br i1 %22, label %23, label %50

; <label>:23                                      ; preds = %20
  %24 = load i32, i32* %hx, align 4
  %25 = icmp uge i32 %24, 2146435072
  br i1 %25, label %26, label %45

; <label>:26                                      ; preds = %23
  %27 = load i32, i32* %hx, align 4
  %28 = and i32 %27, 1048575
  %29 = bitcast double* %2 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = or i32 %28, %30
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %37

; <label>:33                                      ; preds = %26
  %34 = load double, double* %2, align 8
  %35 = load double, double* %2, align 8
  %36 = fadd double %34, %35
  store double %36, double* %1
  br label %258

; <label>:37                                      ; preds = %26
  %38 = load i32, i32* %xsb, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

; <label>:40                                      ; preds = %37
  %41 = load double, double* %2, align 8
  br label %43

; <label>:42                                      ; preds = %37
  br label %43

; <label>:43                                      ; preds = %42, %40
  %44 = phi double [ %41, %40 ], [ -1.000000e+00, %42 ]
  store double %44, double* %1
  br label %258

; <label>:45                                      ; preds = %23
  %46 = load double, double* %2, align 8
  %47 = fcmp ogt double %46, 0x40862E42FEFA39EF
  br i1 %47, label %48, label %49

; <label>:48                                      ; preds = %45
  store double 0x7FF0000000000000, double* %1
  br label %258

; <label>:49                                      ; preds = %45
  br label %50

; <label>:50                                      ; preds = %49, %20
  %51 = load i32, i32* %xsb, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %59

; <label>:53                                      ; preds = %50
  %54 = load double, double* %2, align 8
  %55 = fadd double %54, 1.000000e-300
  %56 = fcmp olt double %55, 0.000000e+00
  br i1 %56, label %57, label %58

; <label>:57                                      ; preds = %53
  store double -1.000000e+00, double* %1
  br label %258

; <label>:58                                      ; preds = %53
  br label %59

; <label>:59                                      ; preds = %58, %50
  br label %60

; <label>:60                                      ; preds = %59, %15
  %61 = load i32, i32* %hx, align 4
  %62 = icmp ugt i32 %61, 1071001154
  br i1 %62, label %63, label %101

; <label>:63                                      ; preds = %60
  %64 = load i32, i32* %hx, align 4
  %65 = icmp ult i32 %64, 1072734898
  br i1 %65, label %66, label %76

; <label>:66                                      ; preds = %63
  %67 = load i32, i32* %xsb, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %72

; <label>:69                                      ; preds = %66
  %70 = load double, double* %2, align 8
  %71 = fsub double %70, 0x3FE62E42FEE00000
  store double %71, double* %hi, align 8
  store double 0x3DEA39EF35793C76, double* %lo, align 8
  store i32 1, i32* %k, align 4
  br label %75

; <label>:72                                      ; preds = %66
  %73 = load double, double* %2, align 8
  %74 = fadd double %73, 0x3FE62E42FEE00000
  store double %74, double* %hi, align 8
  store double 0xBDEA39EF35793C76, double* %lo, align 8
  store i32 -1, i32* %k, align 4
  br label %75

; <label>:75                                      ; preds = %72, %69
  br label %92

; <label>:76                                      ; preds = %63
  %77 = load double, double* %2, align 8
  %78 = fmul double 0x3FF71547652B82FE, %77
  %79 = load i32, i32* %xsb, align 4
  %80 = icmp eq i32 %79, 0
  %81 = select i1 %80, double 5.000000e-01, double -5.000000e-01
  %82 = fadd double %78, %81
  %83 = fptosi double %82 to i32
  store i32 %83, i32* %k, align 4
  %84 = load i32, i32* %k, align 4
  %85 = sitofp i32 %84 to double
  store double %85, double* %t, align 8
  %86 = load double, double* %2, align 8
  %87 = load double, double* %t, align 8
  %88 = fmul double %87, 0x3FE62E42FEE00000
  %89 = fsub double %86, %88
  store double %89, double* %hi, align 8
  %90 = load double, double* %t, align 8
  %91 = fmul double %90, 0x3DEA39EF35793C76
  store double %91, double* %lo, align 8
  br label %92

; <label>:92                                      ; preds = %76, %75
  %93 = load double, double* %hi, align 8
  %94 = load double, double* %lo, align 8
  %95 = fsub double %93, %94
  store double %95, double* %2, align 8
  %96 = load double, double* %hi, align 8
  %97 = load double, double* %2, align 8
  %98 = fsub double %96, %97
  %99 = load double, double* %lo, align 8
  %100 = fsub double %98, %99
  store double %100, double* %c, align 8
  br label %115

; <label>:101                                     ; preds = %60
  %102 = load i32, i32* %hx, align 4
  %103 = icmp ult i32 %102, 1016070144
  br i1 %103, label %104, label %113

; <label>:104                                     ; preds = %101
  %105 = load double, double* %2, align 8
  %106 = fadd double 1.000000e+300, %105
  store double %106, double* %t, align 8
  %107 = load double, double* %2, align 8
  %108 = load double, double* %t, align 8
  %109 = load double, double* %2, align 8
  %110 = fadd double 1.000000e+300, %109
  %111 = fsub double %108, %110
  %112 = fsub double %107, %111
  store double %112, double* %1
  br label %258

; <label>:113                                     ; preds = %101
  store i32 0, i32* %k, align 4
  br label %114

; <label>:114                                     ; preds = %113
  br label %115

; <label>:115                                     ; preds = %114, %92
  %116 = load double, double* %2, align 8
  %117 = fmul double 5.000000e-01, %116
  store double %117, double* %hfx, align 8
  %118 = load double, double* %2, align 8
  %119 = load double, double* %hfx, align 8
  %120 = fmul double %118, %119
  store double %120, double* %hxs, align 8
  %121 = load double, double* %hxs, align 8
  %122 = load double, double* %hxs, align 8
  %123 = load double, double* %hxs, align 8
  %124 = load double, double* %hxs, align 8
  %125 = load double, double* %hxs, align 8
  %126 = fmul double %125, 0xBE8AFDB76E09C32D
  %127 = fadd double 0x3ED0CFCA86E65239, %126
  %128 = fmul double %124, %127
  %129 = fadd double 0xBF14CE199EAADBB7, %128
  %130 = fmul double %123, %129
  %131 = fadd double 0x3F5A01A019FE5585, %130
  %132 = fmul double %122, %131
  %133 = fadd double 0xBFA11111111110F4, %132
  %134 = fmul double %121, %133
  %135 = fadd double 1.000000e+00, %134
  store double %135, double* %r1, align 8
  %136 = load double, double* %r1, align 8
  %137 = load double, double* %hfx, align 8
  %138 = fmul double %136, %137
  %139 = fsub double 3.000000e+00, %138
  store double %139, double* %t, align 8
  %140 = load double, double* %hxs, align 8
  %141 = load double, double* %r1, align 8
  %142 = load double, double* %t, align 8
  %143 = fsub double %141, %142
  %144 = load double, double* %2, align 8
  %145 = load double, double* %t, align 8
  %146 = fmul double %144, %145
  %147 = fsub double 6.000000e+00, %146
  %148 = fdiv double %143, %147
  %149 = fmul double %140, %148
  store double %149, double* %e, align 8
  %150 = load i32, i32* %k, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %160

; <label>:152                                     ; preds = %115
  %153 = load double, double* %2, align 8
  %154 = load double, double* %2, align 8
  %155 = load double, double* %e, align 8
  %156 = fmul double %154, %155
  %157 = load double, double* %hxs, align 8
  %158 = fsub double %156, %157
  %159 = fsub double %153, %158
  store double %159, double* %1
  br label %258

; <label>:160                                     ; preds = %115
  %161 = load double, double* %2, align 8
  %162 = load double, double* %e, align 8
  %163 = load double, double* %c, align 8
  %164 = fsub double %162, %163
  %165 = fmul double %161, %164
  %166 = load double, double* %c, align 8
  %167 = fsub double %165, %166
  store double %167, double* %e, align 8
  %168 = load double, double* %hxs, align 8
  %169 = load double, double* %e, align 8
  %170 = fsub double %169, %168
  store double %170, double* %e, align 8
  %171 = load i32, i32* %k, align 4
  %172 = icmp eq i32 %171, -1
  br i1 %172, label %173, label %179

; <label>:173                                     ; preds = %160
  %174 = load double, double* %2, align 8
  %175 = load double, double* %e, align 8
  %176 = fsub double %174, %175
  %177 = fmul double 5.000000e-01, %176
  %178 = fsub double %177, 5.000000e-01
  store double %178, double* %1
  br label %258

; <label>:179                                     ; preds = %160
  %180 = load i32, i32* %k, align 4
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %197

; <label>:182                                     ; preds = %179
  %183 = load double, double* %2, align 8
  %184 = fcmp olt double %183, -2.500000e-01
  br i1 %184, label %185, label %191

; <label>:185                                     ; preds = %182
  %186 = load double, double* %e, align 8
  %187 = load double, double* %2, align 8
  %188 = fadd double %187, 5.000000e-01
  %189 = fsub double %186, %188
  %190 = fmul double -2.000000e+00, %189
  store double %190, double* %1
  br label %258

; <label>:191                                     ; preds = %182
  %192 = load double, double* %2, align 8
  %193 = load double, double* %e, align 8
  %194 = fsub double %192, %193
  %195 = fmul double 2.000000e+00, %194
  %196 = fadd double 1.000000e+00, %195
  store double %196, double* %1
  br label %258

; <label>:197                                     ; preds = %179
  %198 = load i32, i32* %k, align 4
  %199 = icmp sle i32 %198, -2
  br i1 %199, label %203, label %200

; <label>:200                                     ; preds = %197
  %201 = load i32, i32* %k, align 4
  %202 = icmp sgt i32 %201, 56
  br i1 %202, label %203, label %216

; <label>:203                                     ; preds = %200, %197
  %204 = load double, double* %e, align 8
  %205 = load double, double* %2, align 8
  %206 = fsub double %204, %205
  %207 = fsub double 1.000000e+00, %206
  store double %207, double* %y, align 8
  %208 = load i32, i32* %k, align 4
  %209 = shl i32 %208, 20
  %210 = bitcast double* %y to i32*
  %211 = getelementptr inbounds i32, i32* %210, i64 1
  %212 = load i32, i32* %211, align 4
  %213 = add nsw i32 %212, %209
  store i32 %213, i32* %211, align 4
  %214 = load double, double* %y, align 8
  %215 = fsub double %214, 1.000000e+00
  store double %215, double* %1
  br label %258

; <label>:216                                     ; preds = %200
  store double 1.000000e+00, double* %t, align 8
  %217 = load i32, i32* %k, align 4
  %218 = icmp slt i32 %217, 20
  br i1 %218, label %219, label %236

; <label>:219                                     ; preds = %216
  %220 = load i32, i32* %k, align 4
  %221 = ashr i32 2097152, %220
  %222 = sub nsw i32 1072693248, %221
  %223 = bitcast double* %t to i32*
  %224 = getelementptr inbounds i32, i32* %223, i64 1
  store i32 %222, i32* %224, align 4
  %225 = load double, double* %t, align 8
  %226 = load double, double* %e, align 8
  %227 = load double, double* %2, align 8
  %228 = fsub double %226, %227
  %229 = fsub double %225, %228
  store double %229, double* %y, align 8
  %230 = load i32, i32* %k, align 4
  %231 = shl i32 %230, 20
  %232 = bitcast double* %y to i32*
  %233 = getelementptr inbounds i32, i32* %232, i64 1
  %234 = load i32, i32* %233, align 4
  %235 = add nsw i32 %234, %231
  store i32 %235, i32* %233, align 4
  br label %255

; <label>:236                                     ; preds = %216
  %237 = load i32, i32* %k, align 4
  %238 = sub nsw i32 1023, %237
  %239 = shl i32 %238, 20
  %240 = bitcast double* %t to i32*
  %241 = getelementptr inbounds i32, i32* %240, i64 1
  store i32 %239, i32* %241, align 4
  %242 = load double, double* %2, align 8
  %243 = load double, double* %e, align 8
  %244 = load double, double* %t, align 8
  %245 = fadd double %243, %244
  %246 = fsub double %242, %245
  store double %246, double* %y, align 8
  %247 = load double, double* %y, align 8
  %248 = fadd double %247, 1.000000e+00
  store double %248, double* %y, align 8
  %249 = load i32, i32* %k, align 4
  %250 = shl i32 %249, 20
  %251 = bitcast double* %y to i32*
  %252 = getelementptr inbounds i32, i32* %251, i64 1
  %253 = load i32, i32* %252, align 4
  %254 = add nsw i32 %253, %250
  store i32 %254, i32* %252, align 4
  br label %255

; <label>:255                                     ; preds = %236, %219
  br label %256

; <label>:256                                     ; preds = %255
  %257 = load double, double* %y, align 8
  store double %257, double* %1
  br label %258

; <label>:258                                     ; preds = %256, %203, %191, %185, %173, %152, %104, %57, %48, %43, %33
  %259 = load double, double* %1
  ret double %259
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.7.0-2ubuntu1 (tags/RELEASE_370/final) (based on LLVM 3.7.0)"}
