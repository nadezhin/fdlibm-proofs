; ModuleID = '../netlib/s_scalbn.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: nounwind uwtable
define double @scalbn(double %x, i32 %n) #0 {
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %3 = alloca i32, align 4
  %k = alloca i32, align 4
  %hx = alloca i32, align 4
  %lx = alloca i32, align 4
  store double %x, double* %2, align 8
  store i32 %n, i32* %3, align 4
  %4 = bitcast double* %2 to i32*
  %5 = getelementptr inbounds i32, i32* %4, i64 1
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %hx, align 4
  %7 = bitcast double* %2 to i32*
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %lx, align 4
  %9 = load i32, i32* %hx, align 4
  %10 = and i32 %9, 2146435072
  %11 = ashr i32 %10, 20
  store i32 %11, i32* %k, align 4
  %12 = load i32, i32* %k, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %38

; <label>:14                                      ; preds = %0
  %15 = load i32, i32* %lx, align 4
  %16 = load i32, i32* %hx, align 4
  %17 = and i32 %16, 2147483647
  %18 = or i32 %15, %17
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

; <label>:20                                      ; preds = %14
  %21 = load double, double* %2, align 8
  store double %21, double* %1
  br label %93

; <label>:22                                      ; preds = %14
  %23 = load double, double* %2, align 8
  %24 = fmul double %23, 0x4350000000000000
  store double %24, double* %2, align 8
  %25 = bitcast double* %2 to i32*
  %26 = getelementptr inbounds i32, i32* %25, i64 1
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %hx, align 4
  %28 = load i32, i32* %hx, align 4
  %29 = and i32 %28, 2146435072
  %30 = ashr i32 %29, 20
  %31 = sub nsw i32 %30, 54
  store i32 %31, i32* %k, align 4
  %32 = load i32, i32* %3, align 4
  %33 = icmp slt i32 %32, -50000
  br i1 %33, label %34, label %37

; <label>:34                                      ; preds = %22
  %35 = load double, double* %2, align 8
  %36 = fmul double 1.000000e-300, %35
  store double %36, double* %1
  br label %93

; <label>:37                                      ; preds = %22
  br label %38

; <label>:38                                      ; preds = %37, %0
  %39 = load i32, i32* %k, align 4
  %40 = icmp eq i32 %39, 2047
  br i1 %40, label %41, label %45

; <label>:41                                      ; preds = %38
  %42 = load double, double* %2, align 8
  %43 = load double, double* %2, align 8
  %44 = fadd double %42, %43
  store double %44, double* %1
  br label %93

; <label>:45                                      ; preds = %38
  %46 = load i32, i32* %k, align 4
  %47 = load i32, i32* %3, align 4
  %48 = add nsw i32 %46, %47
  store i32 %48, i32* %k, align 4
  %49 = load i32, i32* %k, align 4
  %50 = icmp sgt i32 %49, 2046
  br i1 %50, label %51, label %55

; <label>:51                                      ; preds = %45
  %52 = load double, double* %2, align 8
  %53 = call double @copysign(double 1.000000e+300, double %52) #2
  %54 = fmul double 1.000000e+300, %53
  store double %54, double* %1
  br label %93

; <label>:55                                      ; preds = %45
  %56 = load i32, i32* %k, align 4
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %67

; <label>:58                                      ; preds = %55
  %59 = load i32, i32* %hx, align 4
  %60 = and i32 %59, -2146435073
  %61 = load i32, i32* %k, align 4
  %62 = shl i32 %61, 20
  %63 = or i32 %60, %62
  %64 = bitcast double* %2 to i32*
  %65 = getelementptr inbounds i32, i32* %64, i64 1
  store i32 %63, i32* %65, align 4
  %66 = load double, double* %2, align 8
  store double %66, double* %1
  br label %93

; <label>:67                                      ; preds = %55
  %68 = load i32, i32* %k, align 4
  %69 = icmp sle i32 %68, -54
  br i1 %69, label %70, label %81

; <label>:70                                      ; preds = %67
  %71 = load i32, i32* %3, align 4
  %72 = icmp sgt i32 %71, 50000
  br i1 %72, label %73, label %77

; <label>:73                                      ; preds = %70
  %74 = load double, double* %2, align 8
  %75 = call double @copysign(double 1.000000e+300, double %74) #2
  %76 = fmul double 1.000000e+300, %75
  store double %76, double* %1
  br label %93

; <label>:77                                      ; preds = %70
  %78 = load double, double* %2, align 8
  %79 = call double @copysign(double 1.000000e-300, double %78) #2
  %80 = fmul double 1.000000e-300, %79
  store double %80, double* %1
  br label %93

; <label>:81                                      ; preds = %67
  %82 = load i32, i32* %k, align 4
  %83 = add nsw i32 %82, 54
  store i32 %83, i32* %k, align 4
  %84 = load i32, i32* %hx, align 4
  %85 = and i32 %84, -2146435073
  %86 = load i32, i32* %k, align 4
  %87 = shl i32 %86, 20
  %88 = or i32 %85, %87
  %89 = bitcast double* %2 to i32*
  %90 = getelementptr inbounds i32, i32* %89, i64 1
  store i32 %88, i32* %90, align 4
  %91 = load double, double* %2, align 8
  %92 = fmul double %91, 0x3C90000000000000
  store double %92, double* %1
  br label %93

; <label>:93                                      ; preds = %81, %77, %73, %58, %51, %41, %34, %20
  %94 = load double, double* %1
  ret double %94
}

; Function Attrs: nounwind readnone
declare double @copysign(double, double) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.7.0-2ubuntu1 (tags/RELEASE_370/final) (based on LLVM 3.7.0)"}
