; ModuleID = '../netlib/e_rem_pio2.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@npio2_hw = internal constant [32 x i32] [i32 1073291771, i32 1074340347, i32 1074977148, i32 1075388923, i32 1075800698, i32 1076025724, i32 1076231611, i32 1076437499, i32 1076643386, i32 1076849274, i32 1076971356, i32 1077074300, i32 1077177244, i32 1077280187, i32 1077383131, i32 1077486075, i32 1077589019, i32 1077691962, i32 1077794906, i32 1077897850, i32 1077968460, i32 1078019932, i32 1078071404, i32 1078122876, i32 1078174348, i32 1078225820, i32 1078277292, i32 1078328763, i32 1078380235, i32 1078431707, i32 1078483179, i32 1078534651], align 16
@two_over_pi = internal constant [66 x i32] [i32 10680707, i32 7228996, i32 1387004, i32 2578385, i32 16069853, i32 12639074, i32 9804092, i32 4427841, i32 16666979, i32 11263675, i32 12935607, i32 2387514, i32 4345298, i32 14681673, i32 3074569, i32 13734428, i32 16653803, i32 1880361, i32 10960616, i32 8533493, i32 3062596, i32 8710556, i32 7349940, i32 6258241, i32 3772886, i32 3769171, i32 3798172, i32 8675211, i32 12450088, i32 3874808, i32 9961438, i32 366607, i32 15675153, i32 9132554, i32 7151469, i32 3571407, i32 2607881, i32 12013382, i32 4155038, i32 6285869, i32 7677882, i32 13102053, i32 15825725, i32 473591, i32 9065106, i32 15363067, i32 6271263, i32 9264392, i32 5636912, i32 4652155, i32 7056368, i32 13614112, i32 10155062, i32 1944035, i32 9527646, i32 15080200, i32 6658437, i32 6231200, i32 6832269, i32 16767104, i32 5075751, i32 3212806, i32 1398474, i32 7579849, i32 6349435, i32 12618859], align 16

; Function Attrs: nounwind uwtable
define i32 @__ieee754_rem_pio2(double %x, double* %y) #0 {
  %1 = alloca i32, align 4
  %2 = alloca double, align 8
  %3 = alloca double*, align 8
  %z = alloca double, align 8
  %w = alloca double, align 8
  %t = alloca double, align 8
  %r = alloca double, align 8
  %fn = alloca double, align 8
  %tx = alloca [3 x double], align 16
  %e0 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %nx = alloca i32, align 4
  %n = alloca i32, align 4
  %ix = alloca i32, align 4
  %hx = alloca i32, align 4
  store double %x, double* %2, align 8
  store double* %y, double** %3, align 8
  %4 = bitcast double* %2 to i32*
  %5 = getelementptr inbounds i32, i32* %4, i64 1
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %hx, align 4
  %7 = load i32, i32* %hx, align 4
  %8 = and i32 %7, 2147483647
  store i32 %8, i32* %ix, align 4
  %9 = load i32, i32* %ix, align 4
  %10 = icmp sle i32 %9, 1072243195
  br i1 %10, label %11, label %17

; <label>:11                                      ; preds = %0
  %12 = load double, double* %2, align 8
  %13 = load double*, double** %3, align 8
  %14 = getelementptr inbounds double, double* %13, i64 0
  store double %12, double* %14, align 8
  %15 = load double*, double** %3, align 8
  %16 = getelementptr inbounds double, double* %15, i64 1
  store double 0.000000e+00, double* %16, align 8
  store i32 0, i32* %1
  br label %308

; <label>:17                                      ; preds = %0
  %18 = load i32, i32* %ix, align 4
  %19 = icmp slt i32 %18, 1073928572
  br i1 %19, label %20, label %91

; <label>:20                                      ; preds = %17
  %21 = load i32, i32* %hx, align 4
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %57

; <label>:23                                      ; preds = %20
  %24 = load double, double* %2, align 8
  %25 = fsub double %24, 0x3FF921FB54400000
  store double %25, double* %z, align 8
  %26 = load i32, i32* %ix, align 4
  %27 = icmp ne i32 %26, 1073291771
  br i1 %27, label %28, label %41

; <label>:28                                      ; preds = %23
  %29 = load double, double* %z, align 8
  %30 = fsub double %29, 0x3DD0B4611A626331
  %31 = load double*, double** %3, align 8
  %32 = getelementptr inbounds double, double* %31, i64 0
  store double %30, double* %32, align 8
  %33 = load double, double* %z, align 8
  %34 = load double*, double** %3, align 8
  %35 = getelementptr inbounds double, double* %34, i64 0
  %36 = load double, double* %35, align 8
  %37 = fsub double %33, %36
  %38 = fsub double %37, 0x3DD0B4611A626331
  %39 = load double*, double** %3, align 8
  %40 = getelementptr inbounds double, double* %39, i64 1
  store double %38, double* %40, align 8
  br label %56

; <label>:41                                      ; preds = %23
  %42 = load double, double* %z, align 8
  %43 = fsub double %42, 0x3DD0B4611A600000
  store double %43, double* %z, align 8
  %44 = load double, double* %z, align 8
  %45 = fsub double %44, 0x3BA3198A2E037073
  %46 = load double*, double** %3, align 8
  %47 = getelementptr inbounds double, double* %46, i64 0
  store double %45, double* %47, align 8
  %48 = load double, double* %z, align 8
  %49 = load double*, double** %3, align 8
  %50 = getelementptr inbounds double, double* %49, i64 0
  %51 = load double, double* %50, align 8
  %52 = fsub double %48, %51
  %53 = fsub double %52, 0x3BA3198A2E037073
  %54 = load double*, double** %3, align 8
  %55 = getelementptr inbounds double, double* %54, i64 1
  store double %53, double* %55, align 8
  br label %56

; <label>:56                                      ; preds = %41, %28
  store i32 1, i32* %1
  br label %308

; <label>:57                                      ; preds = %20
  %58 = load double, double* %2, align 8
  %59 = fadd double %58, 0x3FF921FB54400000
  store double %59, double* %z, align 8
  %60 = load i32, i32* %ix, align 4
  %61 = icmp ne i32 %60, 1073291771
  br i1 %61, label %62, label %75

; <label>:62                                      ; preds = %57
  %63 = load double, double* %z, align 8
  %64 = fadd double %63, 0x3DD0B4611A626331
  %65 = load double*, double** %3, align 8
  %66 = getelementptr inbounds double, double* %65, i64 0
  store double %64, double* %66, align 8
  %67 = load double, double* %z, align 8
  %68 = load double*, double** %3, align 8
  %69 = getelementptr inbounds double, double* %68, i64 0
  %70 = load double, double* %69, align 8
  %71 = fsub double %67, %70
  %72 = fadd double %71, 0x3DD0B4611A626331
  %73 = load double*, double** %3, align 8
  %74 = getelementptr inbounds double, double* %73, i64 1
  store double %72, double* %74, align 8
  br label %90

; <label>:75                                      ; preds = %57
  %76 = load double, double* %z, align 8
  %77 = fadd double %76, 0x3DD0B4611A600000
  store double %77, double* %z, align 8
  %78 = load double, double* %z, align 8
  %79 = fadd double %78, 0x3BA3198A2E037073
  %80 = load double*, double** %3, align 8
  %81 = getelementptr inbounds double, double* %80, i64 0
  store double %79, double* %81, align 8
  %82 = load double, double* %z, align 8
  %83 = load double*, double** %3, align 8
  %84 = getelementptr inbounds double, double* %83, i64 0
  %85 = load double, double* %84, align 8
  %86 = fsub double %82, %85
  %87 = fadd double %86, 0x3BA3198A2E037073
  %88 = load double*, double** %3, align 8
  %89 = getelementptr inbounds double, double* %88, i64 1
  store double %87, double* %89, align 8
  br label %90

; <label>:90                                      ; preds = %75, %62
  store i32 -1, i32* %1
  br label %308

; <label>:91                                      ; preds = %17
  %92 = load i32, i32* %ix, align 4
  %93 = icmp sle i32 %92, 1094263291
  br i1 %93, label %94, label %226

; <label>:94                                      ; preds = %91
  %95 = load double, double* %2, align 8
  %96 = call double @fabs(double %95) #3
  store double %96, double* %t, align 8
  %97 = load double, double* %t, align 8
  %98 = fmul double %97, 0x3FE45F306DC9C883
  %99 = fadd double %98, 5.000000e-01
  %100 = fptosi double %99 to i32
  store i32 %100, i32* %n, align 4
  %101 = load i32, i32* %n, align 4
  %102 = sitofp i32 %101 to double
  store double %102, double* %fn, align 8
  %103 = load double, double* %t, align 8
  %104 = load double, double* %fn, align 8
  %105 = fmul double %104, 0x3FF921FB54400000
  %106 = fsub double %103, %105
  store double %106, double* %r, align 8
  %107 = load double, double* %fn, align 8
  %108 = fmul double %107, 0x3DD0B4611A626331
  store double %108, double* %w, align 8
  %109 = load i32, i32* %n, align 4
  %110 = icmp slt i32 %109, 32
  br i1 %110, label %111, label %125

; <label>:111                                     ; preds = %94
  %112 = load i32, i32* %ix, align 4
  %113 = load i32, i32* %n, align 4
  %114 = sub nsw i32 %113, 1
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [32 x i32], [32 x i32]* @npio2_hw, i32 0, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = icmp ne i32 %112, %117
  br i1 %118, label %119, label %125

; <label>:119                                     ; preds = %111
  %120 = load double, double* %r, align 8
  %121 = load double, double* %w, align 8
  %122 = fsub double %120, %121
  %123 = load double*, double** %3, align 8
  %124 = getelementptr inbounds double, double* %123, i64 0
  store double %122, double* %124, align 8
  br label %197

; <label>:125                                     ; preds = %111, %94
  %126 = load i32, i32* %ix, align 4
  %127 = ashr i32 %126, 20
  store i32 %127, i32* %j, align 4
  %128 = load double, double* %r, align 8
  %129 = load double, double* %w, align 8
  %130 = fsub double %128, %129
  %131 = load double*, double** %3, align 8
  %132 = getelementptr inbounds double, double* %131, i64 0
  store double %130, double* %132, align 8
  %133 = load i32, i32* %j, align 4
  %134 = load double*, double** %3, align 8
  %135 = getelementptr inbounds double, double* %134, i64 0
  %136 = bitcast double* %135 to i32*
  %137 = getelementptr inbounds i32, i32* %136, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = ashr i32 %138, 20
  %140 = and i32 %139, 2047
  %141 = sub nsw i32 %133, %140
  store i32 %141, i32* %i, align 4
  %142 = load i32, i32* %i, align 4
  %143 = icmp sgt i32 %142, 16
  br i1 %143, label %144, label %196

; <label>:144                                     ; preds = %125
  %145 = load double, double* %r, align 8
  store double %145, double* %t, align 8
  %146 = load double, double* %fn, align 8
  %147 = fmul double %146, 0x3DD0B4611A600000
  store double %147, double* %w, align 8
  %148 = load double, double* %t, align 8
  %149 = load double, double* %w, align 8
  %150 = fsub double %148, %149
  store double %150, double* %r, align 8
  %151 = load double, double* %fn, align 8
  %152 = fmul double %151, 0x3BA3198A2E037073
  %153 = load double, double* %t, align 8
  %154 = load double, double* %r, align 8
  %155 = fsub double %153, %154
  %156 = load double, double* %w, align 8
  %157 = fsub double %155, %156
  %158 = fsub double %152, %157
  store double %158, double* %w, align 8
  %159 = load double, double* %r, align 8
  %160 = load double, double* %w, align 8
  %161 = fsub double %159, %160
  %162 = load double*, double** %3, align 8
  %163 = getelementptr inbounds double, double* %162, i64 0
  store double %161, double* %163, align 8
  %164 = load i32, i32* %j, align 4
  %165 = load double*, double** %3, align 8
  %166 = getelementptr inbounds double, double* %165, i64 0
  %167 = bitcast double* %166 to i32*
  %168 = getelementptr inbounds i32, i32* %167, i64 1
  %169 = load i32, i32* %168, align 4
  %170 = ashr i32 %169, 20
  %171 = and i32 %170, 2047
  %172 = sub nsw i32 %164, %171
  store i32 %172, i32* %i, align 4
  %173 = load i32, i32* %i, align 4
  %174 = icmp sgt i32 %173, 49
  br i1 %174, label %175, label %195

; <label>:175                                     ; preds = %144
  %176 = load double, double* %r, align 8
  store double %176, double* %t, align 8
  %177 = load double, double* %fn, align 8
  %178 = fmul double %177, 0x3BA3198A2E000000
  store double %178, double* %w, align 8
  %179 = load double, double* %t, align 8
  %180 = load double, double* %w, align 8
  %181 = fsub double %179, %180
  store double %181, double* %r, align 8
  %182 = load double, double* %fn, align 8
  %183 = fmul double %182, 0x397B839A252049C1
  %184 = load double, double* %t, align 8
  %185 = load double, double* %r, align 8
  %186 = fsub double %184, %185
  %187 = load double, double* %w, align 8
  %188 = fsub double %186, %187
  %189 = fsub double %183, %188
  store double %189, double* %w, align 8
  %190 = load double, double* %r, align 8
  %191 = load double, double* %w, align 8
  %192 = fsub double %190, %191
  %193 = load double*, double** %3, align 8
  %194 = getelementptr inbounds double, double* %193, i64 0
  store double %192, double* %194, align 8
  br label %195

; <label>:195                                     ; preds = %175, %144
  br label %196

; <label>:196                                     ; preds = %195, %125
  br label %197

; <label>:197                                     ; preds = %196, %119
  %198 = load double, double* %r, align 8
  %199 = load double*, double** %3, align 8
  %200 = getelementptr inbounds double, double* %199, i64 0
  %201 = load double, double* %200, align 8
  %202 = fsub double %198, %201
  %203 = load double, double* %w, align 8
  %204 = fsub double %202, %203
  %205 = load double*, double** %3, align 8
  %206 = getelementptr inbounds double, double* %205, i64 1
  store double %204, double* %206, align 8
  %207 = load i32, i32* %hx, align 4
  %208 = icmp slt i32 %207, 0
  br i1 %208, label %209, label %224

; <label>:209                                     ; preds = %197
  %210 = load double*, double** %3, align 8
  %211 = getelementptr inbounds double, double* %210, i64 0
  %212 = load double, double* %211, align 8
  %213 = fsub double -0.000000e+00, %212
  %214 = load double*, double** %3, align 8
  %215 = getelementptr inbounds double, double* %214, i64 0
  store double %213, double* %215, align 8
  %216 = load double*, double** %3, align 8
  %217 = getelementptr inbounds double, double* %216, i64 1
  %218 = load double, double* %217, align 8
  %219 = fsub double -0.000000e+00, %218
  %220 = load double*, double** %3, align 8
  %221 = getelementptr inbounds double, double* %220, i64 1
  store double %219, double* %221, align 8
  %222 = load i32, i32* %n, align 4
  %223 = sub nsw i32 0, %222
  store i32 %223, i32* %1
  br label %308

; <label>:224                                     ; preds = %197
  %225 = load i32, i32* %n, align 4
  store i32 %225, i32* %1
  br label %308

; <label>:226                                     ; preds = %91
  %227 = load i32, i32* %ix, align 4
  %228 = icmp sge i32 %227, 2146435072
  br i1 %228, label %229, label %237

; <label>:229                                     ; preds = %226
  %230 = load double, double* %2, align 8
  %231 = load double, double* %2, align 8
  %232 = fsub double %230, %231
  %233 = load double*, double** %3, align 8
  %234 = getelementptr inbounds double, double* %233, i64 1
  store double %232, double* %234, align 8
  %235 = load double*, double** %3, align 8
  %236 = getelementptr inbounds double, double* %235, i64 0
  store double %232, double* %236, align 8
  store i32 0, i32* %1
  br label %308

; <label>:237                                     ; preds = %226
  %238 = bitcast double* %2 to i32*
  %239 = load i32, i32* %238, align 4
  %240 = bitcast double* %z to i32*
  store i32 %239, i32* %240, align 4
  %241 = load i32, i32* %ix, align 4
  %242 = ashr i32 %241, 20
  %243 = sub nsw i32 %242, 1046
  store i32 %243, i32* %e0, align 4
  %244 = load i32, i32* %ix, align 4
  %245 = load i32, i32* %e0, align 4
  %246 = shl i32 %245, 20
  %247 = sub nsw i32 %244, %246
  %248 = bitcast double* %z to i32*
  %249 = getelementptr inbounds i32, i32* %248, i64 1
  store i32 %247, i32* %249, align 4
  store i32 0, i32* %i, align 4
  br label %250

; <label>:250                                     ; preds = %267, %237
  %251 = load i32, i32* %i, align 4
  %252 = icmp slt i32 %251, 2
  br i1 %252, label %253, label %270

; <label>:253                                     ; preds = %250
  %254 = load double, double* %z, align 8
  %255 = fptosi double %254 to i32
  %256 = sitofp i32 %255 to double
  %257 = load i32, i32* %i, align 4
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds [3 x double], [3 x double]* %tx, i32 0, i64 %258
  store double %256, double* %259, align 8
  %260 = load double, double* %z, align 8
  %261 = load i32, i32* %i, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds [3 x double], [3 x double]* %tx, i32 0, i64 %262
  %264 = load double, double* %263, align 8
  %265 = fsub double %260, %264
  %266 = fmul double %265, 0x4170000000000000
  store double %266, double* %z, align 8
  br label %267

; <label>:267                                     ; preds = %253
  %268 = load i32, i32* %i, align 4
  %269 = add nsw i32 %268, 1
  store i32 %269, i32* %i, align 4
  br label %250

; <label>:270                                     ; preds = %250
  %271 = load double, double* %z, align 8
  %272 = getelementptr inbounds [3 x double], [3 x double]* %tx, i32 0, i64 2
  store double %271, double* %272, align 8
  store i32 3, i32* %nx, align 4
  br label %273

; <label>:273                                     ; preds = %280, %270
  %274 = load i32, i32* %nx, align 4
  %275 = sub nsw i32 %274, 1
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds [3 x double], [3 x double]* %tx, i32 0, i64 %276
  %278 = load double, double* %277, align 8
  %279 = fcmp oeq double %278, 0.000000e+00
  br i1 %279, label %280, label %283

; <label>:280                                     ; preds = %273
  %281 = load i32, i32* %nx, align 4
  %282 = add nsw i32 %281, -1
  store i32 %282, i32* %nx, align 4
  br label %273

; <label>:283                                     ; preds = %273
  %284 = getelementptr inbounds [3 x double], [3 x double]* %tx, i32 0, i32 0
  %285 = load double*, double** %3, align 8
  %286 = load i32, i32* %e0, align 4
  %287 = load i32, i32* %nx, align 4
  %288 = call i32 @__kernel_rem_pio2(double* %284, double* %285, i32 %286, i32 %287, i32 2, i32* getelementptr inbounds ([66 x i32], [66 x i32]* @two_over_pi, i32 0, i32 0))
  store i32 %288, i32* %n, align 4
  %289 = load i32, i32* %hx, align 4
  %290 = icmp slt i32 %289, 0
  br i1 %290, label %291, label %306

; <label>:291                                     ; preds = %283
  %292 = load double*, double** %3, align 8
  %293 = getelementptr inbounds double, double* %292, i64 0
  %294 = load double, double* %293, align 8
  %295 = fsub double -0.000000e+00, %294
  %296 = load double*, double** %3, align 8
  %297 = getelementptr inbounds double, double* %296, i64 0
  store double %295, double* %297, align 8
  %298 = load double*, double** %3, align 8
  %299 = getelementptr inbounds double, double* %298, i64 1
  %300 = load double, double* %299, align 8
  %301 = fsub double -0.000000e+00, %300
  %302 = load double*, double** %3, align 8
  %303 = getelementptr inbounds double, double* %302, i64 1
  store double %301, double* %303, align 8
  %304 = load i32, i32* %n, align 4
  %305 = sub nsw i32 0, %304
  store i32 %305, i32* %1
  br label %308

; <label>:306                                     ; preds = %283
  %307 = load i32, i32* %n, align 4
  store i32 %307, i32* %1
  br label %308

; <label>:308                                     ; preds = %306, %291, %229, %224, %209, %90, %56, %11
  %309 = load i32, i32* %1
  ret i32 %309
}

; Function Attrs: nounwind readnone
declare double @fabs(double) #1

declare i32 @__kernel_rem_pio2(double*, double*, i32, i32, i32, i32*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.7.0-2ubuntu1 (tags/RELEASE_370/final) (based on LLVM 3.7.0)"}
